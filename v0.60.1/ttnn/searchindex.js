Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.cumprod", "ttnn/api/ttnn.cumsum", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gather", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.experimental.sort", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/ttnn_add_tensors", "ttnn/tutorials/ttnn_basic_operations", "ttnn/tutorials/ttnn_mlp_inference", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.cumprod.rst", "ttnn/api/ttnn.cumsum.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gather.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.experimental.sort.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/ttnn_add_tensors.rst", "ttnn/tutorials/ttnn_basic_operations.rst", "ttnn/tutorials/ttnn_mlp_inference.rst", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.cumprod", "ttnn.cumsum", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.conv3d", "ttnn.experimental.dropout", "ttnn.experimental.gather", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.experimental.sort", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Create and Add Two Tensors", "Basic Operations with TT-NN", "MLP inference with TT-NN", "Using TT-NN"], "terms": {"what": [0, 375, 377, 379], "i": [0, 6, 7, 8, 9, 17, 19, 29, 38, 42, 43, 46, 60, 61, 62, 67, 72, 73, 74, 80, 81, 87, 88, 91, 107, 109, 110, 113, 115, 116, 123, 124, 126, 128, 132, 134, 138, 139, 141, 154, 156, 161, 162, 175, 176, 181, 185, 188, 192, 199, 200, 201, 212, 216, 217, 219, 220, 221, 224, 227, 228, 231, 233, 235, 246, 248, 249, 251, 253, 255, 256, 258, 263, 264, 267, 272, 275, 276, 277, 282, 283, 288, 289, 293, 298, 315, 316, 328, 330, 332, 335, 337, 338, 339, 349, 351, 352, 353, 354, 356, 357, 358, 366, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "get": [0, 6, 8, 303, 355, 374, 377], "start": [0, 28, 180, 315, 374, 377, 379], "1": [0, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 69, 71, 73, 74, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 310, 312, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344, 345, 349, 356, 357, 358, 362, 367, 368, 369, 370, 371, 372, 373, 378, 380, 381, 382, 383], "instal": [0, 375, 379, 381, 385], "build": 0, "2": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 263, 265, 266, 267, 268, 270, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 351, 356, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383], "explor": 0, "our": [0, 375, 377, 378, 380, 382, 383, 384], "model": [0, 3, 227, 228, 375, 378, 379, 381, 382, 384], "demo": [0, 377, 379], "where": [0, 2, 28, 67, 72, 89, 90, 123, 124, 185, 217, 241, 258, 349, 369, 375, 379, 380, 383], "To": [0, 6, 378, 385], "go": 0, "from": [0, 2, 4, 6, 28, 30, 60, 61, 65, 66, 67, 88, 107, 128, 169, 170, 186, 259, 260, 261, 262, 297, 298, 333, 365, 374, 375, 377, 379, 380, 382, 383, 384], "here": [0, 2, 4, 377, 379, 384], "prerequisit": 0, "set": [0, 6, 9, 61, 67, 115, 217, 233, 250, 259, 260, 263, 302, 337, 355, 358, 374, 379, 381, 384, 385], "up": [0, 3, 116, 379, 381], "hardwar": [0, 2, 4, 246, 374, 375, 376, 380, 382, 385], "driver": 0, "firmwar": 0, "system": [0, 113, 134, 139, 267, 277, 282, 283, 293, 335, 379], "level": [0, 379, 382, 383], "depend": [0, 259, 260, 261, 262, 349, 375, 379, 380], "kmd": 0, "updat": [0, 42, 170, 375, 378, 385], "devic": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "flash": [0, 357], "manag": [0, 216, 275, 276, 375], "interfac": 0, "smi": 0, "option": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 379, 385], "multi": [0, 24, 30, 104, 274, 366, 380], "card": 0, "configur": [0, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376], "topologi": [0, 24, 104, 274], "metalium": [0, 4, 381], "There": [0, 4, 217, 374, 380], "ar": [0, 6, 7, 9, 17, 24, 37, 45, 48, 59, 61, 74, 81, 104, 107, 116, 185, 217, 220, 241, 250, 256, 274, 275, 276, 293, 315, 337, 352, 358, 366, 374, 375, 376, 379, 380, 383, 384, 385], "four": 0, "binari": [0, 16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 120, 121, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 221, 225, 234, 235, 236, 239, 247, 255, 256, 258, 284, 297, 299, 327, 331, 333, 370], "step": [0, 28, 315, 375, 378, 384], "latest": [0, 379], "wheel": [0, 385], "For": [0, 4, 6, 11, 21, 30, 43, 66, 74, 81, 107, 110, 122, 128, 136, 154, 181, 189, 191, 193, 194, 196, 199, 200, 210, 211, 217, 257, 264, 268, 273, 285, 318, 324, 358, 371, 374, 375, 378, 379, 380], "user": [0, 4, 157, 185, 217, 227, 228, 246, 347, 375, 376, 378], "onli": [0, 4, 6, 7, 17, 19, 20, 22, 24, 29, 38, 43, 55, 56, 57, 58, 61, 62, 72, 80, 81, 88, 116, 128, 132, 134, 139, 141, 154, 175, 176, 180, 181, 188, 192, 199, 200, 201, 212, 215, 217, 219, 224, 231, 248, 253, 261, 262, 272, 274, 277, 285, 298, 328, 330, 332, 335, 337, 357, 358, 368, 371, 374, 375, 379, 380, 385], "environ": [0, 6, 376, 381, 385], "docker": [0, 385], "releas": [0, 75, 385], "imag": [0, 67, 161, 251, 375, 379, 380, 381, 385], "sourc": [0, 3, 107, 169, 382, 383, 384], "clone": [0, 157, 358, 384], "repositori": [0, 1, 376], "librari": [0, 3, 381], "3": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 250, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 358, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383], "creat": [0, 4, 6, 28, 59, 72, 74, 89, 90, 107, 110, 113, 129, 130, 244, 245, 372, 373, 378, 379, 380, 381, 384], "virtual": [0, 381], "anaconda": 0, "packag": 0, "you": [0, 1, 2, 4, 317, 375, 376, 379, 381, 384, 385], "all": [0, 4, 6, 24, 29, 104, 107, 138, 217, 227, 228, 248, 255, 263, 264, 274, 337, 374, 375, 378, 379, 380], "verifi": [0, 378], "your": [0, 375, 376, 379], "try": [0, 6, 375, 382, 383, 384], "execut": [0, 6, 275, 276, 375, 379, 385], "program": [0, 3, 4, 24, 185, 217, 274, 353, 354, 379, 382, 383, 384], "exampl": [0, 74, 107, 110, 127, 250, 263, 288, 337, 348, 375, 376, 378, 379, 380, 381], "interest": 0, "contribut": [0, 2, 376], "us": [0, 3, 4, 6, 7, 8, 9, 24, 30, 43, 61, 65, 66, 67, 72, 81, 87, 88, 90, 94, 96, 100, 104, 106, 108, 109, 110, 116, 128, 130, 135, 136, 154, 157, 185, 217, 220, 227, 228, 245, 246, 248, 259, 260, 261, 262, 267, 268, 274, 275, 276, 287, 295, 302, 303, 316, 317, 346, 347, 350, 351, 352, 357, 358, 364, 365, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384], "basic": [0, 377, 381], "convert": [0, 3, 4, 6, 30, 59, 107, 128, 227, 228, 259, 260, 261, 262, 350, 351, 381], "torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374, 380, 383, 384], "tensor": [0, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381], "run": [0, 3, 4, 24, 42, 104, 128, 227, 274, 275, 276, 375, 376, 377, 378, 379, 381, 382, 383, 384], "an": [0, 2, 3, 4, 24, 61, 65, 66, 67, 87, 104, 105, 116, 117, 121, 138, 216, 217, 251, 258, 263, 274, 284, 348, 351, 375, 376, 377, 378, 379, 380], "oper": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 380, 381, 384], "__getitem__": 0, "slice": [0, 7], "4": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 377, 380, 383, 384], "enabl": [0, 3, 6, 378, 379], "cach": [0, 3, 30, 60, 109, 169, 170, 227, 228, 379, 380], "5": [0, 28, 42, 53, 56, 58, 72, 74, 78, 87, 89, 110, 130, 144, 145, 146, 148, 163, 209, 232, 258, 268, 319, 320, 377, 383, 384], "debug": [0, 3, 4, 378], "intermedi": 0, "6": [0, 28, 110, 232, 291, 380, 383], "trace": [0, 3, 246, 379], "graph": [0, 3, 227], "7": [0, 87, 129, 291, 383, 384], "tt_lib": [0, 115, 116, 348], "8": [0, 24, 28, 72, 87, 104, 150, 248, 274, 379, 380, 383], "log": [0, 6, 196, 370, 379, 382, 383, 384], "9": [0, 55, 57, 70, 87, 89, 313, 377, 384], "support": [0, 1, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 357, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 377, 380], "python": [0, 3, 377, 378, 379, 381, 382, 383], "10": [0, 28, 75, 87, 107, 127, 138, 156, 185, 217, 253, 271, 344, 348, 349, 350, 377, 381, 384], "chang": [0, 6, 289, 346, 347, 364, 365], "string": [0, 6, 43, 80, 136, 227, 228, 267, 268, 302], "represent": [0, 317, 380], "11": [0, 89, 377], "visual": [0, 3], "web": 0, "browser": 0, "12": [0, 62, 140, 172, 248, 290, 374, 377, 381, 383], "regist": [0, 3, 4, 275, 276], "pre": [0, 4, 220, 276, 377], "post": [0, 275, 379], "hook": [0, 275, 276], "13": [0, 383], "queri": [0, 358], "14": [0, 62, 377], "fall": [0, 175], "back": [0, 4, 355, 379, 381], "15": [0, 377, 383], "captur": 0, "c": [0, 3, 7, 42, 65, 66, 67, 105, 115, 116, 220, 303, 366, 377, 379, 380], "function": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381], "buffer": [0, 4, 6, 24, 75, 104, 246, 274, 379, 380], "alloc": [0, 4, 28, 89, 90, 129, 130, 244, 245, 372, 373, 380], "etc": [0, 3, 4], "shape": [0, 28, 42, 61, 67, 72, 73, 74, 89, 90, 107, 113, 123, 124, 129, 130, 138, 185, 217, 220, 241, 244, 245, 248, 249, 250, 263, 286, 287, 288, 289, 315, 347, 355, 358, 365, 372, 373, 374, 379, 382, 383, 384], "layout": [0, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 379, 382, 383, 384, 385], "data": [0, 3, 6, 16, 28, 29, 30, 59, 65, 66, 67, 87, 88, 89, 90, 91, 115, 116, 128, 129, 130, 131, 132, 138, 141, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 244, 245, 259, 260, 261, 262, 267, 297, 327, 333, 346, 347, 349, 350, 351, 352, 364, 365, 366, 372, 373, 374, 379, 381, 383, 385], "type": [0, 3, 4, 6, 7, 16, 28, 29, 30, 43, 59, 65, 66, 67, 73, 74, 81, 87, 88, 89, 90, 91, 105, 107, 115, 116, 123, 128, 129, 130, 131, 132, 136, 138, 141, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 244, 245, 246, 250, 259, 260, 261, 262, 267, 271, 289, 297, 316, 327, 333, 337, 346, 347, 349, 350, 351, 352, 364, 365, 372, 373, 374, 379, 384], "limit": [0, 11, 21, 43, 81, 122, 136, 154, 185, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 268, 273, 285, 318, 324, 371, 375], "bfloat8_b": [0, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 33, 34, 35, 36, 37, 38, 39, 43, 51, 53, 62, 68, 69, 70, 76, 77, 78, 79, 81, 83, 85, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 111, 112, 113, 118, 122, 125, 126, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 219, 224, 226, 231, 234, 235, 236, 237, 238, 239, 240, 255, 256, 257, 258, 264, 265, 266, 268, 272, 273, 277, 278, 279, 281, 282, 285, 291, 294, 295, 296, 297, 298, 300, 301, 304, 305, 306, 309, 310, 311, 312, 313, 318, 319, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 342, 343, 351, 359, 360, 361, 363, 368, 369, 371, 374, 379], "storag": 0, "shard": [0, 6, 17, 61, 72, 185, 217, 220, 259, 260, 261, 262, 348, 350, 358], "memori": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379], "config": [0, 6, 24, 63, 87, 88, 104, 105, 123, 124, 217, 251, 259, 260, 274, 289, 315, 353, 354, 355, 374, 377, 385], "api": [0, 4, 356, 374, 376, 377, 378, 382, 383, 385], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 351, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 380], "to_rank": [0, 380], "open_devic": [0, 9, 60, 75, 87, 88, 127, 186, 271, 337, 348, 349, 350, 382, 383, 384, 385], "close_devic": [0, 382, 383, 384, 385], "manage_devic": [0, 385], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 380], "core": [0, 4, 6, 72, 185, 217, 246, 349, 350, 364, 374, 379, 380, 383], "as_tensor": 0, "from_torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374, 383, 384, 385], "to_torch": [0, 4, 248, 374, 383, 384, 385], "to_devic": [0, 24, 26, 27, 63, 64, 75, 83, 87, 127, 158, 159, 160, 161, 162, 171, 185, 217, 218, 220, 222, 223, 230, 241, 250, 251, 252, 254, 269, 270, 271, 294, 316, 329, 334, 349, 350, 367], "from_devic": 0, "to_layout": [0, 75, 128, 351, 380, 384], "dump_tensor": 0, "load_tensor": 0, "dealloc": [0, 6, 271, 380, 385], "realloc": 0, "to_memory_config": [0, 380], "creation": [0, 28, 89, 90, 128, 129, 130, 244, 245, 372, 373, 381], "arang": 0, "empti": [0, 4, 6, 385], "empty_lik": 0, "zero": [0, 61, 65, 66, 67, 80, 106, 117, 130, 216, 241, 250, 259, 260, 261, 262, 272, 315, 316, 380, 383, 385], "zeros_lik": [0, 73], "ones": [0, 84, 123, 383], "ones_lik": 0, "full": [0, 375, 379, 381, 385], "full_lik": 0, "matrix": [0, 3, 6, 87, 185, 217, 377, 380, 383, 385], "multipl": [0, 3, 4, 6, 59, 75, 116, 129, 134, 139, 173, 217, 227, 244, 259, 260, 261, 262, 277, 335, 349, 372, 379, 383], "matmul": [0, 185, 383], "linear": [0, 24, 104, 274, 317, 374, 381], "pointwis": 0, "unari": [0, 4, 10, 12, 14, 25, 31, 33, 36, 40, 46, 50, 51, 53, 55, 57, 68, 70, 76, 78, 85, 93, 94, 96, 98, 100, 101, 111, 113, 118, 125, 134, 135, 137, 139, 143, 144, 146, 148, 150, 152, 155, 157, 164, 165, 166, 167, 168, 178, 182, 183, 187, 188, 190, 192, 195, 203, 204, 209, 214, 226, 232, 237, 240, 242, 243, 253, 265, 267, 268, 272, 277, 278, 279, 282, 283, 291, 293, 295, 300, 303, 304, 306, 308, 309, 311, 313, 317, 319, 321, 323, 325, 335, 336, 338, 340, 342, 344, 359, 360, 361, 363], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 32], "asinh": [0, 34], "atan": [0, 39], "atanh": [0, 41], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 52, 220], "celu": [0, 54], "clamp": [0, 56], "clip": [0, 58], "co": 0, "cosh": [0, 71], "deg2rad": [0, 77], "digamma": [0, 79], "experiment": [0, 6, 375], "dropout": 0, "gelu_bw": 0, "elu": [0, 86], "eqz": 0, "erf": [0, 95], "erfc": [0, 97], "erfinv": [0, 99], "exp": [0, 363, 385], "exp2": [0, 102], "expm1": [0, 112], "fill": [0, 114, 116, 117, 129, 130, 244, 245, 286, 315, 372, 373, 379, 382, 383, 384], "floor": [0, 80, 81, 119, 120, 267, 268], "frac": [0, 37, 80, 126], "geglu": 0, "gelu": [0, 6, 108, 134, 136, 374], "glu": 0, "gez": 0, "gtz": 0, "hardshrink": [0, 145, 179], "hardsigmoid": [0, 147], "hardswish": [0, 149], "hardtanh": [0, 151], "heavisid": 0, "i0": [0, 156], "ident": [0, 74], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 179], "lez": 0, "lgamma": [0, 184], "log10": [0, 189], "log1p": [0, 191], "log2": [0, 193], "log_sigmoid": 0, "logical_not": [0, 204], "logical_not_": 0, "logit": [0, 210], "ltz": 0, "mish": [0, 6], "multigammaln": 0, "neg": [0, 238, 257], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 254], "prelu": 0, "rad2deg": [0, 266], "rdiv": [0, 268], "reciproc": [0, 273, 296, 380], "reglu": 0, "relu": [0, 6, 16, 178, 234, 277, 281, 282, 283, 317, 333, 363, 381], "relu_max": 0, "relu_min": 0, "relu6": [0, 280], "remaind": [0, 285], "round": [0, 35, 80, 81, 267, 268, 292, 380], "rsqrt": 0, "selu": [0, 301], "sigmoid": [0, 6, 196, 305], "sigmoid_accur": 0, "sign": [0, 307], "signbit": 0, "silu": [0, 6, 310, 335, 385], "sin": [0, 312], "sinh": [0, 314], "softmax": [0, 353, 354], "softplu": [0, 6, 318], "softshrink": [0, 320], "softsign": [0, 322], "sqrt": [0, 6, 153], "squar": [0, 6, 230, 296, 324, 326, 327, 353, 354, 380], "swiglu": 0, "swish": 0, "tan": [0, 339], "tanh": [0, 6, 43, 108, 136, 341], "tanhshrink": [0, 343], "threshold": [0, 317, 318, 345], "tril": 0, "triu": 0, "trunc": [0, 80, 81, 267, 268], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 162, 251, 270, 375], "angl": [0, 27], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 64], "polar": [0, 252], "alt_complex_rotate90": 0, "add": [0, 17, 248, 353, 354, 375, 377, 378, 381, 383, 385], "addalpha": [0, 19], "subalpha": [0, 332], "multipli": [0, 6, 18, 20, 22, 185, 217, 231, 331, 366, 385], "subtract": [0, 297, 298, 330, 358, 385], "div": 0, "div_no_nan": [0, 83], "floor_div": 0, "fmod": [0, 122], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 294], "rsub": 0, "ldexp": [0, 175], "logical_and": 0, "logical_or": 0, "logical_xor": 0, "bitwise_and": [0, 45, 48], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 200], "logaddexp2": [0, 199], "hypot": [0, 154], "xlogi": [0, 371], "squared_differ": [0, 328], "gt": 0, "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": 0, "le": 0, "eq": 0, "ne": 0, "isclos": 0, "nextaft": 0, "maximum": [0, 6, 29, 55, 56, 57, 58, 151, 219, 220], "minimum": [0, 4, 55, 56, 57, 58, 151, 224, 380], "outer": 0, "pow": 0, "polyv": 0, "scatter": [0, 274], "atan2": [0, 38], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 20, 22, 180, 215, 368], "addcdiv": [0, 21], "addcmul": [0, 23], "mac": 0, "lerp": [0, 181], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 171, 230, 384], "l1_loss": 0, "mse_loss": 0, "reduct": [0, 3, 6, 29, 73, 74, 171, 218, 222, 223, 230, 263, 329, 334, 352, 367], "cumprod": 0, "max": [0, 55, 56, 57, 58, 150, 151, 220, 282], "mean": [0, 6, 42, 171, 230, 380], "min": [0, 55, 56, 57, 58, 150, 151, 282, 283], "std": [0, 4, 250, 302, 352], "sum": [0, 74, 229, 381], "var": 0, "argmax": [0, 384], "prod": [0, 72, 264], "topk": 0, "sort": [0, 352], "cumsum": 0, "movement": 0, "concat": [0, 62, 378], "nonzero": 0, "pad": [0, 59, 65, 66, 67, 87, 116, 123, 124, 128, 220, 249, 250, 259, 260, 261, 262, 289, 315, 347, 349, 380], "permut": [0, 220, 358], "reshap": [0, 6, 220, 358, 384], "repeat": [0, 3, 287, 288, 383], "repeat_interleav": 0, "tiliz": [0, 30, 42], "tilize_with_val_pad": 0, "fill_rm": [0, 115], "fill_ones_rm": 0, "until": [0, 73, 351, 365], "untilize_with_unpad": 0, "indexed_fil": 0, "gather": [0, 24, 104], "normal": [0, 42, 140, 157, 172, 290, 316, 384], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "moreh": [0, 229], "moreh_sum": 0, "transform": [0, 3, 185, 251, 374, 384], "split_query_key_value_and_split_head": 0, "concatenate_head": 0, "attention_softmax": 0, "attention_softmax_": 0, "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 3, 24, 274], "all_gath": 0, "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 88, 109], "convolut": [0, 3, 61, 65, 66, 67, 105, 220, 259, 260, 261, 262], "conv1d": [0, 6], "conv2d": [0, 6, 7, 67, 259, 260, 261, 262], "conv3d": 0, "conv_transpose2d": [0, 6], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 65, 66, 67, 259, 260, 261, 262], "act_block_h_overrid": [0, 6], "act_block_w_div": [0, 6], "activ": [0, 6, 16, 91, 131, 132, 141, 151, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 297, 327, 333, 374, 377, 381, 384], "core_grid": [0, 6, 72, 140, 185, 217, 374], "deallocate_activ": [0, 6], "enable_act_double_buff": [0, 6], "enable_kernel_stride_fold": [0, 6], "enable_split_read": [0, 6], "enable_subblock_pad": [0, 6], "enable_weights_double_buff": [0, 6], "in_plac": [0, 6, 220], "output_layout": [0, 6, 140], "override_sharding_config": [0, 6], "reallocate_halo_output": [0, 6], "reshard_if_not_optim": [0, 6], "shard_layout": [0, 6], "transpose_shard": [0, 6], "weights_dtyp": [0, 6, 259, 260], "conv2dsliceconfig": 0, "slicetypeenum": [0, 7], "sliceheight": [0, 7], "slicewidth": [0, 7], "name": [0, 4, 7, 30, 84, 186, 227, 228, 356, 374, 377, 378, 379, 384, 385], "valu": [0, 6, 7, 18, 19, 20, 21, 22, 23, 28, 29, 42, 53, 54, 55, 56, 57, 58, 61, 63, 74, 78, 83, 86, 89, 90, 107, 110, 113, 115, 116, 123, 128, 129, 130, 138, 144, 145, 146, 148, 150, 151, 152, 160, 161, 162, 163, 169, 170, 179, 183, 211, 218, 220, 222, 223, 233, 244, 245, 246, 248, 250, 253, 256, 257, 267, 282, 283, 289, 293, 294, 300, 315, 317, 318, 319, 320, 329, 331, 332, 334, 344, 345, 347, 352, 358, 359, 360, 367, 372, 373, 375, 380, 382, 383, 385], "num_slic": [0, 7], "slice_typ": [0, 7], "pool": [0, 138, 220, 366], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 77, 266, 381], "model_preprocess": [0, 374], "preprocess_model": 0, "preprocess_model_paramet": [0, 374], "report": [0, 66, 217, 375, 385], "set_printopt": [0, 385], "register_pre_operation_hook": [0, 385], "register_post_operation_hook": [0, 385], "tutori": [0, 376, 382, 383], "two": [0, 59, 61, 134, 139, 217, 277, 289, 335, 349, 358, 374, 377, 380, 381, 384], "import": [0, 4, 74, 107, 110, 220, 374, 375, 377, 379, 381, 385], "necessari": [0, 59, 375, 381], "open": [0, 3, 216, 246, 381, 385], "tenstorr": [0, 2, 4, 6, 24, 274, 374, 375, 376, 377, 381, 385], "perform": [0, 6, 11, 13, 15, 17, 19, 21, 23, 24, 26, 27, 32, 34, 35, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 64, 69, 70, 71, 77, 78, 79, 81, 83, 86, 92, 95, 97, 99, 102, 103, 104, 107, 112, 114, 117, 119, 121, 122, 125, 126, 133, 134, 136, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 175, 177, 179, 181, 183, 184, 189, 191, 193, 194, 196, 199, 200, 204, 209, 210, 211, 213, 216, 217, 219, 220, 224, 231, 232, 233, 236, 238, 242, 243, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 273, 274, 277, 280, 281, 284, 285, 287, 292, 293, 294, 296, 298, 300, 301, 303, 305, 307, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 324, 326, 328, 330, 332, 335, 336, 339, 341, 343, 344, 345, 359, 360, 362, 369, 371, 374, 375, 377, 378, 381, 383, 384], "addit": [0, 107, 110, 217, 374, 381, 383, 384], "output": [0, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 381, 385], "helper": [0, 381], "prepar": [0, 6, 375, 381], "host": [0, 30, 65, 66, 127, 248, 315, 337, 377, 379, 380, 381], "tile": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 379, 380, 381, 382], "nativ": [0, 3, 381], "base": [0, 4, 6, 7, 42, 61, 72, 107, 217, 249, 377, 380, 381], "arithmet": [0, 381], "simul": [0, 381], "broadcast": [0, 16, 17, 18, 81, 91, 107, 132, 141, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 234, 235, 288, 327, 330, 331, 333, 356, 381, 384, 385], "row": [0, 6, 52, 105, 114, 116, 117, 119, 126, 241, 292, 307, 362, 379, 380, 381], "vector": [0, 4, 217, 255, 303, 381], "expans": [0, 381], "mlp": [0, 381], "infer": [0, 42, 66, 375, 379, 381], "load": [0, 3, 186, 381], "mnist": [0, 381], "test": [0, 4, 374, 375, 378, 379, 381, 383, 385], "pretrain": [0, 381], "weight": [0, 6, 42, 65, 66, 67, 87, 88, 105, 140, 172, 180, 185, 258, 259, 260, 261, 262, 290, 374, 381], "accuraci": [0, 340, 375, 381], "track": [0, 381], "loop": [0, 381], "flatten": [0, 381], "layer": [0, 379, 381], "pytorch": [0, 3, 29, 65, 66, 67, 110, 217, 259, 260, 261, 262, 352, 356, 358, 381, 383, 385], "result": [0, 28, 30, 42, 107, 116, 128, 130, 157, 185, 217, 220, 245, 259, 260, 261, 262, 263, 267, 272, 373, 379, 380, 381, 382, 383], "onboard": 0, "new": [0, 90, 130, 245, 286, 289, 373, 375, 379], "rewrit": 0, "switch": [0, 248, 317], "optim": [0, 6, 380, 384], "more": [0, 1, 3, 4, 11, 21, 43, 66, 81, 122, 136, 154, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 268, 272, 273, 285, 318, 324, 371, 376, 377, 379, 380, 382, 383], "ad": [0, 65, 66, 67, 185, 259, 260, 261, 262, 378], "faq": 0, "need": [0, 1, 2, 7, 185, 217, 375, 377, 379, 380, 385], "implement": [0, 6, 65, 73, 217, 248, 356, 357, 358, 374, 378, 379], "bind": 0, "golden": [0, 374, 385], "profil": [0, 157, 302, 377, 381, 385], "perf": 0, "header": 0, "profile_thi": 0, "descript": [0, 115, 116, 378], "uplift": 0, "bug": 0, "featur": [0, 3, 6, 378, 385], "propos": [0, 378], "request": [0, 349, 378], "troubleshoot": [0, 375], "tip": 0, "commun": [0, 377], "develop": [0, 3, 6, 376, 377, 378, 379, 382], "index": [0, 107, 169, 170, 352, 357, 379], "modul": [0, 4, 67, 227, 228, 374, 384], "search": 0, "page": [0, 377], "If": [1, 2, 4, 6, 7, 29, 59, 65, 66, 67, 72, 74, 107, 110, 185, 217, 227, 228, 246, 248, 250, 263, 264, 315, 316, 337, 351, 352, 357, 358, 376, 377, 378, 379, 385], "would": [1, 378, 379, 380], "like": [1, 117, 317, 374, 377, 379, 380, 382, 385], "thi": [1, 4, 6, 7, 8, 9, 29, 42, 59, 61, 65, 66, 67, 74, 88, 108, 109, 110, 113, 123, 124, 138, 157, 175, 220, 249, 259, 260, 261, 262, 263, 282, 283, 317, 356, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "project": [1, 2, 3, 376], "pleas": [1, 2, 217, 375, 376, 377, 378, 385], "review": [1, 376, 378, 382, 383], "standard": [1, 2, 283, 375, 376, 377], "gain": 1, "write": [1, 4, 72, 185, 217, 374, 380], "access": [1, 2, 3, 377], "read": [1, 72, 376, 380], "section": [1, 2, 375, 380], "detail": [1, 4, 11, 21, 43, 81, 122, 136, 154, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 268, 273, 285, 318, 324, 371, 376, 385], "contact": 1, "u": [1, 378, 384], "have": [2, 4, 29, 74, 75, 88, 107, 124, 180, 217, 259, 260, 263, 267, 346, 347, 352, 364, 365, 375, 377, 379, 380, 381], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 6, 217, 317, 375, 378, 379], "file": [2, 4, 30, 84, 186, 375, 377, 379, 382, 383, 384, 385], "github": [2, 24, 274, 376, 377], "can": [2, 3, 4, 6, 7, 28, 43, 55, 56, 57, 58, 65, 66, 67, 80, 81, 90, 130, 136, 217, 245, 248, 259, 260, 261, 262, 267, 268, 275, 276, 317, 337, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385], "check": [2, 4, 217, 375, 377], "out": [2, 4, 6, 73, 106, 107, 110, 283, 315, 352, 377, 382], "relev": [2, 375], "ever": 2, "help": [2, 378, 381], "we": [2, 124, 128, 217, 351, 375, 377, 378, 380, 382, 383, 384, 385], "offici": [2, 377], "discord": 2, "channel": [2, 6, 24, 42, 65, 66, 67, 104, 115, 116, 138, 220, 259, 260, 261, 262, 274, 366, 379], "repres": [2, 3, 379, 380], "both": [2, 6, 17, 65, 66, 67, 74, 217, 256, 259, 260, 261, 262, 374, 375, 379, 380], "metal": [2, 3, 24, 274, 376, 377], "join": 2, "discuss": [2, 375], "board": 2, "member": [2, 7], "bounc": 2, "idea": [2, 375], "off": [2, 282, 291, 374, 380], "each": [2, 7, 42, 61, 107, 116, 138, 220, 248, 286, 288, 315, 379, 380, 384], "other": [2, 4, 6, 107, 217, 374, 375, 376, 377, 380, 383, 385], "refer": [2, 3, 11, 21, 43, 66, 75, 81, 90, 113, 122, 136, 154, 189, 191, 193, 194, 196, 199, 200, 210, 211, 217, 233, 257, 264, 268, 273, 285, 318, 324, 371, 378, 380, 385], "code": [2, 4, 29, 110, 275, 276, 352, 358, 376, 377, 378, 379, 382, 383, 384, 385], "conduct": 2, "when": [2, 4, 6, 7, 8, 9, 42, 61, 65, 66, 67, 72, 81, 109, 154, 201, 216, 217, 221, 227, 250, 256, 263, 268, 349, 375, 378, 380, 385], "interact": 2, "neural": 3, "network": 3, "built": [3, 271, 377], "It": [3, 4, 6, 7, 65, 66, 67, 227, 228, 351], "design": [3, 382], "feel": 3, "familiar": 3, "experienc": 3, "kei": [3, 358, 374, 380], "includ": [3, 4, 59, 375, 380, 383], "than": [3, 6, 7, 61, 78, 115, 116, 132, 133, 141, 142, 176, 177, 183, 212, 213, 233, 263, 377, 379, 385], "200": 3, "fuse": [3, 6, 374], "A": [3, 4, 6, 28, 107, 129, 130, 217, 244, 245, 317, 357, 372, 373, 375, 377, 378, 380], "differ": [3, 6, 67, 217, 303, 327, 380, 383, 384, 385], "wai": [3, 227, 228, 374, 377, 383], "distribut": [3, 72, 185, 217, 377, 380], "The": [3, 4, 6, 7, 8, 9, 24, 25, 28, 30, 59, 60, 65, 66, 67, 75, 84, 85, 87, 88, 89, 90, 104, 107, 108, 110, 113, 116, 128, 129, 130, 138, 152, 178, 185, 216, 217, 220, 233, 244, 245, 246, 249, 259, 260, 261, 262, 274, 275, 276, 282, 283, 286, 337, 348, 351, 352, 356, 357, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385], "abil": 3, "custom": [3, 4, 275, 276, 377], "mesh": [3, 24, 128, 274, 351, 377], "tool": [3, 377, 379], "comput": [3, 4, 18, 20, 22, 37, 59, 65, 66, 67, 74, 80, 82, 105, 107, 120, 131, 138, 140, 153, 163, 172, 173, 174, 180, 185, 197, 198, 201, 202, 205, 206, 207, 208, 215, 217, 221, 225, 239, 247, 255, 259, 260, 261, 262, 263, 290, 299, 316, 327, 331, 353, 354, 357, 358, 368, 370, 379, 383, 384], "util": [3, 377, 380, 384], "paramet": [3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 384], "significantli": [3, 6], "speed": 3, "comparison": [3, 163, 378], "mode": [3, 35, 42, 43, 81, 94, 96, 100, 135, 136, 171, 220, 230, 268, 295, 303], "long": [3, 378], "sequenc": [3, 4, 356, 357], "against": [3, 107, 375, 385], "known": [3, 67], "document": [4, 375, 378], "meant": 4, "contributor": 4, "Not": [4, 236, 374, 385], "mai": [4, 6, 75, 81, 154, 175, 217, 268, 272, 348, 374, 377, 380, 385], "grayskul": [4, 30, 374, 385], "wormhol": [4, 30, 374, 377, 381, 385], "take": [4, 263, 355, 375, 376, 380], "one": [4, 55, 56, 57, 58, 107, 263, 376, 383], "input": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 379, 380, 382, 383, 384, 385], "produc": [4, 272, 375], "call": [4, 6, 73, 128, 275, 276, 351, 378, 379, 380, 383, 385], "optiona": 4, "b": [4, 109, 288, 356, 357, 377], "composit": 4, "struct": 4, "specifi": [4, 6, 28, 59, 74, 84, 89, 90, 107, 110, 129, 130, 185, 217, 227, 228, 244, 245, 248, 249, 250, 263, 286, 337, 347, 356, 357, 372, 373, 374, 379], "how": [4, 7, 375, 379, 380, 382, 383, 384, 385], "simpli": [4, 349], "defin": [4, 30, 378, 380, 384], "method": [4, 271], "ttnn": [4, 377, 378, 380, 382, 383, 384, 385], "register_oper": 4, "exist": [4, 246, 379], "bind_registered_oper": 4, "auto": 4, "attach": [4, 227, 228], "attach_golden_funct": 4, "let": [4, 380, 382, 383, 384], "": [4, 6, 59, 65, 66, 67, 73, 227, 228, 356, 357, 375, 377, 380, 382, 383, 384], "just": [4, 259, 260, 261, 262], "copi": [4, 59, 127, 157, 348, 377], "In": [4, 106, 217, 289, 349, 354, 374, 379, 380, 384], "order": [4, 72, 110, 217, 254, 298, 352, 379, 380, 385], "follow": [4, 6, 67, 110, 116, 217, 289, 374, 376, 377, 378, 379, 380, 381, 385], "directori": [4, 377], "structur": [4, 6, 7, 374], "shown": [4, 380, 382, 383, 384], "below": [4, 73, 217, 375, 379, 380, 382, 383, 384], "cpp": 4, "categori": 4, "operation_nam": 4, "_device_oper": 4, "hpp": 4, "program_factory_0": 4, "_program_factori": 4, "mani": [4, 374], "factori": 4, "But": 4, "requir": [4, 17, 19, 35, 42, 62, 72, 81, 115, 116, 129, 227, 228, 231, 244, 298, 330, 332, 369, 372, 375, 377, 379, 383], "concret": [4, 217], "found": [4, 374], "example_device_oper": 4, "spdx": [4, 382, 383, 384, 385], "filecopyrighttext": [4, 382, 383, 384, 385], "2023": 4, "inc": [4, 385], "licens": [4, 382, 383, 384, 385], "identifi": [4, 382, 383, 384, 385], "apach": [4, 382, 383, 384, 385], "0": [4, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 73, 74, 75, 76, 78, 80, 81, 85, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 108, 111, 113, 114, 115, 116, 118, 123, 127, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 144, 145, 146, 148, 152, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 179, 180, 182, 183, 186, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 209, 211, 212, 214, 216, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 244, 245, 246, 248, 250, 251, 255, 256, 257, 263, 264, 265, 267, 268, 269, 271, 272, 274, 278, 279, 282, 283, 288, 289, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 315, 316, 317, 319, 320, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 369, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385], "pragma": 4, "onc": [4, 259, 260, 261, 262, 377], "variant": 4, "device_oper": 4, "decor": [4, 378], "namespac": 4, "exampledeviceoper": 4, "attribut": [4, 374, 379, 380], "store": [4, 6, 42, 107, 379, 380], "variabl": [4, 377, 385], "aren": [4, 8], "t": [4, 8, 157, 217, 227, 228, 379, 384], "operation_attributes_t": 4, "bool": [4, 17, 19, 29, 30, 35, 42, 62, 65, 66, 67, 72, 75, 80, 81, 94, 96, 100, 107, 135, 140, 163, 171, 185, 217, 220, 227, 228, 230, 231, 248, 261, 262, 263, 295, 298, 303, 330, 332, 346, 347, 352, 353, 354, 356, 357, 358, 364, 365, 369], "int": [4, 10, 12, 14, 16, 17, 18, 19, 24, 25, 28, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 65, 66, 67, 68, 72, 73, 74, 76, 80, 81, 85, 87, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 143, 152, 155, 157, 160, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 182, 185, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 216, 217, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 246, 248, 249, 250, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 272, 274, 277, 278, 279, 282, 283, 287, 291, 295, 297, 298, 303, 304, 306, 308, 309, 310, 311, 315, 316, 317, 323, 324, 325, 327, 330, 331, 332, 333, 335, 337, 338, 340, 341, 342, 346, 347, 351, 352, 353, 354, 356, 357, 358, 361, 363, 364, 365, 366, 368, 369, 373, 380], "some_other_attribut": 4, "argument": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "pass": [4, 6, 65, 66, 108, 109, 116, 275, 276, 358, 374, 378], "don": [4, 217], "thei": [4, 7, 217, 375, 383], "tensor_args_t": 4, "const": [4, 302], "input_tensor": [4, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 123, 125, 126, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 172, 177, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 209, 210, 211, 213, 214, 220, 226, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 373, 385], "howev": [4, 248], "show": [4, 217, 380], "els": [4, 80], "done": [4, 6, 375, 377, 379, 384], "io_tensor": 4, "optional_output_tensor": [4, 185, 217], "vector_of_tensor": 4, "tupl": [4, 65, 66, 67, 72, 248, 259, 260, 261, 262, 352, 358], "tuple_of_tensor": 4, "vector_of_optional_tensor": 4, "some_crazy_tuple_of_tensor": 4, "return": [4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384], "spec": [4, 72], "singl": [4, 357, 374, 378, 379, 380], "tensorspec": 4, "spec_return_value_t": 4, "tensor_return_value_t": 4, "note": [4, 6, 64, 73, 107, 159, 217, 244, 245, 270, 289, 377, 379, 380, 385], "should": [4, 6, 67, 134, 139, 157, 163, 180, 217, 220, 241, 248, 256, 277, 335, 375, 377, 378, 379, 382, 384], "same": [4, 6, 16, 18, 20, 22, 37, 44, 45, 47, 48, 49, 65, 66, 67, 73, 74, 80, 82, 88, 90, 91, 92, 107, 113, 115, 120, 130, 131, 132, 133, 141, 142, 153, 157, 163, 173, 174, 176, 177, 180, 185, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 221, 225, 227, 228, 234, 235, 236, 239, 241, 245, 247, 255, 256, 259, 260, 261, 262, 297, 299, 327, 331, 333, 349, 352, 356, 368, 370, 373, 377, 379, 380, 384], "pattern": [4, 61, 227, 378, 384], "e": [4, 217, 379, 380, 385], "singlecor": 4, "share": [4, 380], "between": [4, 28, 42, 65, 66, 67, 217, 259, 260, 261, 262, 350, 377], "override_runtime_argu": 4, "shared_variables_t": 4, "tt_metal": [4, 337, 366, 377, 379], "kernelhandl": 4, "unary_reader_kernel_id": 4, "unary_writer_kernel_id": 4, "cached_program_t": 4, "cachedprogram": 4, "static": 4, "operation_attribut": 4, "tensor_arg": 4, "tensor_return_valu": 4, "void": 4, "cached_program": 4, "multicor": [4, 248, 346, 347, 364, 365], "size_t": 4, "num_cor": [4, 6], "num_cores_i": 4, "program_factory_t": 4, "mandatori": 4, "select": [4, 6, 42, 378], "arg": [4, 116, 250, 259, 260, 261, 262, 275, 276, 337, 385], "select_program_factori": 4, "valid": [4, 6, 24, 104, 115, 116, 217, 227, 228, 274, 374, 375, 379, 380], "usual": 4, "validate_on_program_cache_miss": 4, "reus": [4, 259, 260, 261, 262], "less": [4, 176, 177, 212, 213, 263, 377, 379, 385], "validate_on_program_cache_hit": 4, "compute_output_spec": 4, "create_output_tensor": 4, "map": [4, 30], "abl": 4, "prim": 4, "after": [4, 6, 105, 248, 275, 378, 379, 385], "op": [4, 6, 7, 8, 29, 65, 66, 67, 72, 88, 140, 220, 316, 337, 356, 357, 363, 378, 379, 385], "keep": [4, 29, 263, 374, 380], "mind": 4, "overload": [4, 337], "queue_id": [4, 10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 67, 68, 73, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 111, 113, 114, 115, 116, 118, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 278, 279, 282, 283, 289, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 315, 317, 323, 324, 325, 327, 330, 331, 332, 333, 338, 340, 341, 342, 346, 347, 352, 356, 357, 361, 363, 364, 365, 368, 369, 373], "automat": [4, 216, 349, 375, 379, 380], "primit": 4, "so": [4, 6, 116, 374], "also": [4, 6, 65, 66, 67, 74, 233, 375, 379], "invok": 4, "case": [4, 80, 128, 163, 217, 239, 258, 349, 374, 375, 380, 385], "hash": [4, 227, 228, 379], "stl": 4, "hash_t": 4, "compute_program_hash": 4, "create_op_performance_model": 4, "opperformancemodel": 4, "make": [4, 227, 228, 317, 352, 358, 374, 380, 385], "avail": [4, 6, 366, 381, 385], "constexpr": 4, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 4, "true": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 384, 385], "logical_shap": 4, "tensorlayout": 4, "dtype": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 380, 382, 383, 384, 385], "pageconfig": 4, "memoryconfig": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "output_spec": 4, "create_device_tensor": 4, "42": 4, "single_core_program_factori": 4, "work_split": 4, "output_tensor": [4, 10, 12, 14, 16, 18, 25, 29, 31, 33, 36, 40, 44, 45, 46, 47, 48, 49, 51, 61, 68, 76, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 111, 113, 114, 118, 124, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 234, 235, 237, 238, 240, 245, 256, 257, 265, 267, 272, 278, 279, 282, 283, 291, 295, 296, 297, 303, 304, 306, 308, 309, 310, 311, 317, 323, 324, 325, 327, 331, 333, 338, 340, 341, 342, 352, 361, 363, 368, 369, 373, 385], "src_buffer": 4, "dst_buffer": 4, "dataformat": 4, "cb_data_format": 4, "datatype_to_dataformat_convert": 4, "uint32_t": [4, 106], "single_tile_s": 4, "tiles": 4, "cb_data_format_output": 4, "single_tile_size_output": 4, "num_til": 4, "physical_volum": 4, "constant": [4, 380], "tile_hw": 4, "corecoord": 4, "compute_with_storage_grid_s": 4, "y": [4, 37, 251, 379, 380], "all_cor": 4, "core_group_1": 4, "core_group_2": 4, "num_tiles_per_core_group_1": 4, "num_tiles_per_core_group_2": 4, "split_work_to_cor": 4, "src0_cb_index": 4, "cbindex": 4, "c_0": 4, "num_input_til": 4, "circularbufferconfig": 4, "cb_src0_config": 4, "set_page_s": 4, "createcircularbuff": 4, "output_cb_index": 4, "c_2": 4, "num_output_til": 4, "cb_output_config": 4, "src_is_dram": 4, "buffer_typ": 4, "buffertyp": 4, "dram": [4, 6, 7, 348, 350, 380], "reader_compile_time_arg": 4, "dst_is_dram": 4, "writer_compile_time_arg": 4, "createkernel": 4, "eltwis": [4, 121, 258, 284, 382], "kernel": [4, 6, 59, 65, 66, 67, 105, 108, 140, 185, 217, 220, 259, 260, 261, 262, 316, 377, 379], "dataflow": 4, "reader_unary_interleaved_start_id": 4, "readerdatamovementconfig": 4, "writer_unary_interleaved_start_id": 4, "writerdatamovementconfig": 4, "compute_kernel_args_group_1": 4, "per_core_block_cnt": 4, "per_core_block_s": 4, "math_approx_mod": 4, "fals": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 384, 385], "eltwise_sfpu": 4, "computeconfig": 4, "math_fidel": 4, "mathfidel": 4, "hifi4": [4, 379], "compile_arg": 4, "rang": [4, 16, 28, 44, 45, 46, 47, 48, 49, 70, 115, 116, 131, 156, 173, 175, 190, 221, 226, 232, 234, 253, 291, 293, 313, 333, 338, 339, 340, 380, 384], "compute_kernel_args_group_2": 4, "num_tiles_written": 4, "num_tiles_per_cor": 4, "contain": [4, 6, 28, 74, 87, 107, 220, 272, 380], "tt_assert": 4, "setruntimearg": 4, "address": 4, "move": [4, 6, 123, 124, 375], "shared_vari": 4, "runtime_arg": 4, "getruntimearg": 4, "multi_core_program_factori": 4, "idevic": [4, 65, 66, 67, 259, 260, 337], "written": [4, 169, 170, 185, 217, 381], "compositeexampleoper": 4, "composite_exampl": 4, "another_copi": 4, "_pybind": 4, "example_pybind": 4, "pybind": 4, "pybind_fwd": 4, "py": [4, 374, 375, 379, 381, 382, 383, 384, 385], "pybind11": 4, "bind_example_oper": 4, "r": [4, 251, 377], "doc": 4, "expos": 4, "logic": [4, 201, 202, 205, 206, 208, 217, 227, 228], "self": [4, 374, 380, 384], "correct": [4, 384], "specif": [4, 6, 29, 110, 217, 246, 357, 375, 377, 380], "pybind_overload_t": 4, "decltyp": 4, "examples_pybind": 4, "py_modul": 4, "final": [4, 217, 374, 375, 378, 382, 383, 384], "wherev": 4, "want": [4, 377, 385], "compar": [4, 91, 132, 141, 176, 212, 217, 235], "its": [4, 59, 67, 90, 221, 248, 315, 374, 375, 378, 379, 380, 385], "equival": [4, 29, 110, 352, 358, 377, 380], "signatur": 4, "And": [4, 374, 380], "ignor": 4, "kwarg": [4, 259, 260, 261, 262, 275, 276, 337, 385], "def": [4, 374, 382, 383, 384, 385], "golden_funct": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "befor": [4, 6, 30, 74, 248, 259, 260, 261, 262, 276, 317, 375, 380], "some": [4, 337, 377, 383, 385], "preprocess": [4, 6, 30, 65, 66, 67, 227, 228, 259, 260, 261, 262, 380], "postprocess": 4, "manual": [4, 374, 377, 385], "pack": [4, 364, 365], "preprocess_golden_function_input": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "ttnn_input_tensor": 4, "postprocess_golden_function_output": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "torch_output_tensor": [4, 385], "becaus": [4, 380], "wa": [4, 73, 375, 379, 380], "class": [6, 7, 374, 375, 379, 380, 384], "pybind11_object": [6, 7, 380], "flag": [6, 30], "properti": [6, 7, 380], "control": [6, 377], "size": [6, 7, 28, 65, 66, 67, 74, 87, 88, 107, 217, 220, 246, 258, 259, 260, 261, 262, 263, 315, 356, 357, 358, 366, 380, 382, 384, 385], "block": [6, 65, 66, 67, 72, 216, 217, 220, 259, 260, 261, 262, 272, 380], "height": [6, 7, 59, 61, 65, 66, 67, 72, 115, 116, 129, 138, 217, 220, 244, 259, 260, 261, 262, 349, 372, 379, 380], "gener": [6, 87, 106, 116, 217, 251, 375, 379, 384], "chunk": [6, 356, 357], "l1": [6, 7, 72, 185, 217, 246, 348, 350, 380], "divid": [6, 7, 81, 353, 354], "among": 6, "further": 6, "subdivid": 6, "within": [6, 28, 45, 48, 220, 375, 380], "possibl": [6, 217, 351, 374], "which": [6, 45, 48, 72, 73, 74, 107, 110, 129, 130, 185, 217, 220, 227, 228, 244, 245, 267, 315, 316, 356, 357, 372, 373, 374, 379, 380, 382, 383, 384], "equal": [6, 91, 92, 110, 132, 133, 163, 176, 177, 235, 236, 385], "output_matrix_height_per_cor": 6, "lead": 6, "larg": [6, 7, 317, 374, 380, 383], "temporari": 6, "circular": 6, "oom": 6, "must": [6, 25, 29, 42, 65, 66, 74, 88, 105, 107, 233, 257, 259, 260, 267, 289, 315, 346, 347, 348, 352, 364, 365, 377, 380], "32": [6, 24, 59, 61, 62, 75, 105, 116, 127, 129, 134, 138, 139, 185, 217, 241, 242, 243, 244, 247, 248, 250, 258, 264, 271, 277, 287, 288, 299, 315, 316, 335, 348, 349, 350, 363, 372, 380, 382, 383, 385], "evenli": [6, 28], "reduc": [6, 7, 29, 263, 274, 352], "width": [6, 7, 59, 65, 66, 67, 72, 115, 116, 129, 138, 217, 220, 244, 259, 260, 261, 262, 349, 355, 372, 379], "prevent": 6, "greater": [6, 61, 78, 115, 116, 132, 133, 141, 142, 183, 233, 385], "n150": 6, "thats": 6, "64": [6, 61, 72, 75, 127, 134, 139, 185, 217, 250, 271, 277, 315, 316, 335, 348, 349, 350, 380, 384, 385], "2048": [6, 385], "divisor": [6, 131, 268], "halv": 6, "appli": [6, 7, 10, 12, 14, 16, 25, 31, 33, 36, 42, 46, 51, 59, 65, 66, 67, 68, 74, 76, 85, 91, 93, 94, 96, 98, 100, 101, 105, 106, 108, 109, 111, 113, 118, 131, 132, 134, 135, 137, 138, 139, 141, 143, 152, 155, 164, 165, 166, 167, 168, 173, 174, 176, 178, 182, 185, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 217, 220, 221, 225, 226, 234, 235, 237, 240, 248, 259, 260, 261, 262, 265, 272, 277, 278, 279, 282, 283, 291, 295, 297, 303, 304, 306, 308, 309, 311, 317, 323, 325, 327, 333, 335, 338, 340, 342, 361, 363, 375], "sigmoid_approx": 6, "grid": [6, 185, 217, 356, 357, 364, 374, 380], "boolean": [6, 161, 162, 340, 352], "indic": [6, 29, 87, 88, 107, 110, 241, 315, 365], "whether": [6, 29, 30, 75, 185, 217, 220, 227, 228, 261, 262, 346, 347, 352, 357, 358, 364, 365], "conv": [6, 65, 66, 67], "halo": [6, 7, 220], "micro": 6, "anoth": [6, 73, 377], "doubl": 6, "allow": [6, 217, 375, 378, 383, 384], "stall": 6, "reader": [6, 227], "improv": [6, 317, 375], "increas": 6, "usag": [6, 375, 377], "fold": 6, "stride": [6, 65, 66, 67, 220, 259, 260, 261, 262], "match": [6, 59, 217, 227, 228, 289, 380, 382, 383, 384], "dimens": [6, 7, 24, 25, 29, 59, 61, 62, 74, 107, 110, 129, 134, 138, 139, 160, 217, 218, 222, 223, 244, 248, 250, 258, 263, 264, 274, 277, 286, 288, 289, 315, 316, 329, 334, 335, 349, 351, 352, 355, 356, 357, 358, 367, 372, 380, 383], "under": [6, 375, 378, 379, 385], "without": [6, 90, 377], "notic": 6, "caution": [6, 377], "product": [6, 73, 217, 263, 356, 357], "22378": 6, "nhwc": 6, "format": [6, 7, 30, 37, 65, 66, 67, 105, 107, 123, 124, 128, 220, 259, 260, 261, 262, 272, 378, 380, 384], "n": [6, 7, 42, 61, 65, 66, 67, 74, 105, 115, 116, 220, 241, 254, 255, 366, 377, 379, 383, 384], "h": [6, 7, 42, 65, 66, 67, 105, 115, 116, 220, 366, 380], "w": [6, 7, 42, 65, 66, 67, 105, 115, 116, 220, 366, 379], "ic": 6, "oc": 6, "current": [6, 59, 61, 72, 107, 227, 228, 261, 262, 348, 357, 377, 380, 385], "condit": [6, 289, 375], "met": [6, 289], "exactli": 6, "writer": 6, "carri": [6, 283], "bottleneck": 6, "re": [6, 374, 376], "overwrit": 6, "ani": [6, 115, 116, 248, 375], "either": [6, 7, 72, 217, 349, 375, 377, 380, 381], "row_major": [6, 28, 29, 72, 89, 90, 128, 129, 130, 242, 243, 244, 346, 347, 364, 365, 372, 373, 379], "expect": [6, 67, 105, 116, 220, 358, 375, 378, 384], "next": [6, 239, 377, 380], "recommend": [6, 175, 374, 377, 381, 385], "fragment": 6, "ideal": [6, 380], "face": 6, "determin": [6, 7, 67, 217, 227, 228, 380], "reshard": 6, "alreadi": [6, 67, 227, 228, 246, 381], "anywai": 6, "previou": [6, 88, 384], "due": [6, 272, 379, 380], "v": [6, 30, 116, 357, 377], "dilat": [6, 65, 66, 67, 220, 259, 260, 261, 262], "tensormemorylayout": [6, 220], "own": [6, 380], "heurist": 6, "height_shard": 6, "block_shard": [6, 220], "width_shard": 6, "orient": [6, 72, 380], "major": [6, 52, 105, 114, 116, 117, 119, 126, 241, 292, 307, 362, 380], "column": [6, 379, 380], "bia": [6, 42, 43, 65, 66, 67, 105, 140, 172, 185, 259, 260, 261, 262, 290, 374, 384], "respons": 6, "bfloat16": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 383, 384, 385], "unspecifi": 6, "float32": [6, 14, 25, 28, 33, 40, 42, 74, 76, 89, 90, 113, 121, 131, 157, 173, 221, 225, 256, 265, 291, 361, 372, 373, 374, 379, 380, 382, 383, 384, 385], "place": [7, 42, 92, 133, 142, 169, 170, 177, 213, 220, 236, 291, 348, 354, 380], "too": [7, 385], "fit": [7, 288], "conv2d_dram": 7, "version": [7, 227, 228, 357, 377, 379, 381], "happen": 7, "number": [7, 16, 17, 20, 22, 24, 43, 61, 65, 66, 67, 80, 81, 82, 91, 92, 104, 107, 115, 116, 120, 121, 122, 132, 133, 141, 142, 174, 176, 177, 181, 197, 198, 201, 205, 207, 212, 213, 215, 217, 218, 220, 221, 222, 223, 225, 231, 234, 235, 236, 241, 248, 250, 257, 258, 259, 260, 261, 262, 274, 284, 285, 286, 288, 289, 297, 327, 329, 330, 333, 334, 347, 352, 353, 354, 367, 368, 378, 379, 380], "along": [7, 73, 74, 107, 110, 264, 315, 316, 352, 355, 377, 380], "correspond": [7, 24, 87, 88, 274, 357], "calcul": [7, 72, 73, 267, 379], "divis": [7, 120, 134, 139, 267, 277, 335, 380], "last": [7, 25, 29, 59, 110, 129, 134, 139, 244, 277, 289, 335, 349, 352, 358, 372, 379, 380], "smaller": [7, 380, 383], "rest": [7, 116], "prefer": [7, 377, 382], "much": [7, 379], "larger": [7, 383], "_ttnn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 380], "multi_devic": [8, 9, 123, 124, 246, 337], "meshdevic": [8, 9, 24, 30, 60, 89, 90, 123, 124, 128, 129, 130, 186, 216, 244, 245, 246, 274, 337, 348, 351, 372, 373], "default": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 379, 385], "plan": [8, 9, 123, 124, 249], "deprec": [8, 9, 123, 124, 249], "futur": [8, 9, 123, 124, 249], "arg0": [9, 380], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "tt": [9, 24, 274, 337, 346, 347, 364, 365, 366, 376, 381, 382], "device_id": [9, 60, 75, 87, 88, 127, 216, 246, 271, 337, 348, 349, 350, 382, 383, 384, 385], "python_fully_qualified_nam": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "abs_t": 10, "object": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378], "default_preprocess_golden_function_input": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "_golden_funct": [10, 13, 16, 21, 23, 26, 27, 28, 33, 36, 50, 51, 59, 61, 63, 64, 66, 68, 70, 76, 78, 81, 87, 89, 90, 91, 93, 94, 96, 98, 100, 101, 109, 111, 114, 118, 127, 128, 130, 132, 135, 137, 140, 141, 143, 146, 148, 151, 155, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 172, 174, 176, 181, 182, 183, 185, 187, 188, 190, 192, 195, 197, 198, 202, 203, 206, 208, 212, 214, 217, 219, 226, 231, 232, 234, 235, 237, 240, 244, 245, 248, 250, 251, 252, 254, 257, 265, 269, 270, 271, 272, 278, 279, 286, 287, 288, 289, 290, 295, 303, 304, 306, 308, 309, 311, 313, 316, 317, 318, 321, 323, 325, 333, 336, 338, 340, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 366, 369, 372, 373], "default_postprocess_golden_function_output": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "is_cpp_oper": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "is_experiment": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "element": [10, 12, 14, 25, 29, 31, 33, 36, 46, 51, 61, 65, 66, 67, 68, 74, 76, 85, 93, 94, 96, 98, 100, 101, 106, 107, 110, 111, 113, 118, 134, 135, 137, 138, 139, 143, 152, 155, 164, 165, 166, 167, 168, 178, 182, 187, 188, 190, 192, 195, 203, 214, 226, 237, 240, 241, 248, 255, 256, 259, 260, 261, 262, 263, 265, 267, 272, 277, 278, 279, 282, 283, 288, 291, 295, 303, 304, 306, 308, 309, 311, 317, 323, 325, 335, 338, 340, 342, 352, 361, 363, 365, 380, 383], "wise": [10, 12, 14, 25, 31, 33, 36, 46, 51, 68, 76, 85, 93, 94, 96, 98, 100, 101, 106, 111, 113, 118, 134, 135, 137, 139, 143, 152, 155, 164, 165, 166, 167, 168, 178, 182, 187, 188, 190, 192, 195, 203, 214, 226, 237, 240, 256, 265, 267, 272, 277, 278, 279, 282, 283, 291, 295, 303, 304, 306, 308, 309, 311, 317, 323, 325, 335, 338, 340, 342, 361, 363, 383], "mathrm": [10, 12, 14, 16, 18, 25, 31, 33, 36, 37, 40, 44, 45, 46, 47, 48, 49, 51, 68, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 106, 111, 113, 118, 120, 121, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 152, 153, 155, 157, 163, 164, 165, 166, 167, 168, 173, 174, 176, 177, 178, 180, 182, 187, 188, 190, 192, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 226, 234, 235, 236, 237, 239, 240, 247, 255, 256, 258, 265, 272, 277, 278, 279, 282, 283, 284, 291, 295, 297, 299, 303, 304, 306, 308, 309, 311, 317, 323, 325, 327, 331, 333, 335, 338, 340, 342, 361, 363, 370], "_tensor": [10, 12, 14, 16, 18, 25, 31, 33, 36, 37, 44, 45, 46, 47, 48, 49, 51, 68, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 106, 111, 113, 118, 120, 121, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 152, 153, 155, 157, 163, 164, 165, 166, 167, 168, 173, 174, 176, 177, 178, 180, 182, 187, 188, 190, 192, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 226, 234, 235, 236, 237, 239, 240, 247, 255, 256, 258, 265, 272, 277, 278, 279, 282, 283, 284, 291, 295, 297, 299, 303, 304, 306, 308, 309, 311, 317, 323, 325, 327, 331, 333, 335, 338, 340, 342, 361, 363, 370], "_i": [10, 12, 14, 16, 31, 33, 36, 37, 40, 44, 45, 46, 47, 48, 49, 51, 68, 76, 80, 85, 91, 93, 94, 96, 98, 100, 101, 106, 111, 113, 118, 131, 132, 134, 135, 137, 138, 139, 141, 143, 152, 153, 155, 157, 164, 165, 166, 167, 168, 173, 176, 178, 182, 187, 188, 190, 192, 195, 201, 202, 203, 205, 206, 207, 208, 212, 214, 226, 234, 235, 237, 239, 240, 255, 256, 265, 272, 277, 278, 279, 282, 283, 291, 295, 297, 299, 303, 304, 306, 308, 309, 311, 317, 323, 325, 333, 335, 338, 340, 342, 361, 363, 370], "verb": [10, 12, 14, 31, 33, 36, 40, 44, 45, 46, 47, 48, 49, 51, 68, 76, 82, 85, 98, 101, 106, 111, 113, 118, 120, 121, 131, 134, 139, 152, 155, 157, 164, 165, 166, 167, 168, 173, 174, 178, 180, 187, 188, 190, 192, 195, 197, 198, 226, 237, 258, 265, 272, 277, 278, 279, 282, 283, 284, 291, 299, 303, 304, 306, 308, 309, 311, 323, 325, 327, 335, 338, 342, 361, 363], "complextensor": [10, 11, 17, 26, 27, 63, 64, 80, 81, 158, 159, 161, 162, 231, 251, 252, 269, 270, 272, 273, 330], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 385], "prealloc": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 68, 73, 74, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 108, 110, 111, 113, 114, 118, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 245, 256, 257, 265, 267, 272, 278, 279, 282, 283, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 317, 323, 324, 325, 327, 330, 331, 332, 333, 338, 340, 341, 342, 352, 361, 363, 368, 369, 373], "command": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 68, 73, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 108, 111, 113, 114, 115, 116, 118, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 278, 279, 282, 283, 289, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 317, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 373, 377, 379, 385], "queue": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 67, 68, 73, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 111, 113, 114, 115, 116, 118, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 278, 279, 282, 283, 289, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 317, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 373], "id": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 61, 62, 67, 68, 73, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 111, 113, 114, 115, 116, 118, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 216, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 246, 248, 250, 256, 257, 265, 267, 272, 278, 279, 282, 283, 289, 291, 295, 296, 297, 298, 303, 304, 306, 308, 309, 310, 311, 317, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 373, 379], "tile_layout": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 253, 255, 256, 257, 264, 265, 266, 267, 268, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 352, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 380, 382, 383, 384, 385], "unary_backward": [11, 13, 15, 32, 34, 39, 41, 52, 54, 56, 58, 69, 71, 77, 79, 83, 86, 95, 97, 99, 102, 103, 112, 114, 117, 119, 126, 136, 145, 147, 149, 151, 156, 179, 184, 189, 191, 193, 194, 196, 210, 211, 233, 238, 254, 257, 264, 266, 268, 273, 280, 281, 287, 292, 294, 296, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 339, 341, 343, 345, 362], "abs_bw_t": 11, "_golden_function_ab": 11, "backward": [11, 13, 15, 17, 19, 21, 23, 27, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 108, 112, 114, 117, 119, 122, 126, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 252, 254, 257, 264, 266, 268, 270, 273, 280, 281, 285, 287, 292, 294, 296, 298, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371, 384], "given": [11, 13, 15, 17, 19, 21, 23, 27, 29, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 67, 69, 71, 73, 74, 77, 79, 81, 83, 86, 90, 95, 97, 99, 102, 103, 112, 114, 117, 119, 122, 126, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 227, 228, 231, 233, 238, 246, 249, 252, 254, 257, 264, 266, 268, 270, 273, 280, 281, 285, 287, 288, 292, 294, 296, 298, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 328, 330, 332, 339, 341, 343, 345, 352, 357, 362, 366, 369, 371, 374], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 27, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 108, 112, 114, 117, 119, 122, 126, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 252, 254, 257, 264, 266, 268, 270, 273, 280, 281, 285, 287, 292, 294, 296, 298, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "gradient": [11, 13, 15, 17, 19, 21, 23, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 67, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 107, 108, 112, 114, 117, 119, 122, 126, 136, 145, 147, 149, 151, 154, 156, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 254, 257, 264, 266, 268, 273, 280, 281, 285, 287, 292, 294, 296, 298, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "list": [11, 13, 15, 16, 17, 19, 21, 23, 27, 29, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 61, 62, 64, 69, 71, 72, 77, 79, 81, 83, 86, 87, 89, 91, 95, 97, 99, 102, 103, 112, 114, 117, 119, 122, 124, 126, 131, 132, 136, 141, 145, 147, 149, 151, 154, 156, 159, 173, 174, 175, 176, 179, 181, 184, 185, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201, 205, 207, 210, 211, 212, 217, 219, 220, 221, 224, 225, 231, 233, 234, 235, 238, 241, 248, 249, 250, 252, 254, 257, 258, 263, 264, 266, 268, 270, 273, 280, 281, 285, 287, 292, 294, 296, 297, 298, 301, 305, 307, 310, 312, 314, 315, 318, 320, 322, 324, 326, 327, 328, 330, 332, 333, 337, 339, 341, 343, 345, 352, 357, 362, 363, 364, 365, 369, 371, 376], "about": [11, 21, 43, 122, 136, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 272, 273, 285, 318, 324, 371, 380], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 69, 71, 77, 79, 81, 86, 88, 95, 97, 99, 102, 103, 108, 112, 114, 117, 119, 122, 126, 136, 145, 147, 149, 151, 154, 156, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 257, 264, 266, 268, 273, 280, 281, 285, 287, 292, 296, 298, 301, 305, 307, 310, 312, 314, 318, 320, 322, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "acos_t": 12, "_golden_function_aco": 12, "rand": [12, 14, 25, 31, 33, 36, 40, 42, 46, 50, 51, 62, 68, 70, 74, 76, 87, 93, 98, 101, 111, 118, 125, 134, 137, 139, 143, 155, 164, 165, 166, 167, 168, 182, 183, 187, 188, 190, 192, 195, 203, 204, 214, 226, 237, 240, 242, 243, 247, 258, 264, 265, 277, 278, 279, 287, 288, 299, 306, 308, 309, 311, 313, 321, 323, 325, 335, 336, 338, 342, 359, 360, 361, 383, 385], "acos_bw_t": 13, "invers": [13, 15, 32, 34, 39, 41], "cosin": [13, 15, 69, 71, 109], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 34, 35, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 52, 54, 62, 69, 71, 77, 79, 80, 81, 82, 86, 91, 92, 95, 97, 99, 102, 112, 117, 119, 120, 121, 122, 126, 131, 132, 133, 141, 142, 145, 147, 149, 153, 154, 156, 160, 163, 173, 174, 175, 176, 177, 179, 181, 184, 185, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 219, 220, 221, 224, 225, 231, 233, 234, 235, 236, 239, 247, 255, 257, 258, 266, 268, 273, 280, 281, 284, 285, 292, 297, 298, 299, 301, 305, 307, 312, 314, 320, 322, 326, 327, 328, 330, 331, 332, 333, 339, 343, 362, 368, 369, 370, 371, 385], "acosh_t": 14, "_golden_function_acosh": [14, 15], "acosh_bw_t": 15, "hyperbol": [15, 34, 41, 71, 314, 341], "add_t": 16, "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 62, 80, 81, 82, 91, 92, 120, 121, 122, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 181, 185, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 284, 285, 297, 298, 299, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371, 385], "_a": [16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 120, 121, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 234, 235, 236, 239, 247, 258, 284, 297, 299, 327, 331, 333, 370], "_b": [16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 120, 121, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 234, 235, 236, 239, 247, 258, 284, 297, 299, 327, 331, 333, 370], "datatyp": [16, 28, 30, 59, 65, 66, 67, 73, 74, 87, 88, 89, 90, 91, 128, 129, 130, 131, 132, 138, 140, 141, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 244, 245, 259, 260, 261, 262, 297, 327, 333, 349, 350, 372, 373, 382], "str": [16, 30, 35, 81, 84, 91, 108, 131, 132, 141, 173, 174, 176, 185, 186, 197, 198, 201, 205, 207, 212, 217, 221, 225, 227, 228, 234, 235, 297, 302, 327, 333], "int32": [16, 44, 45, 46, 47, 48, 49, 74, 91, 93, 131, 132, 137, 141, 143, 173, 176, 182, 201, 203, 204, 205, 206, 207, 208, 212, 214, 221, 225, 235, 240, 333], "uint32": [16, 29, 74, 87, 88, 107, 157, 160, 379, 380], "4294967295": 16, "uint16": [16, 44, 47, 49, 107, 129, 157, 234, 244, 333, 352, 372, 380], "65535": [16, 44, 47, 49, 234, 333], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 61, 62, 80, 81, 82, 91, 92, 120, 121, 122, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 180, 181, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 284, 285, 297, 298, 299, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 61, 62, 80, 81, 82, 91, 92, 120, 121, 122, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 180, 181, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 284, 285, 297, 298, 299, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371], "scalar": [16, 17, 20, 22, 44, 45, 47, 48, 49, 80, 81, 82, 83, 91, 92, 120, 121, 122, 129, 130, 132, 133, 141, 142, 174, 176, 177, 180, 181, 197, 198, 201, 205, 207, 212, 213, 215, 221, 225, 231, 234, 235, 236, 254, 258, 267, 268, 284, 285, 297, 327, 330, 333, 385], "binary_backward": [17, 19, 35, 38, 43, 62, 81, 122, 154, 175, 199, 200, 219, 224, 231, 285, 298, 328, 330, 332, 371], "add_bw_t": 17, "_golden_function_bw": [17, 19, 35, 38, 43, 62, 122, 154, 175, 199, 200, 224, 285, 298, 328, 330, 332, 371], "are_required_output": [17, 19, 35, 62, 81, 231, 298, 330, 332, 369], "input_grad": [17, 19, 35, 62, 81, 108, 231, 298, 330, 332], "other_grad": [17, 19, 35, 62, 81, 231, 298, 330, 332], "bfloat4_b": [17, 19, 20, 22, 25, 38, 43, 62, 81, 128, 154, 175, 180, 181, 199, 200, 215, 219, 224, 231, 298, 328, 330, 332, 351, 368, 371], "addalpha_t": 18, "_golden_function_addalpha": 18, "alpha": [18, 19, 21, 23, 53, 54, 81, 85, 86, 300, 331, 332], "float": [18, 19, 20, 21, 22, 23, 42, 53, 54, 55, 56, 57, 58, 83, 85, 86, 106, 113, 116, 123, 128, 129, 130, 140, 144, 145, 146, 148, 150, 151, 152, 163, 172, 178, 179, 180, 209, 211, 248, 250, 254, 255, 256, 258, 267, 268, 282, 283, 290, 293, 294, 300, 317, 318, 319, 320, 331, 332, 344, 345, 356, 357, 359, 360, 380], "addalpha_bw_t": 19, "addcdiv_t": 20, "_golden_function_addcdiv": 20, "input_tensor_c": [20, 21, 22, 23, 181, 215, 368, 369], "tensor3": [20, 21, 22, 23, 180, 181, 215, 368, 369], "ternary_backward": [21, 23, 181, 369], "addcdiv_bw_t": 21, "addcmul_t": 22, "_golden_function_addcmul": 22, "addcmul_bw_t": 23, "all_gather_t": 24, "across": [24, 104, 138, 263, 274, 379, 380, 383], "dim": [24, 29, 61, 62, 72, 73, 74, 104, 107, 110, 134, 139, 160, 218, 222, 223, 250, 263, 264, 274, 277, 288, 315, 316, 329, 334, 335, 352, 358, 367, 380, 384], "cluster_axi": [24, 274], "provid": [24, 29, 42, 73, 107, 113, 185, 217, 227, 228, 263, 264, 274, 316, 337, 340, 347, 352, 375, 377, 378, 379, 380, 384, 385], "meshtensor": [24, 274], "axi": [24, 73, 274, 288, 383], "line": [24, 274], "mesh_devic": [24, 104, 274], "applic": [24, 274, 380], "guid": [24, 274, 376, 377], "http": [24, 274, 376, 377], "com": [24, 274, 376, 377], "blob": [24, 274], "main": [24, 274, 377, 378, 382, 383, 384, 385], "tech_report": [24, 274], "20mesh": [24, 274], "20of": [24, 274], "20devic": [24, 274], "20with": [24, 274], "20tt": [24, 274], "nn": [24, 227, 228, 274, 376, 381, 382], "md": [24, 274, 375, 377], "num_link": [24, 104, 274], "link": [24, 104, 274], "num_work": [24, 104, 274], "worker": [24, 104, 246, 274], "num_buffers_per_channel": [24, 104, 274], "per": [24, 104, 274, 377], "ring": [24, 104, 274], "full_tensor": [24, 104, 274], "randn": [24, 30, 75, 88, 90, 104, 127, 128, 138, 185, 217, 220, 245, 271, 274, 348, 349, 350, 351, 363, 373, 384], "256": [24, 104, 220, 274], "physical_device_id": 24, "get_t3k_physical_device_ids_r": 24, "open_mesh_devic": [24, 104, 274], "meshshap": [24, 104, 274], "ttnn_tensor": [24, 351], "input_dtyp": [24, 259, 260, 261, 262], "mem_config": 24, "mesh_mapp": [24, 30, 104, 128, 274], "shardtensor2dmesh": 24, "mesh_shap": 24, "alt_complex_rotate90_t": 25, "_golden_function_alt_complex_rotate90": 25, "_": [25, 374, 379], "2i": 25, "even": [25, 75, 216, 217], "complex_unari": [26, 63, 158, 161, 162, 251, 269], "angle_t": 26, "complex": [26, 27, 63, 64, 158, 159, 251, 252, 269, 270], "complex_unary_backward": [27, 64, 159, 252, 270], "angle_bw_t": 27, "arange_t": 28, "inclus": [28, 380], "end": [28, 80, 163, 180, 239, 315, 365, 375, 379], "exclus": [28, 248], "consecut": [28, 380], "dram_memory_config": [28, 59, 89, 90, 185, 217, 348, 380, 383], "space": [28, 65, 66, 67, 259, 260, 261, 262, 380], "print": [28, 30, 61, 89, 90, 127, 128, 129, 130, 185, 216, 217, 244, 245, 246, 250, 286, 288, 302, 315, 316, 348, 349, 351, 372, 373, 379, 380, 385], "00000": [28, 382], "argmax_t": 29, "_create_golden_funct": [29, 218, 222, 223, 329, 334, 367], "local": [29, 33, 36, 50, 51, 68, 70, 76, 78, 93, 94, 96, 98, 100, 101, 111, 118, 135, 137, 143, 146, 148, 155, 157, 164, 165, 166, 167, 168, 182, 183, 187, 188, 190, 192, 195, 203, 214, 218, 222, 223, 226, 232, 237, 240, 265, 278, 279, 295, 303, 304, 306, 308, 309, 311, 313, 317, 321, 323, 325, 329, 334, 336, 338, 340, 352, 359, 360, 367, 374, 375, 380], "keepdim": [29, 263], "currenli": 29, "row_major_layout": [30, 59, 84, 87, 123, 124, 128, 129, 244, 349, 372, 380, 384], "cache_file_nam": 30, "pathlib": [30, 84, 186], "path": [30, 84, 186, 377, 379, 385], "callabl": [30, 227, 228], "serial": 30, "cpptensortomesh": 30, "tensortomesh": [30, 128], "use_device_til": 30, "toggl": 30, "truncat": [30, 362], "mantissa": 30, "bit": 30, "bfp": [30, 380], "rais": [30, 351], "runtim": [30, 377], "error": [30, 171, 216, 217, 230, 351, 375, 377], "rte": 30, "bfp8": 30, "bfp4": 30, "375": [30, 128], "30469": [30, 128], "714844": [30, 128], "761719": [30, 128], "53125": [30, 128], "652344": [30, 128], "asin_t": 31, "_golden_function_asin": 31, "asin_bw_t": 32, "lambda": [32, 34, 41, 52, 54, 56, 58, 71, 83, 86, 97, 145, 179, 189, 191, 193, 211, 268, 294, 307, 312, 314, 320, 322, 374], "sine": [32, 34, 109, 314], "asinh_t": 33, "register_ttnn_cpp_unary_funct": [33, 36, 50, 51, 68, 70, 76, 78, 93, 94, 96, 98, 100, 101, 111, 118, 135, 137, 143, 146, 148, 155, 157, 164, 165, 166, 167, 168, 182, 183, 187, 188, 190, 192, 195, 203, 214, 226, 232, 237, 240, 265, 278, 279, 295, 303, 304, 306, 308, 309, 311, 313, 317, 321, 323, 325, 336, 338, 340, 359, 360], "asinh_bw_t": 34, "assign_bw_t": 35, "assign": 35, "other_tensor": [35, 81], "round_mod": [35, 80, 81, 267, 268], "atan_t": 36, "atan2_t": 37, "_golden_function_atan2": 37, "arctan": 37, "left": [37, 80, 131, 173, 299, 378], "right": [37, 80, 131, 173, 299], "x": [37, 67, 185, 217, 251, 356, 357, 377, 379, 380, 384], "atan2_bw_t": 38, "atan_bw_t": 39, "_golden_function_atan": 39, "tangenr": 39, "atanh_t": 40, "_golden_function_atanh": 40, "bflaot8_b": 40, "atanh_bw_t": 41, "tangent": [41, 341], "batch_norm_t": 42, "spatial": [42, 138, 366], "batch": [42, 65, 66, 67, 115, 116, 160, 185, 217, 220, 259, 260, 261, 262, 357, 379], "over": [42, 65, 66, 67, 105, 138, 140, 172, 264, 290, 316, 356, 357, 377], "interleav": [42, 61, 105, 348, 350, 358, 380], "ep": [42, 209, 211], "epsilon": [42, 140, 172, 290], "1e": [42, 140, 163, 172, 290, 384], "05": 42, "momentum": 42, "running_mean": 42, "train": [42, 384], "running_var": 42, "varianc": [42, 380], "gamma": [42, 233], "beta": [42, 317, 318], "evalu": 42, "norm": 42, "bias_gelu_bw_t": 43, "bias_gelu": 43, "approxim": [43, 94, 96, 100, 108, 135, 136, 295, 303], "bitwise_and_t": 44, "_golden_function_bitwise_and": 44, "integ": [44, 45, 47, 48, 49, 248, 357], "bitwise_left_shift_t": 45, "_golden_function_bitwise_left_shift": 45, "ha": [45, 48, 67, 217, 227, 228, 261, 262, 337, 358, 374, 375, 377, 379, 380, 385], "shift_bit": [45, 48], "31": [45, 48, 382], "bitwise_not_t": 46, "_golden_function_bitwise_not": 46, "2147483647": [46, 131], "bitwise_or_t": 47, "_golden_function_bitwise_or": 47, "bitwise_right_shift_t": 48, "_golden_function_bitwise_right_shift": 48, "bitwise_xor_t": 49, "_golden_function_bitwise_xor": 49, "cbrt_t": 50, "ceil_t": 51, "ceil_bw_t": 52, "celu_t": 53, "_golden_function_celu": 53, "celu_bw_t": 54, "formula": [54, 86, 145, 179, 180, 211, 318, 320], "clamp_t": 55, "_golden_function_clamp": 55, "min_tensor": [55, 57], "max_tensor": [55, 57], "clamp_bw_t": 56, "clip_t": 57, "_golden_function_clip": 57, "clip_bw_t": 58, "data_mov": [59, 61, 115, 116, 160, 241, 248, 250, 286, 288, 289, 315, 346, 347, 364, 365], "clone_t": 59, "doe": [59, 128, 351, 375, 379], "alter": 59, "unpad": [59, 124, 349, 365], "ensur": [59, 110, 337, 375, 377, 380], "adjust": [59, 317], "param": [59, 127, 248, 316, 348], "target": [59, 123, 124, 263, 375], "l1_memory_config": [59, 348, 374, 380, 385], "compute_kernel_config": [59, 105, 109, 140, 172, 185, 217, 290, 316, 356, 357], "close": [60, 216, 377, 382, 383], "remov": [60, 351, 365], "success": [60, 377], "concat_t": 61, "concaten": [61, 62, 355, 358], "group": [61, 65, 66, 67, 259, 260, 261, 262, 380], "split": [61, 134, 139, 277, 335, 358, 380], "partit": 61, "process": [61, 74, 259, 260, 379], "independ": 61, "altern": [61, 217, 383, 385], "recombin": 61, "dure": [61, 128, 163, 351, 380], "residu": 61, "concat_bw_t": 62, "30": [62, 89, 107, 382], "conj_t": 63, "conjug": 63, "conj_bw_t": 64, "conv1d_t": 65, "1d": [65, 217, 241, 258], "signal": [65, 66, 105, 138], "compos": [65, 66, 67, 105, 138, 351, 384], "sever": [65, 66, 67, 105, 138], "plane": [65, 66, 67, 105, 138], "2d": [65, 66, 67, 107, 138, 217, 366, 380], "input_length": 65, "weight_tensor": [65, 66, 67, 105, 261, 262], "out_channel": [65, 66, 67, 259, 260, 261, 262], "in_channel": [65, 66, 67, 259, 260, 261, 262], "kernel_height": [65, 66, 261, 262], "kernel_width": [65, 66, 261, 262], "bias_tensor": [65, 66, 67, 105], "batch_siz": [65, 66, 67, 88, 138, 220, 259, 260, 261, 262, 355, 358, 374, 384], "length": [65, 258, 356, 357], "kernel_s": [65, 66, 67, 220, 259, 260, 261, 262], "convolv": [65, 66, 67, 220, 259, 260, 261, 262], "cross": [65, 66, 67, 259, 260, 261, 262], "correl": [65, 66, 67, 259, 260, 261, 262, 375], "side": [65, 66, 67, 259, 260, 261, 262, 379], "pad_length": 65, "pad_left": [65, 66, 67, 259, 260, 261, 262], "pad_right": [65, 66, 67, 259, 260, 261, 262], "connect": [65, 66, 67, 259, 260, 261, 262], "conv_config": [65, 66, 67, 259, 260, 261, 262], "compute_config": [65, 66, 67, 259, 260, 261, 262], "devicecomputekernelconfig": [65, 66, 67, 105, 109, 140, 172, 185, 217, 259, 260, 261, 262, 290, 316, 356, 357], "return_output_dim": [65, 66, 67], "return_weights_and_bia": [65, 66, 67], "bias": [65, 374, 384], "conv2d_t": 66, "inform": [66, 107, 272, 377], "tech": 66, "input_height": [66, 67, 259, 260, 261, 262], "input_width": [66, 67, 259, 260, 261, 262], "pad_height": [66, 67, 259, 260, 261, 262], "pad_width": [66, 67, 259, 260, 261, 262], "pad_top": [66, 67, 259, 260, 261, 262], "pad_bottom": [66, 67, 259, 260, 261, 262], "conv_transpose2d_t": 67, "transpos": [67, 109, 185, 217, 250, 358, 384], "seen": [67, 72], "respect": [67, 88, 217, 380, 382], "fraction": 67, "deconvolut": 67, "o": [67, 377, 379], "g": [67, 217, 377, 379, 380], "k_h": 67, "k_w": 67, "equat": 67, "h_out": 67, "h_in": 67, "output_pad": 67, "w_out": 67, "w_in": 67, "mirror_kernel": 67, "mirror": 67, "intern": [67, 376], "been": [67, 227, 228, 337, 375, 377], "cos_t": 68, "cos_bw_t": 69, "_golden_function_co": 69, "cosh_t": 70, "cosh_bw_t": 71, "coregrid": [72, 140, 185, 217], "corerang": 72, "strategi": [72, 217, 379, 380], "shardstrategi": 72, "shardorient": 72, "use_height_and_width_as_shard_shap": 72, "travers": 72, "math": [72, 379], "320": 72, "cumprod_t": 73, "witth": 73, "cumul": [73, 74], "underli": 73, "ref": [73, 377], "fed": 73, "time": [73, 163, 227, 286, 375, 379, 385], "being": [73, 275, 276, 379, 380], "actual": [73, 267, 380, 384], "assert": [73, 248, 385], "dtyoe": 73, "uint8": [73, 136, 157, 296, 315], "tensor_copi": 73, "cumsum_t": 74, "fundament": 74, "desir": [74, 90, 115, 116, 123, 124, 128, 349, 350, 351], "cast": 74, "torch_input": 74, "tensor_input": 74, "tensor_output": 74, "With": [74, 381], "preallocated_output": 74, "pycapsul": [75, 127, 271, 348], "resourc": 75, "explicitli": 75, "whose": [75, 90], "forc": 75, "deg2rad_t": 76, "deg2rad_bw_t": 77, "_golden_function_deg2rad": 77, "degre": [77, 266], "radian": [77, 266], "digamma_t": 78, "digamma_bw_t": 79, "_golden_function_digamma": 79, "div_t": 80, "_golden_function_div": 80, "begin": [80, 163, 239, 379], "text": [80, 163, 239, 247, 375], "_mode": 80, "accurate_mod": 80, "non": [80, 217, 220, 241, 257, 272, 293], "div_bw_t": 81, "pcc": [81, 154, 175, 268, 375, 378], "degrad": [81, 154, 175, 268], "div_no_nan_t": 82, "_golden_function_div_no_nan": 82, "div_no_nan_bw_t": 83, "denomin": [83, 267], "dump": [84, 227, 385], "file_nam": [84, 186, 385], "save": [84, 384], "bin": [84, 186, 377], "elu_t": 85, "_golden_function_elu": 85, "elu_bw_t": 86, "embedding_t": 87, "retriev": 87, "word": 87, "padding_idx": 87, "token": [87, 170, 357], "embeddings_typ": 87, "embeddingstyp": 87, "106445": 87, "988281": 87, "59375": 87, "212891": 87, "964844": 87, "199219": 87, "996094": 87, "78362e": 87, "38": [87, 380, 382], "89785e": 87, "39": 87, "04479e": 87, "25815e": 87, "71833e": 87, "59995e": 87, "60398e": 87, "83671e": 87, "22242e": 87, "88263e": 87, "35917e": 87, "49994e": 87, "embedding_backward": 88, "embedding_bw_t": 88, "extract": [88, 107], "vocabulari": 88, "output_gradient_tensor": 88, "seq_len": [88, 109], "embedding_dim": 88, "num_embed": 88, "1024": 88, "4096": 88, "3200": 88, "input_shap": [88, 220], "input_index": 88, "randint": 88, "weights_shap": 88, "weights_ttnn": 88, "grad_shap": 88, "grad_data": 88, "empty_t": 89, "uniniti": [89, 90], "bfloat_8": 89, "21": 89, "67": [89, 383], "empty_like_t": 90, "initi": [90, 227, 228, 374, 382, 383], "87": [90, 384], "45": [90, 338, 339], "22": [90, 377], "60": [90, 107], "75": [90, 127], "25": [90, 349, 379], "eq_t": 91, "eq__t": 92, "_golden_function_eq_": 92, "input_a": [92, 133, 142, 160, 177, 213, 218, 222, 223, 236, 329, 334, 367], "input_b": [92, 133, 142, 160, 177, 213, 236], "eqz_t": 93, "_tensor_i": [93, 137, 143, 182, 203, 214, 240], "erf_t": 94, "fast_and_approximate_mod": [94, 96, 100, 135, 295, 303], "fast": [94, 96, 100, 135, 295, 303], "erf_bw_t": 95, "_golden_function_erf": 95, "erfc_t": 96, "erfc_bw_t": 97, "erfinv_t": 98, "erfinv_bw_t": 99, "_golden_function_erfinv": 99, "exp_t": 100, "exp2_t": 101, "exp2_bw_t": 102, "_golden_function_exp2": 102, "exp_bw_t": 103, "_golden_function_exp": 103, "exponenti": 103, "ccl_experiment": 104, "all_reduce_t": 104, "shardtensortomesh": [104, 274], "conv3d_t": 105, "3d": 105, "d": 105, "kd": 105, "kh": 105, "kw": 105, "c_in": 105, "c_out": 105, "conv3dconfig": 105, "dropout_t": 106, "seed": 106, "rng": 106, "probabl": 106, "averag": [106, 138, 379], "total_elem": 106, "scale": [106, 146, 148, 300, 317, 356, 357], "124": 106, "prob": 106, "gather_t": 107, "except": [107, 217], "exce": 107, "do": [107, 375], "sparse_grad": 107, "spars": 107, "20": [107, 226, 248, 317, 318, 379], "40": [107, 220], "50": [107, 383], "70": 107, "80": [107, 175, 377], "index_tensor": 107, "input_tensor_ttnn": 107, "index_tensor_ttnn": 107, "gathered_tensor": 107, "gelu_bw_t": [108, 136], "_golden_function_gelu": [108, 136], "algorithm": [108, 366], "rotary_embedding_t": 109, "rotari": 109, "cos_cach": 109, "sin_cach": 109, "token_idx": 109, "assum": [109, 124, 337, 366, 381], "head_dim": 109, "cod_cach": 109, "token_index": 109, "sort_t": 110, "ascend": 110, "descend": 110, "stabl": [110, 382], "origin": [110, 227, 228, 249, 263, 375, 378], "preserv": 110, "info": [110, 382, 383, 384], "now": [110, 128, 351, 366, 380, 382], "sorted_tensor": 110, "sorted_tensor_desc": 110, "indices_desc": 110, "input_tensor_2d": 110, "sorted_tensor_dim": 110, "indices_dim": 110, "expm1_t": 111, "expm1_bw_t": 112, "_golden_function_expm1": 112, "fill_t": 113, "_golden_function_fil": 113, "fill_valu": [113, 129, 130, 382, 383], "wormhole_b0": 113, "fill_bw_t": 114, "fill_ones_rm_t": 115, "val_hi": [115, 116], "val_lo": [115, 116], "count": [115, 116, 379], "ye": [115, 116], "hone": [115, 116], "high": [115, 116, 377, 380, 382, 383, 385], "region": [115, 116, 246], "wone": [115, 116], "fill_rm_t": 116, "nchw": 116, "hw": 116, "hfill": 116, "wfill": 116, "hi": 116, "lo": 116, "low": 116, "fill_zero_bw_t": 117, "_golden_function_fill_zero": 117, "floor_t": 118, "floor_bw_t": 119, "_golden_function_floor": 119, "floor_div_t": 120, "_golden_function_floor_div": 120, "fmod_t": 121, "_golden_function_fmod": 121, "fmod_bw_t": 122, "padded_shap": [123, 249], "pad_valu": [123, 128, 250, 289, 315, 347], "target_layout": [123, 124], "target_mem_config": [123, 124], "padded_tensor": 123, "output_mem_config": [123, 124], "unpadded_tensor": 124, "frac_t": 125, "_golden_function_frac": [125, 126], "frac_bw_t": 126, "tensor_on_devic": [127, 348], "tensor_on_host": [127, 348], "365234": 127, "130859": 127, "itself": 128, "twice": [128, 379], "first": [128, 134, 139, 185, 217, 241, 248, 277, 335, 374, 377, 379, 384, 385], "purpos": [128, 375, 378, 380], "second": [128, 134, 139, 185, 217, 248, 258, 277, 289, 335, 379, 385], "mapper": 128, "cq_id": [128, 337, 351], "full_t": 129, "_golden_function_ful": 129, "filled_tensor": [129, 130], "full_like_t": 130, "templat": [130, 245, 373, 379], "gcd_t": 131, "_golden_function_gcd": 131, "greatest": 131, "common": [131, 173, 375], "2147483648": 131, "tensorint32default": [131, 173], "ge_t": 132, "ge__t": 133, "_golden_function_ge_": 133, "geglu_t": 134, "_golden_function_geglu": 134, "part": [134, 139, 277, 335, 375, 379], "gelu_t": 135, "gez_t": 137, "global_avg_pool2d_t": 138, "golden_global_avg_pool2d": 138, "adapt": 138, "entir": [138, 337], "typic": [138, 380], "glu_t": 139, "_golden_function_glu": 139, "group_norm_t": 140, "_postprocess_golden_function_output": [140, 248], "num_group": 140, "input_mask": 140, "inplac": [140, 202, 204, 206, 208], "num_out_block": 140, "gt_t": 141, "gt__t": 142, "_golden_function_gt_": 142, "gtz_t": 143, "hardshrink_t": 144, "_golden_function_hardshrink": 144, "lambd": [144, 145, 319, 320], "hardshrink_bw_t": 145, "hardsigmoid_t": 146, "shift": [146, 148], "16666667": [146, 148], "hardsigmoid_bw_t": 147, "_golden_function_hardsigmoid": 147, "hardswish_t": 148, "hardswish_bw_t": 149, "_golden_function_hardswish": 149, "hardtanh_t": 150, "_golden_function_hardtanh": 150, "min_val": 150, "max_val": 150, "hardtanh_bw_t": 151, "heaviside_t": 152, "_golden_function_heavisid": 152, "hypot_t": 153, "_golden_function_hypot": 153, "hypot_bw_t": 154, "i0_t": 155, "i0_bw_t": 156, "_golden_function_i0": 156, "identity_t": 157, "sfpu": 157, "shouldn": 157, "instead": [157, 283], "sinc": 157, "lower": [157, 248, 377], "float16": 157, "imag_t": 158, "imag_bw_t": 159, "imaginari": 159, "indexed_fill_t": 160, "replac": [160, 344], "denot": 160, "batch_id": 160, "is_imag_t": 161, "is_real_t": 162, "isclose_t": 163, "_golden_function_isclos": 163, "leq": 163, "atol": 163, "rtol": 163, "otherwis": [163, 263, 337, 352, 385], "rel": 163, "toler": 163, "05f": 163, "absolut": [163, 171], "08f": 163, "equal_nan": 163, "nan": 163, "treat": [163, 217], "isfinite_t": 164, "isinf_t": 165, "isnan_t": 166, "isneginf_t": 167, "isposinf_t": 168, "fill_cache_for_user__t": 169, "popul": [169, 227, 379], "batch_index": 169, "update_cache_for_token__t": 170, "update_index": 170, "batch_offset": 170, "l1_loss_t": 171, "_golden_function_l1_loss": 171, "input_refer": [171, 230], "input_predict": [171, 230], "layer_norm_t": 172, "residual_input_tensor": [172, 290], "program_config": [172, 185, 217, 290, 353, 354, 356, 357], "programconfig": [172, 290], "lcm_t": 173, "_golden_function_lcm": 173, "least": [173, 217, 379], "32767": 173, "32768": 173, "ldexp_t": 174, "ldexp_bw_t": 175, "outsid": 175, "le_t": 176, "le__t": 177, "_golden_function_le_": 177, "leaky_relu_t": 178, "_golden_function_leaky_relu": 178, "negative_slop": [178, 179], "slope": 178, "leaki": 178, "leaky_relu_bw_t": 179, "01": 179, "lerp_t": 180, "_golden_function_lerp": 180, "point": [180, 317, 379, 380], "interpol": 180, "lerp_bw_t": 181, "lez_t": 182, "lgamma_t": 183, "lgamma_bw_t": 184, "_golden_function_lgamma": 184, "linear_t": 185, "behaviour": [185, 217], "transpose_a": [185, 217], "transpose_b": [185, 217], "matmulprogramconfig": [185, 217], "output_til": [185, 217], "128": [185, 217, 384, 385], "log_t": 187, "log10_t": 188, "whb0": [188, 192, 285], "log10_bw_t": 189, "log1p_t": 190, "1e7": 190, "log1p_bw_t": 191, "log2_t": 192, "log2_bw_t": 193, "log_bw_t": 194, "_golden_function_log": 194, "logarithm": [194, 233], "log_sigmoid_t": 195, "log_sigmoid_bw_t": 196, "_golden_function_log_sigmoid": 196, "logaddexp_t": 197, "logaddexp2_t": 198, "logaddexp2_bw_t": 199, "logaddexp_bw_t": 200, "logical_and_t": 201, "_golden_function_logical_and": 201, "AND": [201, 202], "use_legaci": 201, "logical_and__t": 202, "logical_not_t": 203, "logical_not__t": 204, "_golden_function_logical_not_": 204, "logical_or_t": 205, "_golden_function_logical_or": 205, "OR": [205, 206, 289], "logical_or__t": 206, "logical_xor_t": 207, "_golden_function_logical_xor": 207, "land": [207, 208], "lnot": [207, 208], "lor": [207, 208], "logical_xor__t": 208, "xor": 208, "logit_t": 209, "_golden_function_logit": [209, 210], "logit_bw_t": 210, "logiteps_bw_t": 211, "logitep": 211, "lt_t": 212, "lt__t": 213, "_golden_function_lt_": 213, "ltz_t": 214, "mac_t": 215, "_golden_function_mac": 215, "context": [216, 275, 276], "exit": 216, "occur": 216, "matmul_t": 217, "dimension": [217, 233, 380], "dot": [217, 356, 357], "although": 217, "combin": [217, 384], "work": [217, 315, 374, 375, 377, 385], "most": [217, 383], "variou": [217, 381, 383], "align": [217, 377, 379], "appropri": [217, 375, 377], "abov": [217, 377], "criteria": 217, "messag": [217, 379], "unexpect": 217, "obviou": 217, "These": [217, 375, 377, 379, 381, 383, 385], "scenario": [217, 380], "relat": 217, "swap": 217, "j": 217, "implicitli": 217, "extend": 217, "patch": 217, "leverag": 217, "accord": [217, 250, 286, 377], "look": [217, 352, 375, 376, 379, 380], "n_size": 217, "m_size": 217, "k_size": 217, "p": [217, 380], "though": 217, "constraint": [217, 380], "chosen": [217, 379], "carefulli": 217, "fix": 217, "problem": 217, "max_t": 218, "max_bw_t": 219, "max_pool2d_t": 220, "golden_maxpool2d": 220, "window": 220, "nhw": 220, "scheme": [220, 259, 260, 261, 262], "input_h": 220, "input_w": 220, "ceil_mod": 220, "applied_shard_schem": 220, "createdevic": 220, "l1_small_siz": [220, 246], "8192": 220, "kernel_h": 220, "kernel_w": 220, "stride_h": 220, "stride_w": 220, "pad_h": 220, "pad_w": 220, "dilation_h": 220, "dilation_w": 220, "nchw_shape": 220, "in_n": 220, "in_c": 220, "in_h": 220, "in_w": 220, "input_perm": 220, "input_reshap": 220, "tt_input": 220, "tt_input_dev": 220, "tt_output": 220, "in_place_halo": 220, "maximum_t": 221, "_golden_function_maximum": 221, "tensorsupport": 221, "16777216": 221, "mean_t": 222, "min_t": 223, "min_bw_t": 224, "minimum_t": 225, "_golden_function_minimum": 225, "mish_t": 226, "inf": [226, 232], "initialize_model": [227, 228, 374], "model_nam": [227, 228, 374], "convert_to_ttnn": [227, 228, 374], "custom_preprocessor": [227, 228, 374], "dict": [227, 228], "parameterdict": [227, 228], "prefix": [227, 228], "run_model": 227, "reader_patterns_cach": 227, "disabl": [227, 228, 385], "git": [227, 228, 377], "doesn": [227, 228], "invalid": [227, 228], "preprocessor": [227, 228], "put": [227, 228, 374, 382, 383, 384], "submodul": [227, 228, 377], "appear": [227, 228, 377], "ttnn_module_arg": 227, "tmp": 227, "model_graph": 227, "svg": [227, 385], "avoid": [227, 317, 379, 380, 383], "recomput": 227, "moreh_sum_t": 229, "mse_loss_t": 230, "_golden_function_mse_loss": 230, "mul_bw_t": 231, "multigammaln_t": 232, "multigammaln_bw_t": 233, "_golden_function_mvlgamma": 233, "multivari": 233, "mvlgamma": 233, "5f": 233, "multiply_t": 234, "ne_t": 235, "ne__t": 236, "_golden_function_ne_": 236, "neg_t": 237, "neg_bw_t": 238, "_golden_function_neg": 238, "nextafter_t": 239, "_golden_function_nextaft": 239, "_float": 239, "neq": 239, "nez_t": 240, "nonzero_t": 241, "well": [241, 377, 378, 383], "normalize_global_t": 242, "_golden_function_normalize_glob": 242, "normalize_hw_t": 243, "_golden_function_normalize_hw": 243, "ones_t": 244, "ones_like_t": 245, "trace_region_s": 246, "dispatch_core_config": 246, "dispatchcoreconfig": 246, "0x7f48e05e0070": 246, "worker_l1_s": 246, "small": 246, "default_l1_small_s": 246, "default_trace_region_s": 246, "allocat": 246, "dispatch_core_typ": 246, "dispatchcoretyp": 246, "dispatch": [246, 379], "0x7fbac5bfc1b0": 246, "outer_t": 247, "_golden_function_out": 247, "otim": 247, "pad_t": 248, "_preprocess_golden_function_input": 248, "locat": [248, 376, 379, 385], "mutual": 248, "output_tensor_shap": [248, 347], "input_tensor_start": 248, "union": 248, "use_multicor": [248, 346, 347, 364, 365], "pad_input": 248, "unpadded_shap": 249, "annot": [249, 375], "fixeds": 249, "permute_t": 250, "nullopt": [250, 352], "tthe": 250, "broken": 250, "random": [250, 383, 384], "garbag": 250, "polar_t": 251, "cartesian": 251, "theta": 251, "polar_bw_t": 252, "polygamma_t": 253, "_golden_function_polygamma": 253, "decim": [253, 291], "k": [253, 352, 356, 357], "polygamma_bw_t": 254, "polyval_t": 255, "_golden_function_polyv": 255, "coeffici": [255, 375], "coeff": 255, "sum_": 255, "polynomi": 255, "pow_t": 256, "_golden_function_pow": 256, "expon": [256, 257, 293, 294, 380], "pow_bw_t": 257, "power": [257, 363], "prelu_t": 258, "_golden_function_prelu": 258, "arrai": [258, 383], "suitabl": [259, 260, 261, 262], "invoc": [259, 260, 261, 262], "exact": [259, 260, 261, 262, 380], "input_memory_config": [259, 260, 261, 262], "input_layout": [259, 260, 261, 262], "output_dtyp": [259, 260, 261, 262], "convtranspose2d": [260, 261], "conv_tranpose2d": 261, "weights_format": [261, 262], "iohw": 261, "has_bia": [261, 262], "term": [261, 262, 378], "oihw": 262, "prod_t": 263, "similar": [263, 379], "squeez": [263, 351], "output_all_dim": 263, "prod_bw_t": 264, "particular": [264, 374, 377, 385], "taken": 264, "all_dims_output": 264, "rad2deg_t": 265, "rad2deg_bw_t": 266, "_golden_function_rad2deg": 266, "rdiv_t": 267, "_golden_function_rdiv": 267, "numer": [267, 317, 376, 380], "rounding_mod": 267, "rdiv_bw_t": 268, "real_t": 269, "real_bw_t": 270, "new_tensor": 271, "my_memory_config": 271, "reciprocal_t": 272, "inaccur": [272, 380], "characterist": 272, "fp": 272, "reciprocal_bw_t": 273, "_golden_function_reciproc": 273, "reduce_scatter_t": 274, "reduce0scatt": 274, "reglu_t": 277, "_golden_function_reglu": 277, "relu_t": 278, "relu6_t": 279, "relu6_bw_t": 280, "_golden_function_relu6": 280, "relu_bw_t": 281, "_golden_function_relu": 281, "relu_max_t": 282, "_golden_function_relu_max": 282, "upper_limit": 282, "cap": 282, "relu_min_t": 283, "_golden_function_relu_min": 283, "lower_limit": 283, "remainder_t": 284, "_golden_function_remaind": 284, "modulu": 284, "remainder_bw_t": 285, "repeat_t": 286, "repetit": [286, 288], "repetition_vector": 286, "smallvector": 286, "repeat_bw_t": 287, "repeat_interleave_t": 288, "he": 288, "expand": [288, 380, 383], "torch_input_tensor": [288, 385], "torch_result": 288, "reshape_t": 289, "cost": 289, "view": [289, 379, 384, 385], "new_shap": 289, "kwtype": 289, "rms_norm_t": 290, "round_t": 291, "_golden_function_round": [291, 292], "No": [291, 384], "round_bw_t": 292, "rpow_t": 293, "_golden_function_rpow": 293, "upto": 293, "28": [293, 384], "posit": [293, 357], "rpow_bw_t": 294, "rsqrt_t": 295, "rsqrt_bw_t": 296, "_golden_function_rsqrt": 296, "root": [296, 324, 353, 354, 384], "rsub_t": 297, "_golden_function_rsub": 297, "rsub_bw_t": 298, "subract": 298, "revers": 298, "scatter_t": 299, "_golden_function_scatt": 299, "selu_t": 300, "_golden_function_selu": [300, 301], "0507": 300, "67326": 300, "selu_bw_t": 301, "modifi": [302, 317], "short": [302, 385], "sigmoid_t": 303, "vector_mod": 303, "better": [303, 340], "rc": [303, 377], "sigmoid_accurate_t": 304, "sigmoid_bw_t": 305, "_golden_function_sigmoid": 305, "sign_t": 306, "sign_bw_t": 307, "signbit_t": 308, "silu_t": 309, "silu_bw_t": 310, "_golden_function_silu": 310, "sin_t": 311, "sin_bw_t": 312, "sinh_t": 313, "sinh_bw_t": 314, "slice_t": 315, "slice_start": 315, "input_tensor_shap": 315, "slice_end": 315, "slice_step": 315, "unmodifi": 315, "undefin": 315, "16": [315, 380, 383], "softmax_t": 316, "0310059": 316, "softplus_t": 317, "By": [317, 378], "steep": 317, "higher": [317, 377, 379, 380], "steeper": 317, "approach": [317, 374, 378, 385], "hard": 317, "stabil": [317, 378], "veri": [317, 379], "softplus_bw_t": 318, "softshrink_t": 319, "_golden_function_softshrink": 319, "softshrink_bw_t": 320, "softsign_t": 321, "softsign_bw_t": 322, "sqrt_t": 323, "sqrt_bw_t": 324, "_golden_function_sqrt": 324, "square_t": 325, "square_bw_t": 326, "_golden_function_squar": 326, "squared_difference_t": 327, "_golden_function_squared_differ": 327, "squared_difference_bw_t": 328, "std_t": 329, "sub_bw_t": 330, "subalpha_t": 331, "_golden_function_subalpha": 331, "subalpha_bw_t": 332, "subtract_t": 333, "sum_t": 334, "swiglu_t": 335, "_golden_function_swiglu": 335, "swish_t": 336, "queueid": 337, "sub_device_id": 337, "subdeviceid": 337, "synchron": [337, 385], "wait": [337, 379], "complet": [337, 382, 383, 384], "associ": 337, "sub": [337, 364], "ran": [337, 379], "chip": 337, "set_sub_device_stall_group": 337, "queu": 337, "tan_t": 338, "tan_bw_t": 339, "_golden_function_tan": 339, "tanh_t": 340, "tanh_bw_t": 341, "_golden_function_tanh": 341, "tanhshrink_t": 342, "_golden_function_tanhshrink": [342, 343], "tanhshrink_bw_t": 343, "threshold_t": 344, "_golden_function_threshold": [344, 345], "threshold_bw_t": 345, "tilize_t": 346, "_nop_golden_funct": 346, "acceler": [346, 347, 364, 365], "tilize_with_val_padding_t": 347, "800781": 348, "455078": 348, "585938": 348, "to_layout_t": 349, "organ": [349, 375, 380], "becom": 349, "42188": 349, "398438": 349, "to_memory_config_t": 350, "torch_rank": [351, 385], "Will": 351, "reach": 351, "mesh_compos": 351, "cppmeshtotensor": 351, "torch_tensor": [351, 383], "3008": 351, "8438": [351, 383], "3242": 351, "9023": 351, "5820": [351, 383], "5312": [351, 383], "topk_t": 352, "_create_golden_function_topk": 352, "largest": [352, 380], "smallest": 352, "sure": [352, 377, 385], "bfloat8": 352, "top": 352, "attention_softmax_t": 353, "head_siz": [353, 354, 355, 358], "attention_mask": [353, 354], "head": [353, 354, 355, 356, 358, 377], "attent": [353, 354, 356, 357, 358], "mask": [353, 354, 357], "softmaxprogramconfig": [353, 354], "softmaxdefaultprogramconfig": [353, 354], "causal_mask": [353, 354], "causal": [353, 354, 356], "attention_softmax__t": 354, "concatenate_heads_t": 355, "num_head": [355, 358], "sequence_s": [355, 358, 374], "scaled_dot_product_attention_t": 356, "mimick": 356, "flashattent": 356, "accept": [356, 357, 375, 378], "sdpaprogramconfig": [356, 357], "q": [356, 357], "parallel": [356, 357, 379, 383], "nqh": 356, "input_tensor_q": [356, 357], "dh": [356, 357], "input_tensor_k": [356, 357], "nkv": [356, 357], "input_tensor_v": [356, 357], "attn_mask": [356, 357], "impli": 356, "is_caus": [356, 357], "scaled_dot_product_attention_decode_t": 357, "decod": 357, "mqa": 357, "sdpamulticoreprogramconfig": 357, "nh": 357, "cur_po": 357, "cur_pos_tensor": 357, "pnh": 357, "skip": 357, "split_query_key_value_and_split_heads_t": 358, "hidden_s": [358, 374], "Then": [358, 374, 377], "them": [358, 377, 379, 382, 383, 384], "readi": [358, 375], "score": 358, "kv_input_tensor": 358, "q1": 358, "k1": 358, "v1": [358, 377], "qn": 358, "kn": 358, "vn": 358, "cat": 358, "num_kv_head": 358, "contigu": 358, "transpose_kei": 358, "num": 358, "tril_t": 359, "diagon": [359, 360], "triu_t": 360, "trunc_t": 361, "_golden_function_trunc": [361, 362], "trunc_bw_t": 362, "unary_chain_t": 363, "ops_chain": 363, "unarywithparam": 363, "chain": 363, "unaryoptyp": 363, "untilize_t": 364, "use_pack_until": [364, 365], "sub_core_grid": 364, "corerangeset": 364, "untilize_with_unpadding_t": 365, "output_tensor_end": 365, "upsample_t": 366, "form": 366, "nearest": 366, "scale_factor": 366, "array2d": 366, "var_t": 367, "where_t": 368, "_golden_function_wher": 368, "where_bw_t": 369, "xlogy_t": 370, "_golden_function_xlogi": 370, "cdot": 370, "xlogy_bw_t": 371, "zeros_t": 372, "zeros_like_t": 373, "basi": 374, "rewritten": 374, "bert": 374, "modeling_bert": 374, "bertintermedi": 374, "__init__": [374, 384], "super": [374, 384], "dens": 374, "intermediate_s": 374, "forward": [374, 384], "hidden_st": 374, "tdd": 374, "pytest": [374, 375, 379, 385], "torch_bert": 374, "utility_funct": 374, "torch_random": 374, "utils_for_test": 374, "assert_with_pcc": 374, "mark": [374, 375], "parametr": 374, "phiyodr": 374, "finetun": 374, "squad2": 374, "384": 374, "test_bert_intermedi": 374, "manual_se": [374, 384, 385], "bertconfig": 374, "from_pretrain": 374, "eval": 374, "torch_hidden_st": 374, "torch_output": 374, "bert_intermedi": 374, "9999": [374, 385], "dictionari": 374, "turn": 374, "ttnn_bert": 374, "999": 374, "someth": 374, "ttnn_optimized_bert": 374, "isinst": 374, "preprocess_linear_weight": 374, "preprocess_linear_bia": 374, "num_cores_x": 374, "ff1_weight": 374, "ff1_bia": 374, "best": 374, "integr": [374, 375], "incredibli": 375, "excit": 375, "exploratori": 375, "folder": [375, 379], "freedom": 375, "showcas": 375, "few": [375, 380], "question": 375, "answer": 375, "see": [375, 376, 377, 378, 379], "highlight": [375, 380], "successfulli": [375, 381], "migrat": [375, 385], "good": 375, "documen": 375, "readm": [375, 377], "describ": 375, "credit": 375, "author": 375, "might": 375, "encount": 375, "demonstr": [375, 379, 382, 383, 384], "adequ": 375, "achiev": [375, 378], "pearson": 375, "ci": 375, "pipelin": [375, 379], "unit": 375, "metric": 375, "meet": 375, "continu": [375, 377, 378], "upon": 375, "everi": [375, 379, 385], "commit": 375, "ongo": 375, "complianc": 375, "catch": 375, "regress": 375, "earli": 375, "collect": [375, 379, 381], "script": [375, 377, 379, 382, 383, 384], "varieti": 375, "instruct": [375, 376, 377, 379, 381, 385], "measur": 375, "special": [375, 380], "run_device_perf_model": 375, "run_perform": 375, "sh": [375, 377, 379, 385], "models_device_performance_bare_met": 375, "schedul": 375, "clear": [375, 378], "incorpor": 375, "autom": 375, "extern": [375, 378, 380], "servic": 375, "impact": 375, "run_perf_models_oth": 375, "run_perf_models_llm_javelin": 375, "run_perf_models_cnn_javelin": 375, "models_performance_bare_met": 375, "run_demos_single_card_n150_test": 375, "run_demos_single_card_n300_test": 375, "run_t3000_demo_test": 375, "test_ttnn_functional_resnet50": 375, "resnet50testinfra": 375, "setup": [375, 376, 377], "friendli": 376, "ml": [376, 377], "workload": 376, "choic": 376, "jupyt": 376, "notebook": 376, "through": [377, 384], "softwar": 377, "find": 377, "asset": 377, "tag": 377, "compat": 377, "galaxi": 377, "4u": 377, "ubuntu": 377, "04": 377, "33": 377, "fw_pack": 377, "v2": 377, "6u": 377, "17": [377, 383, 384], "v80": 377, "v3": 377, "t3000": 377, "blackhol": [377, 381], "18": [377, 383], "repo": 377, "clang": 377, "wget": 377, "raw": 377, "githubusercont": 377, "install_depend": 377, "sfpi": 377, "chmod": 377, "sudo": [377, 379], "linux": 377, "consult": 377, "vari": 377, "gentoo": 377, "arch": 377, "suffix": 377, "dev": 377, "devel": 377, "gcc": 377, "later": 377, "while": [377, 378], "compil": [377, 385], "newer": 377, "dkm": 377, "debian": 377, "apt": 377, "fedora": 377, "dnf": 377, "enterpris": 377, "epel": 377, "pacman": 377, "cd": [377, 379], "modprob": 377, "visit": 377, "pip": [377, 385], "fw_tag": 377, "fwbundl": 377, "t300": 377, "download": [377, 384], "fw": [377, 379], "tar": 377, "tabl": 377, "correctli": [377, 384], "displai": 377, "telemetri": 377, "Be": 377, "loudbox": 377, "quietbox": 377, "quick": 377, "immedi": 377, "ai": [377, 382, 383, 384], "closer": 377, "conveni": 377, "who": [377, 380], "workflow": 377, "distro": 377, "glibc": 377, "34": 377, "cpu": [377, 379], "governor": 377, "export": [377, 385], "pythonpath": 377, "pwd": 377, "python_env": 377, "txt": 377, "cpufrequtil": 377, "cpupow": 377, "frequenc": 377, "registri": 377, "pull": [377, 378], "ghcr": 377, "io": [377, 379], "amd64": 377, "rm": 377, "hugepag": 377, "1g": 377, "bash": 377, "recurs": 377, "simplest": 377, "via": 377, "build_met": [377, 379], "cmake": 377, "mkdir": 377, "ninja": 377, "dcmake_build_typ": 377, "relwithdebuginfo": 377, "dcmake_cxx_compil": 377, "box": 377, "create_venv": 377, "doxygen": 377, "driven": [377, 378], "recip": 377, "conda": 377, "forg": 377, "tt_metal_hom": [377, 379, 382, 383], "python3": [377, 381, 382, 383], "m": 377, "run_op_on_devic": 377, "simpl": [377, 382, 383, 384], "intend": 378, "maintain": 378, "reliabl": 378, "simultan": 378, "fine": 378, "tune": 378, "themselv": [378, 380], "goal": 378, "ask": 378, "popular": 378, "kent": 378, "beck": 378, "benefit": 378, "submit": 378, "label": [378, 380, 384], "fulli": [378, 379], "fallback": 378, "branch": 378, "brief": 378, "4730": 378, "rst": 378, "referenc": 378, "sweep": 378, "codeown": 378, "pr": 378, "reflect": 378, "merg": 378, "comment": 378, "resnet": 379, "test_perf_resnet": 379, "test_perf_bare_met": 379, "0185": 379, "finish": 379, "csv": 379, "consol": 379, "give": 379, "shorter": 379, "append": 379, "cli": 379, "explain": 379, "reset": 379, "tt_smi": 379, "tensix_reset": 379, "tensix": [379, 383], "skew": 379, "timer": 379, "reboot": 379, "machin": [379, 381], "wh": 379, "analyz": 379, "1000": 379, "fixtur": 379, "ttl": 379, "dumpdeviceprofil": 379, "total": [379, 384], "drop": 379, "around": 379, "120": [379, 383], "eighth": 379, "receiv": 379, "warn": 379, "mention": 379, "risc": 379, "faster": 379, "those": 379, "analysi": 379, "affect": 379, "flow": 379, "come": 379, "python_fallback": 379, "tt_dnn_cpu": 379, "tt_dnn_devic": 379, "global": 379, "fidel": 379, "field": 379, "lofi": 379, "hifi2": 379, "hifi3": 379, "clock": 379, "stamp": 379, "durat": [379, 385], "nanosecond": 379, "end_t": 379, "start_t": 379, "cycl": 379, "earliest": 379, "core_frequ": 379, "marker": 379, "brisc": 379, "ncrisc": 379, "trisc0": 379, "trisc1": 379, "trisc2": 379, "cb": 379, "front": 379, "spent": 379, "cb_wait_front": 379, "reserv": 379, "cb_reserve_back": 379, "datamov": 379, "input_0_memori": 379, "z": 379, "channels_last": 379, "dev_0_dram": 379, "dec_0_l1": 379, "noc": 379, "timelin": 379, "npe": 379, "subdirectori": 379, "npe_viz": 379, "tab": 379, "traffic": 379, "congest": 379, "properli": 379, "item": [379, 384], "aggreg": 379, "timestamp": 379, "ops_perf_results_2025_06_25_14_04_34": 379, "2025_06_25_14_04_34": 379, "upload": 379, "4x4": 380, "32x32": [380, 383], "still": 380, "transit": 380, "2x2": 380, "illustr": 380, "byte": 380, "That": 380, "sizeof": 380, "introduc": 380, "behavior": 380, "observ": 380, "magnitud": 380, "flush": 380, "instabl": 380, "extrem": 380, "infin": 380, "domin": 380, "caus": 380, "lose": 380, "precis": 380, "7014118346046923e": 380, "dataset": [380, 384], "frequent": 380, "occurr": 380, "uniform": 380, "deal": 380, "critic": 380, "homogen": 380, "unsuit": 380, "inher": 380, "owned_host_storag": 380, "borrowed_host_storag": 380, "borrow": 380, "numpi": [380, 383, 384], "device_storag": 380, "abstract": 380, "awai": 380, "compress": 380, "upper": 380, "learn": 380, "remain": 380, "128x128": 380, "subset": 380, "know": 380, "understand": 380, "unshard": 380, "coordin": 380, "physic": 380, "ramp": 381, "task": [381, 384], "directli": [381, 382, 383, 384], "togeth": [382, 383, 384], "llama": 382, "mistral": 382, "diffus": 382, "ttnn_add_tensor": 382, "loguru": [382, 383, 384], "logger": [382, 383, 384], "tt_tensor1": 382, "tt_tensor2": 382, "tt_result": 382, "everyth": [382, 383, 384], "2025": [382, 383, 384], "ulc": [382, 383, 384], "__name__": [382, 383, 384], "__main__": [382, 383, 384], "As": [382, 384], "basic_python": [382, 383], "06": [382, 383, 384], "23": [382, 383, 384], "09": [382, 383, 384], "36": 382, "58": 382, "211": 382, "29": 382, "37": 382, "00": [382, 384], "524": 382, "525": 382, "ttnn_basic_oper": 383, "np": [383, 384], "conver": 383, "to_tt_til": 383, "host_rand": 383, "effici": [383, 384], "amount": 383, "necesasri": 383, "earlier": 383, "transfer": 383, "overhead": 383, "tt_t1": 383, "tt_t2": 383, "tt_t3": 383, "tt_t4": 383, "t5": 383, "tt_t5": 383, "add_result": 383, "mul_result": 383, "mul": 383, "matmul_result": 383, "broadcast_vector": 383, "broadcast_tt": 383, "broadcast_add_result": 383, "f": [383, 384, 385], "Ones": 383, "ttnn_add": 383, "ttnn_mul": 383, "ttnn_matmul": 383, "47": [383, 384], "093": 383, "19": 383, "117": 383, "48": 383, "118": 383, "49": 383, "119": 383, "1367": 383, "3320": 383, "8125": 383, "7969": 383, "6250": 383, "8906": 383, "6914": 383, "1377": 383, "2480": 383, "6406": 383, "0109": 383, "2080": 383, "6992": 383, "8750": 383, "6133": 383, "3086": 383, "6562": 383, "6016": 383, "1455": 383, "8672": 383, "0221": 383, "3926": 383, "1074": 383, "9414": 383, "5859": 383, "1426": 383, "0182": 383, "7031": 383, "8711": 383, "7305": 383, "4102": 383, "2812": 383, "6836": 383, "51": [383, 384], "53": 383, "928": 383, "59": 383, "1406": 383, "3359": 383, "6953": 383, "2500": 383, "0078": 383, "2109": 383, "6172": 383, "3125": 383, "1484": 383, "0234": 383, "3906": 383, "1094": 383, "9453": 383, "0156": 383, "7344": 383, "4141": 383, "6875": 383, "929": 383, "62": 383, "6641": 383, "0625": 383, "7812": 383, "7500": 383, "3438": 383, "4531": 383, "2422": 383, "0654": 383, "5000": 383, "3750": 383, "8516": 383, "9375": 383, "6094": 383, "1543": 383, "8594": 383, "0938": 383, "0000": 383, "9648": 383, "1250": 383, "4688": 383, "930": 383, "65": 383, "4375": 383, "932": 383, "71": 383, "insight": 384, "ttnn_mlp_inference_mnist": 384, "amongst": 384, "torchvis": 384, "28x28": 384, "grayscal": 384, "subsequ": [384, 385], "dataload": 384, "iter": 384, "totensor": 384, "testset": 384, "testload": 384, "shuffl": 384, "mlp_mnist_weight": 384, "pt": 384, "w1": 384, "b1": 384, "w2": 384, "b2": 384, "w3": 384, "b3": 384, "1x28x28": 384, "1x784": 384, "enumer": 384, "break": 384, "image_tt": 384, "1x128": 384, "w1_tt": 384, "b1_tt": 384, "out1": 384, "w2_tt": 384, "b2_tt": 384, "out2": 384, "digit": 384, "w3_tt": 384, "b3_tt": 384, "out3": 384, "predict": 384, "predicted_label": 384, "sampl": 384, "train_and_export_mlp": 384, "ntt": 384, "100": 384, "2f": 384, "fc1": 384, "relu1": 384, "fc2": 384, "relu2": 384, "fc3": 384, "trainset": 384, "trainload": 384, "criterion": 384, "crossentropyloss": 384, "adam": 384, "lr": 384, "epoch": 384, "total_loss": 384, "zero_grad": 384, "4f": 384, "detach": 384, "784": 384, "723": 384, "52": 384, "480": 384, "85": 384, "491": 384, "499": 384, "506": 384, "514": 384, "snippet": 385, "architectur": 385, "2024": 385, "torch_input_tensor_a": 385, "torch_input_tensor_b": 385, "matmul_output_tensor": 385, "torch_matmul_output_tensor": 385, "unlik": 385, "96": 385, "start_tim": 385, "end_tim": 385, "stdout": 385, "6391518115997314": 385, "0007393360137939453": 385, "manage_config": 385, "enable_comparison_mod": 385, "comparison_mode_pcc": 385, "9998": 385, "construct": 385, "tracer": 385, "exp_trac": 385, "miss": 385, "ttnn_config_overrid": 385, "enable_fast_runtime_mod": 385, "enable_log": 385, "tt_logger_typ": 385, "tt_logger_level": 385, "substitut": 385, "thread": 385, "report_nam": 385, "disk": 385, "enable_detailed_buffer_report": 385, "enable_graph_report": 385, "enable_detailed_tensor_report": 385, "implementaiton": 385, "insid": 385, "unless": 385, "overrid": 385, "addition": 385, "json": 385, "ttnn_config_path": 385, "app": 385, "pre_hook_to_print_args_and_kwarg": 385, "post_hook_to_print_output": 385, "query_registered_oper": 385, "get_fallback_funct": 385, "begin_graph_captur": 385, "runmod": 385, "no_dispatch": 385, "captured_graph": 385, "end_graph_captur": 385, "pretty_print": 385}, "objects": {"ttnn": [[6, 0, 1, "", "Conv2dConfig"], [7, 0, 1, "", "Conv2dSliceConfig"], [8, 3, 1, "", "GetDefaultDevice"], [9, 3, 1, "", "SetDefaultDevice"], [380, 0, 1, "", "Shape"], [10, 5, 1, "", "abs"], [11, 5, 1, "", "abs_bw"], [12, 5, 1, "", "acos"], [13, 5, 1, "", "acos_bw"], [14, 5, 1, "", "acosh"], [15, 5, 1, "", "acosh_bw"], [16, 5, 1, "", "add"], [17, 5, 1, "", "add_bw"], [18, 5, 1, "", "addalpha"], [19, 5, 1, "", "addalpha_bw"], [20, 5, 1, "", "addcdiv"], [21, 5, 1, "", "addcdiv_bw"], [22, 5, 1, "", "addcmul"], [23, 5, 1, "", "addcmul_bw"], [24, 5, 1, "", "all_gather"], [25, 5, 1, "", "alt_complex_rotate90"], [26, 5, 1, "", "angle"], [27, 5, 1, "", "angle_bw"], [28, 5, 1, "", "arange"], [29, 5, 1, "", "argmax"], [30, 5, 1, "", "as_tensor"], [31, 5, 1, "", "asin"], [32, 5, 1, "", "asin_bw"], [33, 5, 1, "", "asinh"], [34, 5, 1, "", "asinh_bw"], [35, 5, 1, "", "assign_bw"], [36, 5, 1, "", "atan"], [37, 5, 1, "", "atan2"], [38, 5, 1, "", "atan2_bw"], [39, 5, 1, "", "atan_bw"], [40, 5, 1, "", "atanh"], [41, 5, 1, "", "atanh_bw"], [42, 5, 1, "", "batch_norm"], [43, 5, 1, "", "bias_gelu_bw"], [44, 5, 1, "", "bitwise_and"], [45, 5, 1, "", "bitwise_left_shift"], [46, 5, 1, "", "bitwise_not"], [47, 5, 1, "", "bitwise_or"], [48, 5, 1, "", "bitwise_right_shift"], [49, 5, 1, "", "bitwise_xor"], [50, 5, 1, "", "cbrt"], [51, 5, 1, "", "ceil"], [52, 5, 1, "", "ceil_bw"], [53, 5, 1, "", "celu"], [54, 5, 1, "", "celu_bw"], [55, 5, 1, "", "clamp"], [56, 5, 1, "", "clamp_bw"], [57, 5, 1, "", "clip"], [58, 5, 1, "", "clip_bw"], [59, 5, 1, "", "clone"], [60, 3, 1, "", "close_device"], [61, 5, 1, "", "concat"], [62, 5, 1, "", "concat_bw"], [63, 5, 1, "", "conj"], [64, 5, 1, "", "conj_bw"], [65, 5, 1, "", "conv1d"], [66, 5, 1, "", "conv2d"], [67, 5, 1, "", "conv_transpose2d"], [68, 5, 1, "", "cos"], [69, 5, 1, "", "cos_bw"], [70, 5, 1, "", "cosh"], [71, 5, 1, "", "cosh_bw"], [72, 3, 1, "", "create_sharded_memory_config"], [73, 5, 1, "", "cumprod"], [74, 5, 1, "", "cumsum"], [75, 5, 1, "", "deallocate"], [76, 5, 1, "", "deg2rad"], [77, 5, 1, "", "deg2rad_bw"], [78, 5, 1, "", "digamma"], [79, 5, 1, "", "digamma_bw"], [80, 5, 1, "", "div"], [81, 5, 1, "", "div_bw"], [82, 5, 1, "", "div_no_nan"], [83, 5, 1, "", "div_no_nan_bw"], [84, 5, 1, "", "dump_tensor"], [85, 5, 1, "", "elu"], [86, 5, 1, "", "elu_bw"], [87, 5, 1, "", "embedding"], [88, 5, 1, "", "embedding_bw"], [89, 5, 1, "", "empty"], [90, 5, 1, "", "empty_like"], [91, 5, 1, "", "eq"], [92, 5, 1, "", "eq_"], [93, 5, 1, "", "eqz"], [94, 5, 1, "", "erf"], [95, 5, 1, "", "erf_bw"], [96, 5, 1, "", "erfc"], [97, 5, 1, "", "erfc_bw"], [98, 5, 1, "", "erfinv"], [99, 5, 1, "", "erfinv_bw"], [100, 5, 1, "", "exp"], [101, 5, 1, "", "exp2"], [102, 5, 1, "", "exp2_bw"], [103, 5, 1, "", "exp_bw"], [111, 5, 1, "", "expm1"], [112, 5, 1, "", "expm1_bw"], [113, 5, 1, "", "fill"], [114, 5, 1, "", "fill_bw"], [115, 5, 1, "", "fill_ones_rm"], [116, 5, 1, "", "fill_rm"], [117, 5, 1, "", "fill_zero_bw"], [118, 5, 1, "", "floor"], [119, 5, 1, "", "floor_bw"], [120, 5, 1, "", "floor_div"], [121, 5, 1, "", "fmod"], [122, 5, 1, "", "fmod_bw"], [123, 3, 1, "", "format_input_tensor"], [124, 3, 1, "", "format_output_tensor"], [125, 5, 1, "", "frac"], [126, 5, 1, "", "frac_bw"], [127, 5, 1, "", "from_device"], [128, 5, 1, "", "from_torch"], [129, 5, 1, "", "full"], [130, 5, 1, "", "full_like"], [131, 5, 1, "", "gcd"], [132, 5, 1, "", "ge"], [133, 5, 1, "", "ge_"], [134, 5, 1, "", "geglu"], [135, 5, 1, "", "gelu"], [136, 5, 1, "", "gelu_bw"], [137, 5, 1, "", "gez"], [138, 5, 1, "", "global_avg_pool2d"], [139, 5, 1, "", "glu"], [140, 5, 1, "", "group_norm"], [141, 5, 1, "", "gt"], [142, 5, 1, "", "gt_"], [143, 5, 1, "", "gtz"], [144, 5, 1, "", "hardshrink"], [145, 5, 1, "", "hardshrink_bw"], [146, 5, 1, "", "hardsigmoid"], [147, 5, 1, "", "hardsigmoid_bw"], [148, 5, 1, "", "hardswish"], [149, 5, 1, "", "hardswish_bw"], [150, 5, 1, "", "hardtanh"], [151, 5, 1, "", "hardtanh_bw"], [152, 5, 1, "", "heaviside"], [153, 5, 1, "", "hypot"], [154, 5, 1, "", "hypot_bw"], [155, 5, 1, "", "i0"], [156, 5, 1, "", "i0_bw"], [157, 5, 1, "", "identity"], [158, 5, 1, "", "imag"], [159, 5, 1, "", "imag_bw"], [160, 5, 1, "", "indexed_fill"], [161, 5, 1, "", "is_imag"], [162, 5, 1, "", "is_real"], [163, 5, 1, "", "isclose"], [164, 5, 1, "", "isfinite"], [165, 5, 1, "", "isinf"], [166, 5, 1, "", "isnan"], [167, 5, 1, "", "isneginf"], [168, 5, 1, "", "isposinf"], [171, 5, 1, "", "l1_loss"], [172, 5, 1, "", "layer_norm"], [173, 5, 1, "", "lcm"], [174, 5, 1, "", "ldexp"], [175, 5, 1, "", "ldexp_bw"], [176, 5, 1, "", "le"], [177, 5, 1, "", "le_"], [178, 5, 1, "", "leaky_relu"], [179, 5, 1, "", "leaky_relu_bw"], [180, 5, 1, "", "lerp"], [181, 5, 1, "", "lerp_bw"], [182, 5, 1, "", "lez"], [183, 5, 1, "", "lgamma"], [184, 5, 1, "", "lgamma_bw"], [185, 5, 1, "", "linear"], [186, 5, 1, "", "load_tensor"], [187, 5, 1, "", "log"], [188, 5, 1, "", "log10"], [189, 5, 1, "", "log10_bw"], [190, 5, 1, "", "log1p"], [191, 5, 1, "", "log1p_bw"], [192, 5, 1, "", "log2"], [193, 5, 1, "", "log2_bw"], [194, 5, 1, "", "log_bw"], [195, 5, 1, "", "log_sigmoid"], [196, 5, 1, "", "log_sigmoid_bw"], [197, 5, 1, "", "logaddexp"], [198, 5, 1, "", "logaddexp2"], [199, 5, 1, "", "logaddexp2_bw"], [200, 5, 1, "", "logaddexp_bw"], [201, 5, 1, "", "logical_and"], [202, 5, 1, "", "logical_and_"], [203, 5, 1, "", "logical_not"], [204, 5, 1, "", "logical_not_"], [205, 5, 1, "", "logical_or"], [206, 5, 1, "", "logical_or_"], [207, 5, 1, "", "logical_xor"], [208, 5, 1, "", "logical_xor_"], [209, 5, 1, "", "logit"], [210, 5, 1, "", "logit_bw"], [211, 5, 1, "", "logiteps_bw"], [212, 5, 1, "", "lt"], [213, 5, 1, "", "lt_"], [214, 5, 1, "", "ltz"], [215, 5, 1, "", "mac"], [216, 3, 1, "", "manage_device"], [217, 5, 1, "", "matmul"], [218, 5, 1, "", "max"], [219, 5, 1, "", "max_bw"], [220, 5, 1, "", "max_pool2d"], [221, 5, 1, "", "maximum"], [222, 5, 1, "", "mean"], [223, 5, 1, "", "min"], [224, 5, 1, "", "min_bw"], [225, 5, 1, "", "minimum"], [226, 5, 1, "", "mish"], [229, 5, 1, "", "moreh_sum"], [230, 5, 1, "", "mse_loss"], [231, 5, 1, "", "mul_bw"], [232, 5, 1, "", "multigammaln"], [233, 5, 1, "", "multigammaln_bw"], [234, 5, 1, "", "multiply"], [235, 5, 1, "", "ne"], [236, 5, 1, "", "ne_"], [237, 5, 1, "", "neg"], [238, 5, 1, "", "neg_bw"], [239, 5, 1, "", "nextafter"], [240, 5, 1, "", "nez"], [241, 5, 1, "", "nonzero"], [242, 5, 1, "", "normalize_global"], [243, 5, 1, "", "normalize_hw"], [244, 5, 1, "", "ones"], [245, 5, 1, "", "ones_like"], [246, 3, 1, "", "open_device"], [247, 5, 1, "", "outer"], [248, 5, 1, "", "pad"], [249, 3, 1, "", "pad_to_tile_shape"], [250, 5, 1, "", "permute"], [251, 5, 1, "", "polar"], [252, 5, 1, "", "polar_bw"], [253, 5, 1, "", "polygamma"], [254, 5, 1, "", "polygamma_bw"], [255, 5, 1, "", "polyval"], [256, 5, 1, "", "pow"], [257, 5, 1, "", "pow_bw"], [258, 5, 1, "", "prelu"], [259, 3, 1, "", "prepare_conv_bias"], [260, 3, 1, "", "prepare_conv_transpose2d_bias"], [261, 3, 1, "", "prepare_conv_transpose2d_weights"], [262, 3, 1, "", "prepare_conv_weights"], [263, 5, 1, "", "prod"], [264, 5, 1, "", "prod_bw"], [265, 5, 1, "", "rad2deg"], [266, 5, 1, "", "rad2deg_bw"], [267, 5, 1, "", "rdiv"], [268, 5, 1, "", "rdiv_bw"], [269, 5, 1, "", "real"], [270, 5, 1, "", "real_bw"], [271, 5, 1, "", "reallocate"], [272, 5, 1, "", "reciprocal"], [273, 5, 1, "", "reciprocal_bw"], [274, 5, 1, "", "reduce_scatter"], [275, 3, 1, "", "register_post_operation_hook"], [276, 3, 1, "", "register_pre_operation_hook"], [277, 5, 1, "", "reglu"], [278, 5, 1, "", "relu"], [279, 5, 1, "", "relu6"], [280, 5, 1, "", "relu6_bw"], [281, 5, 1, "", "relu_bw"], [282, 5, 1, "", "relu_max"], [283, 5, 1, "", "relu_min"], [284, 5, 1, "", "remainder"], [285, 5, 1, "", "remainder_bw"], [286, 5, 1, "", "repeat"], [287, 5, 1, "", "repeat_bw"], [288, 5, 1, "", "repeat_interleave"], [289, 5, 1, "", "reshape"], [290, 5, 1, "", "rms_norm"], [291, 5, 1, "", "round"], [292, 5, 1, "", "round_bw"], [293, 5, 1, "", "rpow"], [294, 5, 1, "", "rpow_bw"], [295, 5, 1, "", "rsqrt"], [296, 5, 1, "", "rsqrt_bw"], [297, 5, 1, "", "rsub"], [298, 5, 1, "", "rsub_bw"], [299, 5, 1, "", "scatter"], [300, 5, 1, "", "selu"], [301, 5, 1, "", "selu_bw"], [302, 3, 1, "", "set_printoptions"], [303, 5, 1, "", "sigmoid"], [304, 5, 1, "", "sigmoid_accurate"], [305, 5, 1, "", "sigmoid_bw"], [306, 5, 1, "", "sign"], [307, 5, 1, "", "sign_bw"], [308, 5, 1, "", "signbit"], [309, 5, 1, "", "silu"], [310, 5, 1, "", "silu_bw"], [311, 5, 1, "", "sin"], [312, 5, 1, "", "sin_bw"], [313, 5, 1, "", "sinh"], [314, 5, 1, "", "sinh_bw"], [315, 5, 1, "", "slice"], [316, 5, 1, "", "softmax"], [317, 5, 1, "", "softplus"], [318, 5, 1, "", "softplus_bw"], [319, 5, 1, "", "softshrink"], [320, 5, 1, "", "softshrink_bw"], [321, 5, 1, "", "softsign"], [322, 5, 1, "", "softsign_bw"], [323, 5, 1, "", "sqrt"], [324, 5, 1, "", "sqrt_bw"], [325, 5, 1, "", "square"], [326, 5, 1, "", "square_bw"], [327, 5, 1, "", "squared_difference"], [328, 5, 1, "", "squared_difference_bw"], [329, 5, 1, "", "std"], [330, 5, 1, "", "sub_bw"], [331, 5, 1, "", "subalpha"], [332, 5, 1, "", "subalpha_bw"], [333, 5, 1, "", "subtract"], [334, 5, 1, "", "sum"], [335, 5, 1, "", "swiglu"], [336, 5, 1, "", "swish"], [337, 3, 1, "", "synchronize_device"], [338, 5, 1, "", "tan"], [339, 5, 1, "", "tan_bw"], [340, 5, 1, "", "tanh"], [341, 5, 1, "", "tanh_bw"], [342, 5, 1, "", "tanhshrink"], [343, 5, 1, "", "tanhshrink_bw"], [344, 5, 1, "", "threshold"], [345, 5, 1, "", "threshold_bw"], [346, 5, 1, "", "tilize"], [347, 5, 1, "", "tilize_with_val_padding"], [348, 5, 1, "", "to_device"], [349, 5, 1, "", "to_layout"], [350, 5, 1, "", "to_memory_config"], [351, 5, 1, "", "to_torch"], [352, 5, 1, "", "topk"], [359, 5, 1, "", "tril"], [360, 5, 1, "", "triu"], [361, 5, 1, "", "trunc"], [362, 5, 1, "", "trunc_bw"], [363, 5, 1, "", "unary_chain"], [364, 5, 1, "", "untilize"], [365, 5, 1, "", "untilize_with_unpadding"], [366, 5, 1, "", "upsample"], [367, 5, 1, "", "var"], [368, 5, 1, "", "where"], [369, 5, 1, "", "where_bw"], [370, 5, 1, "", "xlogy"], [371, 5, 1, "", "xlogy_bw"], [372, 5, 1, "", "zeros"], [373, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[6, 1, 1, "", "act_block_h_override"], [6, 1, 1, "", "act_block_w_div"], [6, 1, 1, "", "activation"], [6, 1, 1, "", "core_grid"], [6, 1, 1, "", "deallocate_activation"], [6, 1, 1, "", "enable_act_double_buffer"], [6, 1, 1, "", "enable_kernel_stride_folding"], [6, 1, 1, "", "enable_split_reader"], [6, 1, 1, "", "enable_subblock_padding"], [6, 1, 1, "", "enable_weights_double_buffer"], [6, 1, 1, "", "in_place"], [6, 1, 1, "", "output_layout"], [6, 1, 1, "", "override_sharding_config"], [6, 1, 1, "", "reallocate_halo_output"], [6, 1, 1, "", "reshard_if_not_optimal"], [6, 1, 1, "", "shard_layout"], [6, 1, 1, "", "transpose_shards"], [6, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[7, 0, 1, "", "SliceTypeEnum"], [7, 1, 1, "", "num_slices"], [7, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[7, 2, 1, "", "SliceHeight"], [7, 2, 1, "", "SliceWidth"], [7, 1, 1, "", "name"], [7, 1, 1, "", "value"]], "ttnn.Shape": [[380, 1, 1, "", "rank"], [380, 4, 1, "", "to_rank"]], "ttnn.experimental": [[104, 5, 1, "", "all_reduce"], [105, 5, 1, "", "conv3d"], [106, 5, 1, "", "dropout"], [107, 5, 1, "", "gather"], [108, 5, 1, "", "gelu_bw"], [109, 5, 1, "", "rotary_embedding"], [110, 5, 1, "", "sort"]], "ttnn.kv_cache": [[169, 5, 1, "", "fill_cache_for_user_"], [170, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[227, 3, 1, "", "preprocess_model"], [228, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[353, 5, 1, "", "attention_softmax"], [354, 5, 1, "", "attention_softmax_"], [355, 5, 1, "", "concatenate_heads"], [356, 5, 1, "", "scaled_dot_product_attention"], [357, 5, 1, "", "scaled_dot_product_attention_decode"], [358, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 3, 4, 374, 377, 379, 383, 384, 385], "nn": [0, 3, 4, 374, 377, 379, 383, 384, 385], "document": [0, 377], "ttnn": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 377], "develop": 1, "support": [2, 385], "report": [2, 5, 379], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 385], "tip": 2, "commun": 2, "what": [3, 4], "i": [3, 4], "ad": 4, "new": [4, 378], "oper": [4, 5, 374, 379, 382, 383, 385], "faq": 4, "step": [4, 374, 377], "ar": [4, 377], "need": 4, "add": [4, 16, 382], "c": [4, 385], "python": [4, 385], "exampl": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 377, 382, 383, 384, 385], "devic": [4, 5, 377, 382, 383, 384, 385], "implement": 4, "1": [4, 374, 376, 377, 384, 385], "2": [4, 374, 376, 377, 384, 385], "bind": 4, "option": [4, 377], "golden": 4, "function": [4, 378, 383, 385], "api": [5, 380], "memori": [5, 380], "config": [5, 380], "core": 5, "tensor": [5, 380, 382, 383, 384, 385], "creation": [5, 382, 383], "matrix": 5, "multipl": [5, 380], "pointwis": 5, "unari": 5, "binari": [5, 377], "ternari": 5, "loss": 5, "reduct": 5, "data": [5, 380, 384], "movement": 5, "normal": 5, "moreh": 5, "transform": [5, 353, 354, 355, 356, 357, 358], "ccl": 5, "embed": [5, 87], "convolut": 5, "pool": 5, "vision": 5, "kv": 5, "cach": [5, 385], "model": [5, 374, 376, 377], "convers": 5, "hook": [5, 385], "conv2dconfig": 6, "conv2dsliceconfig": 7, "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "all_gath": 24, "alt_complex_rotate90": 25, "angl": 26, "angle_bw": 27, "arang": 28, "argmax": 29, "as_tensor": 30, "asin": 31, "asin_bw": 32, "asinh": 33, "asinh_bw": 34, "assign_bw": 35, "atan": 36, "atan2": 37, "atan2_bw": 38, "atan_bw": 39, "atanh": 40, "atanh_bw": 41, "batch_norm": 42, "bias_gelu_bw": 43, "bitwise_and": 44, "bitwise_left_shift": 45, "bitwise_not": 46, "bitwise_or": 47, "bitwise_right_shift": 48, "bitwise_xor": 49, "cbrt": 50, "ceil": 51, "ceil_bw": 52, "celu": 53, "celu_bw": 54, "clamp": 55, "clamp_bw": 56, "clip": 57, "clip_bw": 58, "clone": [59, 377], "close_devic": 60, "concat": 61, "concat_bw": 62, "conj": 63, "conj_bw": 64, "conv1d": 65, "conv2d": 66, "conv_transpose2d": 67, "co": 68, "cos_bw": 69, "cosh": 70, "cosh_bw": 71, "create_sharded_memory_config": 72, "cumprod": 73, "cumsum": 74, "dealloc": 75, "deg2rad": 76, "deg2rad_bw": 77, "digamma": 78, "digamma_bw": 79, "div": 80, "div_bw": 81, "div_no_nan": 82, "div_no_nan_bw": 83, "dump_tensor": 84, "elu": 85, "elu_bw": 86, "embedding_bw": 88, "empti": 89, "empty_lik": 90, "eq": 91, "eq_": 92, "eqz": 93, "erf": 94, "erf_bw": 95, "erfc": 96, "erfc_bw": 97, "erfinv": 98, "erfinv_bw": 99, "exp": 100, "exp2": 101, "exp2_bw": 102, "exp_bw": 103, "experiment": [104, 105, 106, 107, 108, 109, 110], "all_reduc": 104, "conv3d": 105, "dropout": 106, "gather": 107, "gelu_bw": [108, 136], "rotary_embed": 109, "sort": 110, "expm1": 111, "expm1_bw": 112, "fill": 113, "fill_bw": 114, "fill_ones_rm": 115, "fill_rm": 116, "fill_zero_bw": 117, "floor": 118, "floor_bw": 119, "floor_div": 120, "fmod": 121, "fmod_bw": 122, "format_input_tensor": 123, "format_output_tensor": 124, "frac": 125, "frac_bw": 126, "from_devic": 127, "from_torch": 128, "full": [129, 382, 383, 384], "full_lik": 130, "gcd": 131, "ge": 132, "ge_": 133, "geglu": 134, "gelu": 135, "gez": 137, "global_avg_pool2d": 138, "glu": 139, "group_norm": 140, "gt": 141, "gt_": 142, "gtz": 143, "hardshrink": 144, "hardshrink_bw": 145, "hardsigmoid": 146, "hardsigmoid_bw": 147, "hardswish": 148, "hardswish_bw": 149, "hardtanh": 150, "hardtanh_bw": 151, "heavisid": 152, "hypot": 153, "hypot_bw": 154, "i0": 155, "i0_bw": 156, "ident": 157, "imag": [158, 377, 384], "imag_bw": 159, "indexed_fil": 160, "is_imag": 161, "is_real": 162, "isclos": 163, "isfinit": 164, "isinf": 165, "isnan": 166, "isneginf": 167, "isposinf": 168, "kv_cach": [169, 170], "fill_cache_for_user_": 169, "update_cache_for_token_": 170, "l1_loss": 171, "layer_norm": 172, "lcm": 173, "ldexp": 174, "ldexp_bw": 175, "le": 176, "le_": 177, "leaky_relu": 178, "leaky_relu_bw": 179, "lerp": 180, "lerp_bw": 181, "lez": 182, "lgamma": 183, "lgamma_bw": 184, "linear": [185, 384], "load_tensor": 186, "log": [187, 385], "log10": 188, "log10_bw": 189, "log1p": 190, "log1p_bw": 191, "log2": 192, "log2_bw": 193, "log_bw": 194, "log_sigmoid": 195, "log_sigmoid_bw": 196, "logaddexp": 197, "logaddexp2": 198, "logaddexp2_bw": 199, "logaddexp_bw": 200, "logical_and": 201, "logical_and_": 202, "logical_not": 203, "logical_not_": 204, "logical_or": 205, "logical_or_": 206, "logical_xor": 207, "logical_xor_": 208, "logit": 209, "logit_bw": 210, "logiteps_bw": 211, "lt": 212, "lt_": 213, "ltz": 214, "mac": 215, "manage_devic": 216, "matmul": 217, "max": 218, "max_bw": 219, "max_pool2d": 220, "maximum": 221, "mean": 222, "min": 223, "min_bw": 224, "minimum": 225, "mish": 226, "model_preprocess": [227, 228], "preprocess_model": 227, "preprocess_model_paramet": 228, "moreh_sum": 229, "mse_loss": 230, "mul_bw": 231, "multigammaln": 232, "multigammaln_bw": 233, "multipli": 234, "ne": 235, "ne_": 236, "neg": 237, "neg_bw": 238, "nextaft": 239, "nez": 240, "nonzero": 241, "normalize_glob": 242, "normalize_hw": 243, "ones": 244, "ones_lik": 245, "open_devic": 246, "outer": 247, "pad": 248, "pad_to_tile_shap": 249, "permut": 250, "polar": 251, "polar_bw": 252, "polygamma": 253, "polygamma_bw": 254, "polyv": 255, "pow": 256, "pow_bw": 257, "prelu": 258, "prepare_conv_bia": 259, "prepare_conv_transpose2d_bia": 260, "prepare_conv_transpose2d_weight": 261, "prepare_conv_weight": 262, "prod": 263, "prod_bw": 264, "rad2deg": 265, "rad2deg_bw": 266, "rdiv": 267, "rdiv_bw": 268, "real": 269, "real_bw": 270, "realloc": 271, "reciproc": 272, "reciprocal_bw": 273, "reduce_scatt": 274, "register_post_operation_hook": 275, "register_pre_operation_hook": 276, "reglu": 277, "relu": [278, 384], "relu6": 279, "relu6_bw": 280, "relu_bw": 281, "relu_max": 282, "relu_min": 283, "remaind": 284, "remainder_bw": 285, "repeat": 286, "repeat_bw": 287, "repeat_interleav": 288, "reshap": 289, "rms_norm": 290, "round": 291, "round_bw": 292, "rpow": 293, "rpow_bw": 294, "rsqrt": 295, "rsqrt_bw": 296, "rsub": 297, "rsub_bw": 298, "scatter": 299, "selu": 300, "selu_bw": 301, "set_printopt": 302, "sigmoid": 303, "sigmoid_accur": 304, "sigmoid_bw": 305, "sign": 306, "sign_bw": 307, "signbit": 308, "silu": 309, "silu_bw": 310, "sin": 311, "sin_bw": 312, "sinh": 313, "sinh_bw": 314, "slice": [315, 385], "softmax": 316, "softplu": 317, "softplus_bw": 318, "softshrink": 319, "softshrink_bw": 320, "softsign": 321, "softsign_bw": 322, "sqrt": 323, "sqrt_bw": 324, "squar": 325, "square_bw": 326, "squared_differ": 327, "squared_difference_bw": 328, "std": 329, "sub_bw": 330, "subalpha": 331, "subalpha_bw": 332, "subtract": 333, "sum": [334, 384], "swiglu": 335, "swish": 336, "synchronize_devic": 337, "tan": 338, "tan_bw": 339, "tanh": 340, "tanh_bw": 341, "tanhshrink": 342, "tanhshrink_bw": 343, "threshold": 344, "threshold_bw": 345, "tiliz": 346, "tilize_with_val_pad": 347, "to_devic": 348, "to_layout": 349, "to_memory_config": 350, "to_torch": 351, "topk": 352, "attention_softmax": 353, "attention_softmax_": 354, "concatenate_head": 355, "scaled_dot_product_attent": 356, "scaled_dot_product_attention_decod": 357, "split_query_key_value_and_split_head": 358, "tril": 359, "triu": 360, "trunc": 361, "trunc_bw": 362, "unary_chain": 363, "until": 364, "untilize_with_unpad": 365, "upsampl": 366, "var": 367, "where": [368, 376], "where_bw": 369, "xlogi": 370, "xlogy_bw": 371, "zero": 372, "zeros_lik": 373, "convert": [374, 382, 383, 384, 385], "pytorch": [374, 384], "rewrit": 374, "switch": 374, "3": [374, 377, 384, 385], "optim": 374, "more": 374, "build": [375, 376, 377], "uplift": 375, "demo": [375, 376], "get": 376, "start": 376, "instal": [376, 377], "explor": 376, "our": 376, "To": [376, 377], "go": 376, "from": [376, 385], "here": 376, "prerequisit": 377, "set": 377, "up": 377, "hardwar": 377, "driver": 377, "firmwar": 377, "system": 377, "level": 377, "depend": 377, "kmd": 377, "updat": 377, "flash": 377, "manag": 377, "interfac": 377, "smi": 377, "multi": 377, "card": 377, "configur": 377, "topologi": 377, "metalium": 377, "There": 377, "four": 377, "latest": 377, "wheel": 377, "For": 377, "user": 377, "onli": 377, "environ": 377, "docker": 377, "releas": 377, "sourc": 377, "repositori": 377, "librari": [377, 382, 383, 384], "creat": [377, 382, 383], "virtual": 377, "anaconda": 377, "packag": 377, "you": 377, "all": [377, 385], "verifi": 377, "your": 377, "try": 377, "execut": 377, "program": [377, 385], "interest": 377, "onboard": 378, "profil": 379, "perf": 379, "header": 379, "profile_thi": 379, "descript": 379, "us": [379, 385], "perform": [379, 382], "visual": [379, 385], "shape": 380, "layout": 380, "type": 380, "requir": 380, "width": 380, "limit": 380, "bfloat8_b": 380, "storag": 380, "shard": 380, "tutori": 381, "two": 382, "import": [382, 383, 384], "necessari": [382, 383, 384], "open": [382, 383, 384], "tenstorr": [382, 383, 384], "addit": 382, "back": [382, 384, 385], "output": [382, 383, 384], "basic": [383, 384, 385], "helper": 383, "prepar": 383, "host": 383, "tile": 383, "nativ": 383, "base": 383, "arithmet": 383, "simul": 383, "broadcast": 383, "row": 383, "vector": 383, "expans": 383, "mlp": 384, "infer": 384, "load": 384, "mnist": 384, "test": 384, "pretrain": 384, "weight": 384, "accuraci": 384, "track": 384, "loop": 384, "flatten": 384, "layer": 384, "result": 384, "torch": 385, "run": 385, "an": 385, "__getitem__": 385, "4": 385, "enabl": 385, "5": 385, "intermedi": 385, "6": 385, "trace": 385, "graph": 385, "7": 385, "tt_lib": 385, "8": 385, "9": 385, "10": 385, "chang": 385, "string": 385, "represent": 385, "11": 385, "web": 385, "browser": 385, "12": 385, "regist": 385, "pre": 385, "post": 385, "13": 385, "queri": 385, "14": 385, "fall": 385, "15": 385, "captur": 385, "buffer": 385, "alloc": 385, "etc": 385}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "What is TT-NN?": [[3, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[4, "adding-new-tt-nn-operation"]], "FAQ": [[4, "faq"]], "What is a TT-NN operation?": [[4, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[4, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[4, "c-implementation"]], "Step 1: Implement device operation": [[4, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[4, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[4, "python-implementation"]], "Step 1: Add Python binding": [[4, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[4, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[5, "apis"], [380, "apis"]], "Device": [[5, "device"]], "Memory Config": [[5, "memory-config"], [380, "memory-config"]], "Operations": [[5, "operations"]], "Core": [[5, "core"]], "Tensor Creation": [[5, "tensor-creation"], [382, "tensor-creation"]], "Matrix Multiplication": [[5, "matrix-multiplication"]], "Pointwise Unary": [[5, "pointwise-unary"]], "Pointwise Binary": [[5, "pointwise-binary"]], "Pointwise Ternary": [[5, "pointwise-ternary"]], "Losses": [[5, "losses"]], "Reduction": [[5, "reduction"]], "Data Movement": [[5, "data-movement"]], "Normalization": [[5, "normalization"]], "Moreh Operations": [[5, "moreh-operations"]], "Transformer": [[5, "transformer"]], "CCL": [[5, "ccl"]], "Embedding": [[5, "embedding"]], "Convolution": [[5, "convolution"]], "Pooling": [[5, "pooling"]], "Vision": [[5, "vision"]], "KV Cache": [[5, "kv-cache"]], "Model Conversion": [[5, "model-conversion"]], "Reports": [[5, "reports"]], "Operation Hooks": [[5, "operation-hooks"]], "ttnn.Conv2dConfig": [[6, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[7, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [60, null], [61, null], [62, null], [63, null], [64, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [106, null], [108, null], [111, null], [112, null], [113, null], [114, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [128, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [171, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [289, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [335, null], [336, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [345, null], [349, null], [350, null], [351, null], [359, null], [360, null], [361, null], [362, null], [363, null], [367, null], [368, null], [369, null], [370, null], [371, null], [372, null], [373, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[24, "ttnn-all-gather"]], "ttnn.alt_complex_rotate90": [[25, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[26, "ttnn-angle"]], "ttnn.angle_bw": [[27, "ttnn-angle-bw"]], "ttnn.arange": [[28, "ttnn-arange"]], "ttnn.argmax": [[29, "ttnn-argmax"]], "ttnn.as_tensor": [[30, "ttnn-as-tensor"]], "Examples": [[30, null], [302, null]], "ttnn.asin": [[31, "ttnn-asin"]], "ttnn.asin_bw": [[32, "ttnn-asin-bw"]], "ttnn.asinh": [[33, "ttnn-asinh"]], "ttnn.asinh_bw": [[34, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[35, "ttnn-assign-bw"]], "ttnn.atan": [[36, "ttnn-atan"]], "ttnn.atan2": [[37, "ttnn-atan2"]], "ttnn.atan2_bw": [[38, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[39, "ttnn-atan-bw"]], "ttnn.atanh": [[40, "ttnn-atanh"]], "ttnn.atanh_bw": [[41, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[42, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[43, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[44, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[45, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[46, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[47, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[48, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[49, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[50, "ttnn-cbrt"]], "ttnn.ceil": [[51, "ttnn-ceil"]], "ttnn.ceil_bw": [[52, "ttnn-ceil-bw"]], "ttnn.celu": [[53, "ttnn-celu"]], "ttnn.celu_bw": [[54, "ttnn-celu-bw"]], "ttnn.clamp": [[55, "ttnn-clamp"]], "ttnn.clamp_bw": [[56, "ttnn-clamp-bw"]], "ttnn.clip": [[57, "ttnn-clip"]], "ttnn.clip_bw": [[58, "ttnn-clip-bw"]], "ttnn.clone": [[59, "ttnn-clone"]], "ttnn.close_device": [[60, "ttnn-close-device"]], "ttnn.concat": [[61, "ttnn-concat"]], "ttnn.concat_bw": [[62, "ttnn-concat-bw"]], "ttnn.conj": [[63, "ttnn-conj"]], "ttnn.conj_bw": [[64, "ttnn-conj-bw"]], "ttnn.conv1d": [[65, "ttnn-conv1d"]], "ttnn.conv2d": [[66, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[67, "ttnn-conv-transpose2d"]], "ttnn.cos": [[68, "ttnn-cos"]], "ttnn.cos_bw": [[69, "ttnn-cos-bw"]], "ttnn.cosh": [[70, "ttnn-cosh"]], "ttnn.cosh_bw": [[71, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[72, "ttnn-create-sharded-memory-config"]], "ttnn.cumprod": [[73, "ttnn-cumprod"]], "ttnn.cumsum": [[74, "ttnn-cumsum"]], "ttnn.deallocate": [[75, "ttnn-deallocate"]], "ttnn.deg2rad": [[76, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[77, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[78, "ttnn-digamma"]], "ttnn.digamma_bw": [[79, "ttnn-digamma-bw"]], "ttnn.div": [[80, "ttnn-div"]], "ttnn.div_bw": [[81, "ttnn-div-bw"]], "ttnn.div_no_nan": [[82, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[83, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[84, "ttnn-dump-tensor"]], "ttnn.elu": [[85, "ttnn-elu"]], "ttnn.elu_bw": [[86, "ttnn-elu-bw"]], "ttnn.embedding": [[87, "ttnn-embedding"]], "ttnn.embedding_bw": [[88, "ttnn-embedding-bw"]], "ttnn.empty": [[89, "ttnn-empty"]], "ttnn.empty_like": [[90, "ttnn-empty-like"]], "ttnn.eq": [[91, "ttnn-eq"]], "ttnn.eq_": [[92, "ttnn-eq"]], "ttnn.eqz": [[93, "ttnn-eqz"]], "ttnn.erf": [[94, "ttnn-erf"]], "ttnn.erf_bw": [[95, "ttnn-erf-bw"]], "ttnn.erfc": [[96, "ttnn-erfc"]], "ttnn.erfc_bw": [[97, "ttnn-erfc-bw"]], "ttnn.erfinv": [[98, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[99, "ttnn-erfinv-bw"]], "ttnn.exp": [[100, "ttnn-exp"]], "ttnn.exp2": [[101, "ttnn-exp2"]], "ttnn.exp2_bw": [[102, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[103, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[104, "ttnn-experimental-all-reduce"]], "ttnn.experimental.conv3d": [[105, "ttnn-experimental-conv3d"]], "ttnn.experimental.dropout": [[106, "ttnn-experimental-dropout"]], "ttnn.experimental.gather": [[107, "ttnn-experimental-gather"]], "ttnn.experimental.gelu_bw": [[108, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[109, "ttnn-experimental-rotary-embedding"]], "ttnn.experimental.sort": [[110, "ttnn-experimental-sort"]], "ttnn.expm1": [[111, "ttnn-expm1"]], "ttnn.expm1_bw": [[112, "ttnn-expm1-bw"]], "ttnn.fill": [[113, "ttnn-fill"]], "ttnn.fill_bw": [[114, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[115, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[116, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[117, "ttnn-fill-zero-bw"]], "ttnn.floor": [[118, "ttnn-floor"]], "ttnn.floor_bw": [[119, "ttnn-floor-bw"]], "ttnn.floor_div": [[120, "ttnn-floor-div"]], "ttnn.fmod": [[121, "ttnn-fmod"]], "ttnn.fmod_bw": [[122, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[123, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[124, "ttnn-format-output-tensor"]], "ttnn.frac": [[125, "ttnn-frac"]], "ttnn.frac_bw": [[126, "ttnn-frac-bw"]], "ttnn.from_device": [[127, "ttnn-from-device"]], "ttnn.from_torch": [[128, "ttnn-from-torch"]], "ttnn.full": [[129, "ttnn-full"]], "ttnn.full_like": [[130, "ttnn-full-like"]], "ttnn.gcd": [[131, "ttnn-gcd"]], "ttnn.ge": [[132, "ttnn-ge"]], "ttnn.ge_": [[133, "ttnn-ge"]], "ttnn.geglu": [[134, "ttnn-geglu"]], "ttnn.gelu": [[135, "ttnn-gelu"]], "ttnn.gelu_bw": [[136, "ttnn-gelu-bw"]], "ttnn.gez": [[137, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[138, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[139, "ttnn-glu"]], "ttnn.group_norm": [[140, "ttnn-group-norm"]], "ttnn.gt": [[141, "ttnn-gt"]], "ttnn.gt_": [[142, "ttnn-gt"]], "ttnn.gtz": [[143, "ttnn-gtz"]], "ttnn.hardshrink": [[144, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[145, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[146, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[147, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[148, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[149, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[150, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[151, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[152, "ttnn-heaviside"]], "ttnn.hypot": [[153, "ttnn-hypot"]], "ttnn.hypot_bw": [[154, "ttnn-hypot-bw"]], "ttnn.i0": [[155, "ttnn-i0"]], "ttnn.i0_bw": [[156, "ttnn-i0-bw"]], "ttnn.identity": [[157, "ttnn-identity"]], "ttnn.imag": [[158, "ttnn-imag"]], "ttnn.imag_bw": [[159, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[160, "ttnn-indexed-fill"]], "ttnn.is_imag": [[161, "ttnn-is-imag"]], "ttnn.is_real": [[162, "ttnn-is-real"]], "ttnn.isclose": [[163, "ttnn-isclose"]], "ttnn.isfinite": [[164, "ttnn-isfinite"]], "ttnn.isinf": [[165, "ttnn-isinf"]], "ttnn.isnan": [[166, "ttnn-isnan"]], "ttnn.isneginf": [[167, "ttnn-isneginf"]], "ttnn.isposinf": [[168, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[169, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[170, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[171, "ttnn-l1-loss"]], "ttnn.layer_norm": [[172, "ttnn-layer-norm"]], "ttnn.lcm": [[173, "ttnn-lcm"]], "ttnn.ldexp": [[174, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[175, "ttnn-ldexp-bw"]], "ttnn.le": [[176, "ttnn-le"]], "ttnn.le_": [[177, "ttnn-le"]], "ttnn.leaky_relu": [[178, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[179, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[180, "ttnn-lerp"]], "ttnn.lerp_bw": [[181, "ttnn-lerp-bw"]], "ttnn.lez": [[182, "ttnn-lez"]], "ttnn.lgamma": [[183, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[184, "ttnn-lgamma-bw"]], "ttnn.linear": [[185, "ttnn-linear"]], "ttnn.load_tensor": [[186, "ttnn-load-tensor"]], "ttnn.log": [[187, "ttnn-log"]], "ttnn.log10": [[188, "ttnn-log10"]], "ttnn.log10_bw": [[189, "ttnn-log10-bw"]], "ttnn.log1p": [[190, "ttnn-log1p"]], "ttnn.log1p_bw": [[191, "ttnn-log1p-bw"]], "ttnn.log2": [[192, "ttnn-log2"]], "ttnn.log2_bw": [[193, "ttnn-log2-bw"]], "ttnn.log_bw": [[194, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[195, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[196, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[197, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[198, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[199, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[200, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[201, "ttnn-logical-and"]], "ttnn.logical_and_": [[202, "ttnn-logical-and"]], "ttnn.logical_not": [[203, "ttnn-logical-not"]], "ttnn.logical_not_": [[204, "ttnn-logical-not"]], "ttnn.logical_or": [[205, "ttnn-logical-or"]], "ttnn.logical_or_": [[206, "ttnn-logical-or"]], "ttnn.logical_xor": [[207, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[208, "ttnn-logical-xor"]], "ttnn.logit": [[209, "ttnn-logit"]], "ttnn.logit_bw": [[210, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[211, "ttnn-logiteps-bw"]], "ttnn.lt": [[212, "ttnn-lt"]], "ttnn.lt_": [[213, "ttnn-lt"]], "ttnn.ltz": [[214, "ttnn-ltz"]], "ttnn.mac": [[215, "ttnn-mac"]], "ttnn.manage_device": [[216, "ttnn-manage-device"]], "ttnn.matmul": [[217, "ttnn-matmul"]], "ttnn.max": [[218, "ttnn-max"]], "ttnn.max_bw": [[219, "ttnn-max-bw"]], "ttnn.max_pool2d": [[220, "ttnn-max-pool2d"]], "ttnn.maximum": [[221, "ttnn-maximum"]], "ttnn.mean": [[222, "ttnn-mean"]], "ttnn.min": [[223, "ttnn-min"]], "ttnn.min_bw": [[224, "ttnn-min-bw"]], "ttnn.minimum": [[225, "ttnn-minimum"]], "ttnn.mish": [[226, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[227, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[228, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[229, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[230, "ttnn-mse-loss"]], "ttnn.mul_bw": [[231, "ttnn-mul-bw"]], "ttnn.multigammaln": [[232, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[233, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[234, "ttnn-multiply"]], "ttnn.ne": [[235, "ttnn-ne"]], "ttnn.ne_": [[236, "ttnn-ne"]], "ttnn.neg": [[237, "ttnn-neg"]], "ttnn.neg_bw": [[238, "ttnn-neg-bw"]], "ttnn.nextafter": [[239, "ttnn-nextafter"]], "ttnn.nez": [[240, "ttnn-nez"]], "ttnn.nonzero": [[241, "ttnn-nonzero"]], "ttnn.normalize_global": [[242, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[243, "ttnn-normalize-hw"]], "ttnn.ones": [[244, "ttnn-ones"]], "ttnn.ones_like": [[245, "ttnn-ones-like"]], "ttnn.open_device": [[246, "ttnn-open-device"]], "ttnn.outer": [[247, "ttnn-outer"]], "ttnn.pad": [[248, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[249, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[250, "ttnn-permute"]], "ttnn.polar": [[251, "ttnn-polar"]], "ttnn.polar_bw": [[252, "ttnn-polar-bw"]], "ttnn.polygamma": [[253, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[254, "ttnn-polygamma-bw"]], "ttnn.polyval": [[255, "ttnn-polyval"]], "ttnn.pow": [[256, "ttnn-pow"]], "ttnn.pow_bw": [[257, "ttnn-pow-bw"]], "ttnn.prelu": [[258, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[259, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[260, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[261, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[262, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[263, "ttnn-prod"]], "ttnn.prod_bw": [[264, "ttnn-prod-bw"]], "ttnn.rad2deg": [[265, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[266, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[267, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[268, "ttnn-rdiv-bw"]], "ttnn.real": [[269, "ttnn-real"]], "ttnn.real_bw": [[270, "ttnn-real-bw"]], "ttnn.reallocate": [[271, "ttnn-reallocate"]], "ttnn.reciprocal": [[272, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[273, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[274, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[275, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[276, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[277, "ttnn-reglu"]], "ttnn.relu": [[278, "ttnn-relu"]], "ttnn.relu6": [[279, "ttnn-relu6"]], "ttnn.relu6_bw": [[280, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[281, "ttnn-relu-bw"]], "ttnn.relu_max": [[282, "ttnn-relu-max"]], "ttnn.relu_min": [[283, "ttnn-relu-min"]], "ttnn.remainder": [[284, "ttnn-remainder"]], "ttnn.remainder_bw": [[285, "ttnn-remainder-bw"]], "ttnn.repeat": [[286, "ttnn-repeat"]], "ttnn.repeat_bw": [[287, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[288, "ttnn-repeat-interleave"]], "ttnn.reshape": [[289, "ttnn-reshape"]], "ttnn.rms_norm": [[290, "ttnn-rms-norm"]], "ttnn.round": [[291, "ttnn-round"]], "ttnn.round_bw": [[292, "ttnn-round-bw"]], "ttnn.rpow": [[293, "ttnn-rpow"]], "ttnn.rpow_bw": [[294, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[295, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[296, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[297, "ttnn-rsub"]], "ttnn.rsub_bw": [[298, "ttnn-rsub-bw"]], "ttnn.scatter": [[299, "ttnn-scatter"]], "ttnn.selu": [[300, "ttnn-selu"]], "ttnn.selu_bw": [[301, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[302, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[303, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[304, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[305, "ttnn-sigmoid-bw"]], "ttnn.sign": [[306, "ttnn-sign"]], "ttnn.sign_bw": [[307, "ttnn-sign-bw"]], "ttnn.signbit": [[308, "ttnn-signbit"]], "ttnn.silu": [[309, "ttnn-silu"]], "ttnn.silu_bw": [[310, "ttnn-silu-bw"]], "ttnn.sin": [[311, "ttnn-sin"]], "ttnn.sin_bw": [[312, "ttnn-sin-bw"]], "ttnn.sinh": [[313, "ttnn-sinh"]], "ttnn.sinh_bw": [[314, "ttnn-sinh-bw"]], "ttnn.slice": [[315, "ttnn-slice"]], "ttnn.softmax": [[316, "ttnn-softmax"]], "ttnn.softplus": [[317, "ttnn-softplus"]], "ttnn.softplus_bw": [[318, "ttnn-softplus-bw"]], "ttnn.softshrink": [[319, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[320, "ttnn-softshrink-bw"]], "ttnn.softsign": [[321, "ttnn-softsign"]], "ttnn.softsign_bw": [[322, "ttnn-softsign-bw"]], "ttnn.sqrt": [[323, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[324, "ttnn-sqrt-bw"]], "ttnn.square": [[325, "ttnn-square"]], "ttnn.square_bw": [[326, "ttnn-square-bw"]], "ttnn.squared_difference": [[327, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[328, "ttnn-squared-difference-bw"]], "ttnn.std": [[329, "ttnn-std"]], "ttnn.sub_bw": [[330, "ttnn-sub-bw"]], "ttnn.subalpha": [[331, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[332, "ttnn-subalpha-bw"]], "ttnn.subtract": [[333, "ttnn-subtract"]], "ttnn.sum": [[334, "ttnn-sum"]], "ttnn.swiglu": [[335, "ttnn-swiglu"]], "ttnn.swish": [[336, "ttnn-swish"]], "ttnn.synchronize_device": [[337, "ttnn-synchronize-device"]], "ttnn.tan": [[338, "ttnn-tan"]], "ttnn.tan_bw": [[339, "ttnn-tan-bw"]], "ttnn.tanh": [[340, "ttnn-tanh"]], "ttnn.tanh_bw": [[341, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[342, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[343, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[344, "ttnn-threshold"]], "ttnn.threshold_bw": [[345, "ttnn-threshold-bw"]], "ttnn.tilize": [[346, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[347, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[348, "ttnn-to-device"]], "ttnn.to_layout": [[349, "ttnn-to-layout"]], "ttnn.to_memory_config": [[350, "ttnn-to-memory-config"]], "ttnn.to_torch": [[351, "ttnn-to-torch"]], "ttnn.topk": [[352, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[353, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[354, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[355, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[356, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[357, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[358, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[359, "ttnn-tril"]], "ttnn.triu": [[360, "ttnn-triu"]], "ttnn.trunc": [[361, "ttnn-trunc"]], "ttnn.trunc_bw": [[362, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[363, "ttnn-unary-chain"]], "ttnn.untilize": [[364, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[365, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[366, "ttnn-upsample"]], "ttnn.var": [[367, "ttnn-var"]], "ttnn.where": [[368, "ttnn-where"]], "ttnn.where_bw": [[369, "ttnn-where-bw"]], "ttnn.xlogy": [[370, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[371, "ttnn-xlogy-bw"]], "ttnn.zeros": [[372, "ttnn-zeros"]], "ttnn.zeros_like": [[373, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[374, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[374, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[374, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[374, "step-3-optimizing-the-model"]], "More examples": [[374, "more-examples"]], "Building and Uplifting Demos": [[375, "building-and-uplifting-demos"]], "Getting Started": [[376, "getting-started"]], "1. Install and Build": [[376, "install-and-build"]], "2. Explore Our Model Demos": [[376, "explore-our-model-demos"]], "Where To Go From Here": [[376, "where-to-go-from-here"]], "Install": [[377, "install"]], "Prerequisites:": [[377, "prerequisites"]], "1: Set Up the Hardware": [[377, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[377, "install-driver-firmware"]], "Install System-level Dependencies": [[377, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[377, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[377, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[377, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[377, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[377, "tt-nn-tt-metalium-installation"]], "There are four options for installing TT-Metalium:": [[377, "there-are-four-options-for-installing-tt-metalium"]], "Binaries": [[377, "binaries"]], "Step 1. Install the Latest Wheel:": [[377, "step-1-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[377, "step-2-for-models-users-only-set-up-environment-for-models"]], "Docker Release Image": [[377, "docker-release-image"]], "Source": [[377, "source"]], "Step 1. Clone the Repository:": [[377, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[377, "step-2-build-the-library"]], "Step 3. Create a virtual environment and (optional) documentation.": [[377, "step-3-create-a-virtual-environment-and-optional-documentation"]], "Anaconda": [[377, "anaconda"]], "Step 1. Install the Latest Package:": [[377, "step-1-install-the-latest-package"]], "You are All Set!": [[377, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[377, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[377, "interested-in-contributing"]], "Onboarding New Functionality": [[378, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[379, "profiling-tt-nn-operations"]], "Perf Report Headers": [[379, "perf-report-headers"]], "profile_this description": [[379, "profile-this-description"]], "Using the Performance Report with TT-NN Visualizer": [[379, "using-the-performance-report-with-tt-nn-visualizer"]], "Tensor": [[380, "tensor"]], "Shape": [[380, "shape"]], "Layout": [[380, "layout"]], "Data Type": [[380, "data-type"]], "Required Width Multiples for Data Types": [[380, "id4"]], "Limitation of BFLOAT8_B": [[380, "limitation-of-bfloat8-b"]], "Storage": [[380, "storage"]], "Tensor Sharding": [[380, "tensor-sharding"]], "Tutorials": [[381, "tutorials"]], "Create and Add Two Tensors": [[382, "create-and-add-two-tensors"]], "Import the necessary libraries": [[382, "import-the-necessary-libraries"], [383, "import-the-necessary-libraries"], [384, "import-the-necessary-libraries"]], "Open Tenstorrent device": [[382, "open-tenstorrent-device"], [383, "open-tenstorrent-device"], [384, "open-tenstorrent-device"]], "Perform the addition operation and convert back": [[382, "perform-the-addition-operation-and-convert-back"]], "Full example and output": [[382, "full-example-and-output"], [383, "full-example-and-output"], [384, "full-example-and-output"]], "Basic Operations with TT-NN": [[383, "basic-operations-with-tt-nn"]], "Helper Function for Tensor Preparation": [[383, "helper-function-for-tensor-preparation"]], "Host Tensor Creation": [[383, "host-tensor-creation"]], "Convert Host Tensors to TT-NN Tiled Tensors or Create Natively on Device": [[383, "convert-host-tensors-to-tt-nn-tiled-tensors-or-create-natively-on-device"]], "Tile-Based Arithmetic Operations": [[383, "tile-based-arithmetic-operations"]], "Simulated Broadcasting (Row Vector Expansion)": [[383, "simulated-broadcasting-row-vector-expansion"]], "MLP inference with TT-NN": [[384, "mlp-inference-with-tt-nn"]], "Load MNIST Test Data": [[384, "load-mnist-test-data"]], "Load Pretrained MLP Weights": [[384, "load-pretrained-mlp-weights"]], "Basic accuracy tracking, inference, loop, and image flattening": [[384, "basic-accuracy-tracking-inference-loop-and-image-flattening"]], "Convert to TT-NN Tensor": [[384, "convert-to-tt-nn-tensor"]], "Layer 1 (Linear + ReLU)": [[384, "layer-1-linear-relu"]], "Layer 2 (Linear + ReLU)": [[384, "layer-2-linear-relu"]], "Layer 3 (Output Layer)": [[384, "layer-3-output-layer"]], "Convert Back to PyTorch and sum results": [[384, "convert-back-to-pytorch-and-sum-results"]], "Using TT-NN": [[385, "using-tt-nn"]], "Basic Examples": [[385, "basic-examples"]], "1. Converting from and to torch tensor": [[385, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[385, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[385, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[385, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[385, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[385, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[385, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[385, "enabling-logging"]], "9. Supported Python Operators": [[385, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[385, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[385, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[385, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[385, "query-all-operations"]], "14. Falling back to torch": [[385, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[385, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[6, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.activation"]], "core_grid (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.deallocate_activation"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_subblock_padding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_subblock_padding"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "in_place (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.override_sharding_config"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add (in module ttnn)": [[16, "ttnn.add"]], "add_bw (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "all_gather (in module ttnn)": [[24, "ttnn.all_gather"]], "alt_complex_rotate90 (in module ttnn)": [[25, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[26, "ttnn.angle"]], "angle_bw (in module ttnn)": [[27, "ttnn.angle_bw"]], "arange (in module ttnn)": [[28, "ttnn.arange"]], "argmax (in module ttnn)": [[29, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[30, "ttnn.as_tensor"]], "asin (in module ttnn)": [[31, "ttnn.asin"]], "asin_bw (in module ttnn)": [[32, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[33, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[34, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[35, "ttnn.assign_bw"]], "atan (in module ttnn)": [[36, "ttnn.atan"]], "atan2 (in module ttnn)": [[37, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[38, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[39, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[40, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[41, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[42, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[43, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[44, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[45, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[46, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[47, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[48, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[49, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[50, "ttnn.cbrt"]], "ceil (in module ttnn)": [[51, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[52, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[53, "ttnn.celu"]], "celu_bw (in module ttnn)": [[54, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[55, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[56, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[57, "ttnn.clip"]], "clip_bw (in module ttnn)": [[58, "ttnn.clip_bw"]], "clone (in module ttnn)": [[59, "ttnn.clone"]], "close_device() (in module ttnn)": [[60, "ttnn.close_device"]], "concat (in module ttnn)": [[61, "ttnn.concat"]], "concat_bw (in module ttnn)": [[62, "ttnn.concat_bw"]], "conj (in module ttnn)": [[63, "ttnn.conj"]], "conj_bw (in module ttnn)": [[64, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[65, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[66, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[67, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[68, "ttnn.cos"]], "cos_bw (in module ttnn)": [[69, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[70, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[71, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[72, "ttnn.create_sharded_memory_config"]], "cumprod (in module ttnn)": [[73, "ttnn.cumprod"]], "cumsum (in module ttnn)": [[74, "ttnn.cumsum"]], "deallocate (in module ttnn)": [[75, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[76, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[77, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[78, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[79, "ttnn.digamma_bw"]], "div (in module ttnn)": [[80, "ttnn.div"]], "div_bw (in module ttnn)": [[81, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[82, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[83, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[84, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[85, "ttnn.elu"]], "elu_bw (in module ttnn)": [[86, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[87, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[88, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[89, "ttnn.empty"]], "empty_like (in module ttnn)": [[90, "ttnn.empty_like"]], "eq (in module ttnn)": [[91, "ttnn.eq"]], "eq_ (in module ttnn)": [[92, "ttnn.eq_"]], "eqz (in module ttnn)": [[93, "ttnn.eqz"]], "erf (in module ttnn)": [[94, "ttnn.erf"]], "erf_bw (in module ttnn)": [[95, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[96, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[97, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[98, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[99, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[100, "ttnn.exp"]], "exp2 (in module ttnn)": [[101, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[102, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[103, "ttnn.exp_bw"]], "all_reduce (in module ttnn.experimental)": [[104, "ttnn.experimental.all_reduce"]], "conv3d (in module ttnn.experimental)": [[105, "ttnn.experimental.conv3d"]], "dropout (in module ttnn.experimental)": [[106, "ttnn.experimental.dropout"]], "gather (in module ttnn.experimental)": [[107, "ttnn.experimental.gather"]], "gelu_bw (in module ttnn.experimental)": [[108, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[109, "ttnn.experimental.rotary_embedding"]], "sort (in module ttnn.experimental)": [[110, "ttnn.experimental.sort"]], "expm1 (in module ttnn)": [[111, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[112, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[113, "ttnn.fill"]], "fill_bw (in module ttnn)": [[114, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[115, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[116, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[117, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[118, "ttnn.floor"]], "floor_bw (in module ttnn)": [[119, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[120, "ttnn.floor_div"]], "fmod (in module ttnn)": [[121, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[122, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[123, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[124, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[125, "ttnn.frac"]], "frac_bw (in module ttnn)": [[126, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[127, "ttnn.from_device"]], "from_torch (in module ttnn)": [[128, "ttnn.from_torch"]], "full (in module ttnn)": [[129, "ttnn.full"]], "full_like (in module ttnn)": [[130, "ttnn.full_like"]], "gcd (in module ttnn)": [[131, "ttnn.gcd"]], "ge (in module ttnn)": [[132, "ttnn.ge"]], "ge_ (in module ttnn)": [[133, "ttnn.ge_"]], "geglu (in module ttnn)": [[134, "ttnn.geglu"]], "gelu (in module ttnn)": [[135, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[136, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[137, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[138, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[139, "ttnn.glu"]], "group_norm (in module ttnn)": [[140, "ttnn.group_norm"]], "gt (in module ttnn)": [[141, "ttnn.gt"]], "gt_ (in module ttnn)": [[142, "ttnn.gt_"]], "gtz (in module ttnn)": [[143, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[144, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[145, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[146, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[147, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[148, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[149, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[150, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[151, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[152, "ttnn.heaviside"]], "hypot (in module ttnn)": [[153, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[154, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[155, "ttnn.i0"]], "i0_bw (in module ttnn)": [[156, "ttnn.i0_bw"]], "identity (in module ttnn)": [[157, "ttnn.identity"]], "imag (in module ttnn)": [[158, "ttnn.imag"]], "imag_bw (in module ttnn)": [[159, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[160, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[161, "ttnn.is_imag"]], "is_real (in module ttnn)": [[162, "ttnn.is_real"]], "isclose (in module ttnn)": [[163, "ttnn.isclose"]], "isfinite (in module ttnn)": [[164, "ttnn.isfinite"]], "isinf (in module ttnn)": [[165, "ttnn.isinf"]], "isnan (in module ttnn)": [[166, "ttnn.isnan"]], "isneginf (in module ttnn)": [[167, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[168, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[169, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[170, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[171, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[172, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[173, "ttnn.lcm"]], "ldexp (in module ttnn)": [[174, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[175, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[176, "ttnn.le"]], "le_ (in module ttnn)": [[177, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[178, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[179, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[180, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[181, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[182, "ttnn.lez"]], "lgamma (in module ttnn)": [[183, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[184, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[185, "ttnn.linear"]], "load_tensor (in module ttnn)": [[186, "ttnn.load_tensor"]], "log (in module ttnn)": [[187, "ttnn.log"]], "log10 (in module ttnn)": [[188, "ttnn.log10"]], "log10_bw (in module ttnn)": [[189, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[190, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[191, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[192, "ttnn.log2"]], "log2_bw (in module ttnn)": [[193, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[194, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[195, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[196, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[197, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[198, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[199, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[200, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[201, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[202, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[203, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[204, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[205, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[206, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[207, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[208, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[209, "ttnn.logit"]], "logit_bw (in module ttnn)": [[210, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[211, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[212, "ttnn.lt"]], "lt_ (in module ttnn)": [[213, "ttnn.lt_"]], "ltz (in module ttnn)": [[214, "ttnn.ltz"]], "mac (in module ttnn)": [[215, "ttnn.mac"]], "manage_device() (in module ttnn)": [[216, "ttnn.manage_device"]], "matmul (in module ttnn)": [[217, "ttnn.matmul"]], "max (in module ttnn)": [[218, "ttnn.max"]], "max_bw (in module ttnn)": [[219, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[220, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[221, "ttnn.maximum"]], "mean (in module ttnn)": [[222, "ttnn.mean"]], "min (in module ttnn)": [[223, "ttnn.min"]], "min_bw (in module ttnn)": [[224, "ttnn.min_bw"]], "minimum (in module ttnn)": [[225, "ttnn.minimum"]], "mish (in module ttnn)": [[226, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[227, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[228, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[229, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[230, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[231, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[232, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[233, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[234, "ttnn.multiply"]], "ne (in module ttnn)": [[235, "ttnn.ne"]], "ne_ (in module ttnn)": [[236, "ttnn.ne_"]], "neg (in module ttnn)": [[237, "ttnn.neg"]], "neg_bw (in module ttnn)": [[238, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[239, "ttnn.nextafter"]], "nez (in module ttnn)": [[240, "ttnn.nez"]], "nonzero (in module ttnn)": [[241, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[242, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[243, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[244, "ttnn.ones"]], "ones_like (in module ttnn)": [[245, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[246, "ttnn.open_device"]], "outer (in module ttnn)": [[247, "ttnn.outer"]], "pad (in module ttnn)": [[248, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[249, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[250, "ttnn.permute"]], "polar (in module ttnn)": [[251, "ttnn.polar"]], "polar_bw (in module ttnn)": [[252, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[253, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[254, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[255, "ttnn.polyval"]], "pow (in module ttnn)": [[256, "ttnn.pow"]], "pow_bw (in module ttnn)": [[257, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[258, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[259, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[260, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[261, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[262, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[263, "ttnn.prod"]], "prod_bw (in module ttnn)": [[264, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[265, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[266, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[267, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[268, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[269, "ttnn.real"]], "real_bw (in module ttnn)": [[270, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[271, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[272, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[273, "ttnn.reciprocal_bw"]], "reduce_scatter (in module ttnn)": [[274, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[275, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[276, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[277, "ttnn.reglu"]], "relu (in module ttnn)": [[278, "ttnn.relu"]], "relu6 (in module ttnn)": [[279, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[280, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[281, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[282, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[283, "ttnn.relu_min"]], "remainder (in module ttnn)": [[284, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[285, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[286, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[287, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[288, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[289, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[290, "ttnn.rms_norm"]], "round (in module ttnn)": [[291, "ttnn.round"]], "round_bw (in module ttnn)": [[292, "ttnn.round_bw"]], "rpow (in module ttnn)": [[293, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[294, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[295, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[296, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[297, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[298, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[299, "ttnn.scatter"]], "selu (in module ttnn)": [[300, "ttnn.selu"]], "selu_bw (in module ttnn)": [[301, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[302, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[303, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[304, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[305, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[306, "ttnn.sign"]], "sign_bw (in module ttnn)": [[307, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[308, "ttnn.signbit"]], "silu (in module ttnn)": [[309, "ttnn.silu"]], "silu_bw (in module ttnn)": [[310, "ttnn.silu_bw"]], "sin (in module ttnn)": [[311, "ttnn.sin"]], "sin_bw (in module ttnn)": [[312, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[313, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[314, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[315, "ttnn.slice"]], "softmax (in module ttnn)": [[316, "ttnn.softmax"]], "softplus (in module ttnn)": [[317, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[318, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[319, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[320, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[321, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[322, "ttnn.softsign_bw"]], "sqrt (in module ttnn)": [[323, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[324, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[325, "ttnn.square"]], "square_bw (in module ttnn)": [[326, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[327, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[328, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[329, "ttnn.std"]], "sub_bw (in module ttnn)": [[330, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[331, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[332, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[333, "ttnn.subtract"]], "sum (in module ttnn)": [[334, "ttnn.sum"]], "swiglu (in module ttnn)": [[335, "ttnn.swiglu"]], "swish (in module ttnn)": [[336, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[337, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[338, "ttnn.tan"]], "tan_bw (in module ttnn)": [[339, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[340, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[341, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[342, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[343, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[344, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[345, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[346, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[347, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[348, "ttnn.to_device"]], "to_layout (in module ttnn)": [[349, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[350, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[351, "ttnn.to_torch"]], "topk (in module ttnn)": [[352, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[353, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[354, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[355, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[356, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[357, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[358, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[359, "ttnn.tril"]], "triu (in module ttnn)": [[360, "ttnn.triu"]], "trunc (in module ttnn)": [[361, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[362, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[363, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[364, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[365, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[366, "ttnn.upsample"]], "var (in module ttnn)": [[367, "ttnn.var"]], "where (in module ttnn)": [[368, "ttnn.where"]], "where_bw (in module ttnn)": [[369, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[370, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[371, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[372, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[373, "ttnn.zeros_like"]], "shape (class in ttnn)": [[380, "ttnn.Shape"]], "rank (ttnn.shape property)": [[380, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[380, "ttnn.Shape.to_rank"]]}})