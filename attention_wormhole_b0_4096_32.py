# Auto-generated by TTTv2 CodeGen
import torch
import torch.nn as nn
import ttnn

# Hardware-specific configuration
compute_kernel_config = ttnn.WormholeComputeKernelConfig(
    math_fidelity=ttnn.MathFidelity.HiFi4, fp32_dest_acc_en=True, packer_l1_acc=True
)

# Memory configuration
memory_config = ttnn.MemoryConfig(memory_layout=ttnn.TensorMemoryLayout.BLOCK_SHARDED, buffer_type=ttnn.BufferType.L1)


# Q, K, V projections
# Optimized for head dimension and memory layout
def forward_qkv_fused(x, mod_spec, hw_config, tensor_cache):
    """Generated from introspected function"""
    qkv = ttnn.linear(
        x,
        tensor_cache.qkv_linear.weight,
        bias=tensor_cache.qkv_linear.bias,
        compute_kernel_config=hw_config.qkv_linear.compute_kernel_config,
        program_config=hw_config.qkv_linear.program_config,
        memory_config=hw_config.qkv_linear.memory_config,
        dtype=mod_spec.qkv_linear.dtype,
    )
    (batch_size, seq_len, _) = x.shape
    qkv = ttnn.reshape(qkv, [batch_size, seq_len, 3, mod_spec.num_heads, mod_spec.head_dim])
    query_states = qkv[:, :, 0, :, :]
    key_states = qkv[:, :, 1, :, :]
    value_states = qkv[:, :, 2, :, :]
    return (query_states, key_states, value_states)
