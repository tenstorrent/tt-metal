inputs:
  perf-models-matrix:
    required: false
    description: "Matrix of models to run, as JSON array"
    default: '[]'
runs:
  using: "composite"
  strategy:
    matrix:
      model: ${{ fromJson(inputs.perf-models-matrix) }}
  steps:
    - run: |
        cd docker-job
        set -x

        ${{ matrix.model.commands }}

        export DEVICE_PERF_REPORT_FILENAME=Models_Device_Perf_${{ matrix.model.name }}_$(date +%Y_%m_%d).csv
        python3 models/perf/merge_device_perf_results.py $DEVICE_PERF_REPORT_FILENAME REPORT
        cat Models_Device_Perf_${{ matrix.model.name }}_$(date +%Y_%m_%d).csv > Models_Device_Perf_$(date +%Y_%m_%d).csv
        cat Models_Device_Perf_$(date +%Y_%m_%d).csv
        echo "device_perf_report_filename=$DEVICE_PERF_REPORT_FILENAME" >> "$GITHUB_OUTPUT"
      if: ${{ matrix.model.name != '' }}
      shell: bash
      env:
        TRACY_NO_INVARIANT_CHECK: 1
    - uses: ./.github/actions/docker-run
      if: ${{ env.PIPELINE == 'model-perf' }}
      with:
        docker_image: ${{ env.DOCKER_IMAGE }}
        docker_password: ${{ env.DOCKER_PASSWORD }}
        docker_opts: ${{ env.DOCKER_OPTS }}
        install_wheel: true
        run_args: |
          ${{ matrix.model.commands }}
          status=$?
          env python3 models/perf/merge_perf_results.py REPORT
          exit $status
