name: "[internal] Blackhole Multi-card unit tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string

jobs:
  multi-card-unit-tests:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-group:
          - name: LLMBox unit tests
            runner-label: BH-LLMBox
          - name: DeskBox unit tests
            runner-label: BH-DeskBox
          - name: LoudBox unit tests
            runner-label: BH-LoudBox
        test-group:
          - name: fabric 1D unit tests
            cmd: |
              TT_METAL_USE_MGD_2_0=1 ./build/test/tt_metal/tt_fabric/fabric_unit_tests --gtest_filter="Fabric1D*Fixture.*"
            timeout: 15
          - name: fabric 2D fixture unit tests
            cmd: TT_METAL_USE_MGD_2_0=1 ./build/test/tt_metal/tt_fabric/fabric_unit_tests --gtest_filter="Fabric2D*Fixture.*"
            timeout: 15
          - name: fabric system health tests
            cmd: ./build/test/tt_metal/tt_fabric/test_system_health
            timeout: 15
          - name: fabric stability nightly tests
            cmd: TT_METAL_CLEAR_L1=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric --test_config ./tests/tt_metal/tt_metal/perf_microbenchmark/routing/test_fabric_stability_short_running.yaml
            timeout: 30
          - name: cpp unit tests eth
            cmd: |
              ./build/test/tt_metal/unit_tests_eth
              ./build/test/tt_metal/unit_tests_tunneling
            timeout: 15
          - name: multi erisc tests
            cmd: |
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_eth
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_debug_tools --gtest_filter=DPrintMeshFixture.ActiveEthTestPrint
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_debug_tools --gtest_filter=WatcherAssertTest.TensixTestWatcherPause
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_debug_tools --gtest_filter=WatcherAssertTest.TestWatcherAssert
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_debug_tools --gtest_filter=MeshWatcherFixture.ActiveEthTestWatcherSanitizeEth
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_dispatch --gtest_filter=UnitMeshRandomProgramFixture.ActiveEthTestPrograms
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_dispatch --gtest_filter=UnitMeshRandomProgramTraceFixture.ActiveEthTestProgramsTrace
              TT_METAL_MULTI_AERISC=1 build/test/tt_metal/unit_tests_dispatch --gtest_filter=UnitMeshCQFixture.ActiveEthTwoRiscsHandshake
            timeout: 60
          - name: ccl nightly tests
            cmd: pytest tests/ttnn/unit_tests/operations/ccl/blackhole_CI/nightly
            timeout: 60
          - name: fabric infra unit tests
            cmd: |
              TT_METAL_CLEAR_L1=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric --test_config ${TT_METAL_HOME}/tests/tt_metal/tt_metal/perf_microbenchmark/routing/test_fabric_sanity_common.yaml
              TT_METAL_CLEAR_L1=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric --test_config ${TT_METAL_HOME}/tests/tt_metal/tt_metal/perf_microbenchmark/routing/test_fabric_sanity_at_least_2x2_mesh.yaml
            timeout: 15
          # - name: t3000 fast fabric tests
          #   cmd: "source tests/scripts/t3000/run_t3000_unit_tests.sh && run_t3000_ttfabric_tests"
    name: ${{ inputs.arch }} ${{ matrix.runner-group.runner-label }} ${{ matrix.test-group.name }}
    runs-on:
      - in-service
      - arch-blackhole
      - ${{ matrix.runner-group.runner-label }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved' }}
      env:
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        LD_LIBRARY_PATH: /work/build/lib
        PYTHONPATH: /work
        TT_METAL_HOME: /work
        GTEST_OUTPUT: xml:/work/generated/test_reports/
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - uses: tenstorrent/tt-metal/.github/actions/ensure-bh-links-online@main
        with:
          runner-label: ${{ matrix.runner-group.runner-label }}
      - name: ${{ matrix.test-group.name }} tests
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: |
          if [[ "${{ matrix.test-group.name }}" == "fabric system health tests" && "${{ matrix.runner-group.runner-label }}" == "BH-DeskBox" ]]; then
            ${{ matrix.test-group.cmd }} --min-connections 4
          else
            ${{ matrix.test-group.cmd }}
          fi
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: U0883RN6CRE # William Ly
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - name: Generate gtest annotations on failure
        uses: tenstorrent/tt-metal/.github/actions/generate-gtest-failure-message@main
        if: ${{ failure() }}
