name: Multi-Host Deployment (Physical)
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      t3k_multihost:
        description: 'Run T3K multi-host job'
        required: false
        default: true
        type: boolean
      galaxy_multihost:
        description: 'Run Galaxy multi-host job'
        required: false
        default: true
        type: boolean

jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      version: 22.04
      build-wheel: true
  multi-host-t3k:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.t3k_multihost == 'true' }}
    runs-on:
      # A physical, multi-host WH T3K that's in service
      - multi-host-t3000
      - arch-wormhole_b0
      - bare-metal
      - in-service
    needs: build-artifact
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
      - name: Create Python venv
        run: |
          ./create_venv.sh
      - name: Capture runner's home directory
        id: capture-home
        run: echo "home=${HOME}" >> $GITHUB_OUTPUT
      - name: Run tests on multiple hosts
        uses: ./.github/actions/docker-run
        timeout-minutes: 30
        with:
          docker_image: ${{ needs.build-artifact.outputs.dev-docker-image }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e PYTHONPATH=${{ github.workspace }}
            -e PYTHON_ENV_DIR=${{ github.workspace }}/python_env
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=wormhole_b0
            -e TT_METAL_ENABLE_ERISC_IRAM="1"
            -e GTEST_OUTPUT="xml:${{ github.workspace }}/generated/test_reports/"
            -v /etc/mpirun:/etc/mpirun:ro
            -v ${{ steps.capture-home.outputs.home }}/.ssh:${{ steps.capture-home.outputs.home }}/.ssh:ro
            --device /dev/tenstorrent
            --pid=host
            --hostname=mpirun-host
          install_wheel: true
          run_args: |
            ./tests/scripts/multihost/run_dual_t3k_tests.sh

  multi-host-galaxy:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.galaxy_multihost == 'true' }}
    runs-on:
      # A physical, multi-host WH Galaxy that's in service
      - multi-host-galaxy
      - arch-wormhole_b0
      - bare-metal
      - in-service
    needs: build-artifact
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
      - name: Create Python venv
        run: |
          ./create_venv.sh
      - name: Capture runner's home directory
        id: capture-home
        run: echo "home=${HOME}" >> $GITHUB_OUTPUT
      - name: Run tests on multiple hosts
        uses: ./.github/actions/docker-run
        timeout-minutes: 30
        with:
          docker_image: ${{ needs.build-artifact.outputs.dev-docker-image }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e PYTHONPATH=${{ github.workspace }}
            -e PYTHON_ENV_DIR=${{ github.workspace }}/python_env
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=wormhole_b0
            -e TT_METAL_ENABLE_ERISC_IRAM="1"
            -e GTEST_OUTPUT="xml:${{ github.workspace }}/generated/test_reports/"
            -v /etc/mpirun:/etc/mpirun:ro
            -v ${{ steps.capture-home.outputs.home }}/.ssh:${{ steps.capture-home.outputs.home }}/.ssh:ro
            --device /dev/tenstorrent
            --pid=host
            --hostname=mpirun-host
          install_wheel: true
          run_args: |
            ./tests/scripts/multihost/run_dual_galaxy_tests.sh
