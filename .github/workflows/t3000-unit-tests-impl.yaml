name: "[internal] T3000 unit tests impl"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      extra-tag:
        required: false
        type: string
        default: "in-service"

jobs:
  t3000-unit-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { name: "t3k tt_metal multiprocess tests", arch: wormhole_b0, cmd: run_t3000_tt_metal_multiprocess_tests, timeout: 15, owner_id: U03NG0A5ND7, civ2-compatible: true }, #Aditya Saigal
          { name: "t3k falcon7b tests", arch: wormhole_b0, cmd: run_t3000_falcon7b_tests, timeout: 30, owner_id: UBHPP2NDP}, #Joseph Chu
        ]
    name: ${{ matrix.test-group.name }}
    # Need to check if we can do viommu
    runs-on: >-
      ${{
        matrix.test-group.civ2-compatible == true
        && 'tt-ubuntu-2204-N300-llmbox-stable'
        || fromJSON(format('["{0}", "arch-wormhole_b0", "pipeline-functional", "config-t3000"]',
              inputs.extra-tag
            ))
      }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ matrix.test-group.arch }}
        HF_HUB_OFFLINE: 1
        HF_HOME: /mnt/MLPerf/huggingface
        LOGURU_LEVEL: INFO
        GTEST_OUTPUT: xml:/work/generated/test_reports/
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf:ro
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@5b5c6ff5b54025e165d189371cda93d2b9ef6115
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}

      - name: Run unit regression tests
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: |
          ls -lart /mnt/MLPerf/tt_dnn-models/tt/Falcon/tiiuae/falcon-40b-instruct/
          mkdir -p generated/test_reports
          source tests/scripts/t3000/run_t3000_unit_tests.sh
          ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: ${{ matrix.test-group.owner_id }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - name: Generate gtest annotations on failure
        uses: tenstorrent/tt-metal/.github/actions/generate-gtest-failure-message@main
        if: ${{ failure() }}

      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
