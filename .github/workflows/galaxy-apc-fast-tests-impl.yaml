name: "[internal] Galaxy APC fast tests"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      runner-label:
        required: false
        type: string
        default: "in-service"
      topology:
        required: false
        type: string
        default: "topology-6u"
      enable-watcher:
        description: 'Enable watcher'
        default: false
        required: false
        type: boolean
      timeout:
        required: false
        type: number
        default: 10

jobs:
  galaxy-apc-fast-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "Galaxy Llama3 demo tests",
            arch: wormhole_b0,
            cmd: 'LLAMA_DIR=/mnt/MLPerf/tt_dnn-models/llama/Llama3.3-70B-Instruct/ pytest models/demos/llama3_70b_galaxy/demo/text_demo.py -k apc',
            model: llama3,
            timeout: 10,
            owner_id: U053W15B6JF
          }, # Djordje Ivanovic
        ]
    runs-on:
      - arch-wormhole_b0
      - ${{ inputs.topology }}
      - ${{ inputs.runner-label }}
    container:
        image: ${{ inputs.docker-image }}
        env:
          TT_METAL_HOME: /work
          PYTHONPATH: /work
          LD_LIBRARY_PATH: /work/build/lib
          LOGURU_LEVEL: INFO
          ARCH_NAME: ${{ matrix.test-group.arch }}
        volumes:
          - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
          - /dev/hugepages-1G:/dev/hugepages-1G
          - /mnt/MLPerf:/mnt/MLPerf:ro
        options: "--device /dev/tenstorrent"
    defaults:
        run:
          shell: bash
          working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
          enable-watcher: ${{ inputs.enable-watcher || false }}
      - name: Run TG all-post-commit tests
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: |
          echo "Running command: ${{ matrix.test-group.cmd }}"
          eval "${{ matrix.test-group.cmd }}"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: ${{ matrix.test-group.owner_id }}
