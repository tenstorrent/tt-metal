name: "[internal] Blackhole Demo tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      runner-label:
        required: false
        type: string
        default: "BH"

jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "whisper_performance",
            arch: blackhole,
            cmd: pytest models/demos/whisper/demo/demo.py --input-path="models/demos/whisper/demo/dataset/conditional_generation" -k "conditional_generation",
            owner_id: U05RWH3QUPM #Salar Hosseini
          },
          {
            name: "Llama3-8B_performance",
            arch: blackhole,
            cmd:  HF_HOME=/localdev/blackhole_demos/huggingface_data TT_CACHE_PATH=/localdev/blackhole_demos/tt_cache HF_MODEL=meta-llama/Llama-3.1-8B-Instruct pytest models/tt_transformers/demo/simple_text_demo.py -k "performance-ci and not performance-ci-stress-1",
            owner_id: U03PUAKE719 # Miguel Tairum
          },
          { # This should be moved to a BH perf regression pipeline in the future
            name: "unet_shallow_performance",
            arch: blackhole,
            cmd: pytest -sv models/experimental/functional_unet/tests/test_unet_perf.py -k "test_unet_trace_perf and not test_unet_trace_perf_multi_device",
            owner_id: U06ECNVR0EN # Evan Smal
          }
        ]
    name: ${{ matrix.test-group.name }}
    runs-on: ["in-service", "${{ inputs.runner-label }}", "pipeline-perf"]
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.wheel-artifact-name }}
      - name: Enable Performance mode
        if: ${{ contains(matrix.test-group.name, 'performance') }}
        run: |
          sudo cpupower frequency-set -g performance
      - name: Run demo regression tests
        uses: ./.github/actions/docker-run
        timeout-minutes: 70
        env:
          LOGURU_LEVEL: INFO
        with:
          docker_image: ${{ inputs.docker-image }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=${{ matrix.test-group.arch }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e HF_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
            -v /localdev/blackhole_demos:/localdev/blackhole_demos
          install_wheel: true
          run_args: |
            if [[ "${{ matrix.test-group.name }}" == *"Llama"* ]]; then
              pip install -r ${{ github.workspace }}/models/tt_transformers/requirements.txt
            fi
            ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: generated/test_reports/
          prefix: "test_reports_"
      - name: Disable Performance mode
        if: ${{ contains(matrix.test-group.name, 'performance') }}
        run: |
          sudo cpupower frequency-set -g ondemand
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}
