name: "[post-commit] all - Static checks, linters etc."

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - "main"
  merge_group:

jobs:
  find-changed-files:
    runs-on: ubuntu-latest
    outputs:
      docs-changed: ${{ steps.find-changes.outputs.docs-changed }}
    steps:
      - id: find-changes
        uses: tenstorrent/tt-metal/.github/actions/find-changed-files@main
  pre-commit:
    name: Run Pre-commit Hooks
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and all branches / tags so 'origin/main' is available

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Run Pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: |
            --from-ref ${{ github.event_name == 'pull_request' && format('refs/remotes/origin/{0}', github.event.pull_request.base.ref) || 'HEAD^' }} \
            --to-ref HEAD
        continue-on-error: false
  check-black:
    runs-on: ubuntu-latest
    steps:
      - name: Do Nothing
        run: echo "Black is covered by pre-commit. This is a placeholder to be removed after updating branch restrictions."


  check-spdx-licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5.0.0
        with:
          cache: 'pip'
          cache-dependency-path: infra/requirements-infra.txt
          python-version: '3.10'
      - name: Install infra deps
        run: python -m pip install -r infra/requirements-infra.txt
      - name: Check SPDX licenses
        run: python -m check_copyright --verbose --dry-run --config ./check_copyright_config.yaml .
  check-metal-kernel-count:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check kernel count in base metal is less than maximum
        run: if (( $(find tt_metal/kernels/ -type f | wc -l) > 8 )); then exit 1; fi
  check-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install ASPELL
        run: sudo apt-get install -y aspell
      - name: Run checks on docs
        run: TT_METAL_HOME=$(pwd) docs/spellcheck.sh
  check-docs-links:
    runs-on: ubuntu-latest
    needs: find-changed-files
    # We get rate-limited if we run too often; only run when it's useful
    # Issue 21637: Disable check-docs-links for now to unblock developers
    if: false  # ${{ github.ref_name == 'main' || needs.find-changed-files.outputs.docs-changed == 'true' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          clean: false
      - name: Link Checker
        uses: lycheeverse/lychee-action@v2
        with:
          args: --verbose './README.md' './INSTALLING.md'  './docs/source/**/*.rst' './docs/source/**/*.md'
          fail: true
  check-forbidden-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check ttnn is not used in tt_metal tests
        run: if (( $(grep -Rnw 'tests/tt_metal' -e 'ttnn' | wc -l ) > 11 )); then exit 1; fi
      - name: Check tt_eager constructs is not used in tt_metal tests
        run: |
          if (( $(grep -Rnw 'tests/tt_metal' -e 'tt_lib' | wc -l ) > 0 )); then exit 1; fi
          if (( $(grep -Rnw 'tests/tt_metal' -e 'tt_eager' | wc -l ) > 10 )); then exit 1; fi
  check-sweeps-workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'
      - name: Check sweeps workflow option count against sweep file count
        run: |
          pip install pyyaml
          python tests/sweep_framework/framework/sweeps_workflow_verification.py
  cmake-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Look for changed CMake files
      id: find-changes
      uses: tenstorrent/tt-metal/.github/actions/find-changed-files@main
    - uses: lukka/get-cmake@b516803a3c5fac40e2e922349d15cdebdba01e60
      if: steps.find-changes.outputs.cmake-changed == 'true'
      with:
        cmakeVersion: "~3.24.0"
    - name: Check CMake version
      if: steps.find-changes.outputs.cmake-changed == 'true'
      run: cmake --version
    - name: Install Build Dependencies
      if: steps.find-changes.outputs.cmake-changed == 'true'
      run: sudo ./install_dependencies.sh --mode build
    - name: Check CMake compatibility
      if: steps.find-changes.outputs.cmake-changed == 'true'
      env:
        ARCH_NAME: wormhole_b0
        CMAKE_GENERATOR: Ninja
      # TODO: Use a lukka/run-cmake with a preset after upgrading to a more modern CMake
      run: |
        echo "Checking compatibility with $(cmake --version)"
        cmake -D BUILD_PROGRAMMING_EXAMPLES=ON -D TT_METAL_BUILD_TESTS=ON -B build .
  codeowners-validator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mszostok/codeowners-validator@7f3f5e28c6d7b8dfae5731e54ce2272ca384592f # v0.7.4
        with:
          checks: "files,duppatterns,syntax"
          experimental_checks: "avoid-shadowing"
