name: "[internal] Scaleout tools tests"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      extra-tag:
        required: false
        type: string
        default: "in-service"

jobs:
  scaleout-tests:
    name: Scaleout tools tests
    runs-on:
      - ubuntu-latest
    container:
      image: ${{ inputs.docker-image }}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        GTEST_OUTPUT: xml:/work/generated/test_reports/
      volumes:
        - ${{ github.workspace }}/docker-job:/work
    defaults:
      run:
        shell: bash
        working-directory: /work
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}

      - name: Run scaleout tests
        run: |
          ./build/test/scaleout/test_factory_system_descriptor

      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        if: ${{ !cancelled() }}
        timeout-minutes: 10
        with:
          prefix: "test_reports_"

      - name: Generate gtest annotations on failure
        uses: tenstorrent/tt-metal/.github/actions/generate-gtest-failure-message@main
        if: ${{ failure() }}

      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
