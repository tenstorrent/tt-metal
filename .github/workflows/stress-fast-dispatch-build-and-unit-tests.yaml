name: "Stress fast dispatch tests"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit

  stress-build-and-unit-tests:
    needs: build-artifact
    timeout-minutes: 1440
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-info: [
          # N150
          {arch: wormhole_b0, runs-on: ["cloud-virtual-machine", "N150", "in-service"], machine-type: "virtual_machine", name: "N150"},
          # N300
          {arch: wormhole_b0, runs-on: ["cloud-virtual-machine", "N300", "in-service"], machine-type: "virtual_machine", name: "N300"},
        ]
    env:
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      TT_METAL_WATCHER: 60
      TT_METAL_WATCHER_NOINLINE: 1
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.runner-info.runs-on }}
    name: ${{ matrix.runner-info.machine-type }} ${{ matrix.runner-info.name }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up dyanmic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: TTMetal_build_any
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - uses: ./.github/actions/install-python-deps
      - name: Run pre/post regression tests in a loop
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type stress_post_commit --dispatch-mode fast
      - name: Upload watcher log
        if: always()
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        with:
          name: watcher-log-${{ matrix.runner-info.arch }}-${{ matrix.runner-info.machine-type }}-${{ matrix.runner-info.name }}
          path: generated/watcher/watcher.log
