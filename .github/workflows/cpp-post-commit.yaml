name: "[internal] C++ tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 35
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      enable-watcher:
        description: 'Enable watcher'
        default: false
        type: boolean

jobs:
  cpp-unit-tests:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-group:
          - name: All C++
            cmd: ./tests/scripts/run_cpp_unit_tests.sh # 15 minutes
          - name: CCL
            cmd: |
              ./build/test/ttnn/unit_tests_ttnn_ccl
              ./build/test/ttnn/unit_tests_ttnn_ccl_ops
          - name: dispatch
            cmd: "TT_METAL_ENABLE_ERISC_IRAM=1 ./build/test/tt_metal/unit_tests_dispatch" # 15 minutes
          - name: dispatch multicmd queue
            cmd: |
              TT_METAL_ENABLE_ERISC_IRAM=1 TT_METAL_GTEST_NUM_HW_CQS=2 ./build/test/tt_metal/unit_tests_dispatch --gtest_filter=UnitMeshMultiCQ*Fixture.*
          - name: distributed
            cmd: |
              ./build/test/tt_metal/distributed/distributed_unit_tests
              ./tests/tt_metal/multihost/run_multiprocess_socket_tests.sh
          - name: eth and misc
            cmd: |
              ./build/test/tt_metal/unit_tests_eth
              ./build/test/tt_metal/unit_tests_misc
          - name: tools
            cmd: |
              ./tests/scripts/run_tools_tests.sh
              ./build/test/tt_metal/unit_tests_debug_tools
          - name: ttnn tensor accessor
            cmd: "./build/test/ttnn/unit_tests_ttnn_accessor"
          - name: user kernel path
            cmd: |
              rm -rf /tmp/kernels
              TT_METAL_KERNEL_PATH=/tmp/kernels ./build/test/tt_metal/unit_tests_api --gtest_filter=CompileProgramWithKernelPathEnvVarFixture.*
    name: ${{ matrix.test-group.name }} ${{ inputs.arch }} ${{ inputs.runner-label }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        GTEST_OUTPUT: xml:/work/generated/test_reports/
        TT_METAL_HOME: /work
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    runs-on: >-
      ${{
        (startsWith(inputs.runner-label, 'tt-beta-ubuntu') && fromJSON(format('["{0}"]', inputs.runner-label)))
        || (github.event.pull_request.head.repo.fork == true || inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label)
        || fromJSON(format('["{0}", "in-service", "cloud-virtual-machine"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          # Unsure why these C++ tests need the wheel...  a cleanup to do separately
          # https://github.com/tenstorrent/tt-metal/issues/20166
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
          enable-watcher: ${{ inputs.enable-watcher }}
      - name: ${{ matrix.test-group.name }} tests
        #GH Issue 16167
        if: ${{ !(inputs.runner-label == 'BH' && matrix.test-group.name == 'tools') }}
        timeout-minutes: ${{ inputs.timeout }}
        run: |
            mkdir -p generated/test_reports
            ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06CXU895AP # Michael Chiou
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - name: Generate gtest annotations on failure
        uses: tenstorrent/tt-metal/.github/actions/generate-gtest-failure-message@main
        if: ${{ failure() }}
