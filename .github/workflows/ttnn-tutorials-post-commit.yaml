name: "[internal] ttnn tutorials tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 30
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      # wheel-artifact-name:
      #   required: true
      #   type: string

  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - wormhole_b0
          - blackhole
      runner-label:
        required: true
        type: choice
        options:
          - N150
          - N300
          - BH
      timeout:
        required: false
        type: number
        default: 30
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      # wheel-artifact-name:
      #   required: true
      #   type: string

jobs:
  ttnn-tutorials:
    name: TTNN tutorials ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        (github.event.pull_request.head.repo.fork == true || inputs.runner-label == 'P150b') && format('tt-beta-ubuntu-2204-{0}-large-stable', inputs.runner-label)
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        PYTHONPATH: /work
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      # - name: ‚¨áÔ∏è  Setup Job
      #   uses: tenstorrent/tt-metal/.github/actions/setup-job@main
      #   timeout-minutes: 10
      #   with:
      #     wheel-artifact-name: ${{ inputs.wheel-artifact-name }}

      - name: üêç Create virtual environment using tutorials_venv.sh
        timeout-minutes: 10
        run: |
          cd docs/source/ttnn/ttnn/tutorials/ttnn_tutorials_basic_python
          chmod +x tutorials_venv.sh
          ./tutorials_venv.sh

      - name: üß™ Run tutorial tests
        timeout-minutes: ${{ inputs.timeout }}
        run: |
          cd docs/source/ttnn/ttnn/tutorials/ttnn_tutorials_basic_python
          source tutorials_env/bin/activate
          cd /work  # Go back to root for test_tutorials.py
          python -m pytest tests/ttnn/unit_tests/test_tutorials.py -v

      # - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
      #   if: ${{ failure() }}
      #   with:
      #     slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     owner: U06CXU895AP # Michael Chiou

      # - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
      #   timeout-minutes: 10
      #   if: ${{ !cancelled() }}
      #   with:
      #     prefix: "test_reports_"

      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
