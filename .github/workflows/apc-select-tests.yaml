name: "(APC) Select and Run Post-Commit Tests"

on:
  workflow_dispatch:
    inputs:
      build-type:
        description: "Build type"
        required: false
        type: choice
        options:
          - Release
          - Debug
          - RelWithDebInfo
          - ASan
          - TSan
        default: Release
      version:
        description: "OS version"
        required: false
        type: choice
        options:
          - "22.04"
          - "24.04"
        default: "22.04"
      tests-json:
        description: |
          JSON object specifying which tests to run.
          Example: {"sd-unit-tests":true,"fast-dispatch-unit-tests":true,"fabric-unit-tests":false,"cpp-unit-tests":true,"ttnn-unit-tests":true,"models-unit-tests":true,"tt-train-cpp-unit-tests":false,"run-profiler-regression":true,"t3000-fast-tests":false,"build-and-docs":true}
        required: false
        type: string
        default: '{"sd-unit-tests":true,"fast-dispatch-unit-tests":true,"fabric-unit-tests":true,"cpp-unit-tests":true,"ttnn-unit-tests":true,"models-unit-tests":true,"tt-train-cpp-unit-tests":true,"run-profiler-regression":true,"t3000-fast-tests":true,"build-and-docs":true}'

jobs:
  parse-tests-json:
    runs-on: ubuntu-latest
    outputs:
      tests-to-run: ${{ steps.parse.outputs.tests_to_run }}
    steps:
      - name: Parse tests-json to comma-separated string
        id: parse
        run: |
          TESTS_JSON='${{ inputs.tests-json }}'
          TESTS=$(echo "$TESTS_JSON" | jq -r 'to_entries | map(select(.value == true) | .key) | join(",")')
          echo "tests_to_run=$TESTS" >> $GITHUB_OUTPUT

  call-post-commit:
    needs: parse-tests-json
    uses: ./.github/workflows/all-post-commit-workflows.yaml
    with:
      build-type: ${{ inputs.build-type }}
      version: ${{ inputs.version }}
      tests-to-run: ${{ needs.parse-tests-json.outputs.tests-to-run }}
