name: "(APC) Select and Run Post-Commit Tests"

on:
  workflow_dispatch:
    inputs:
      build-type:
        description: "Build type"
        required: false
        type: choice
        options:
          - Release
          - Debug
          - RelWithDebInfo
          - ASan
          - TSan
        default: Release
      version:
        description: "OS version"
        required: false
        type: choice
        options:
          - "22.04"
          - "24.04"
        default: "22.04"
      tests-json:
        description: |
          JSON object specifying which tests to run.
          Example: {"sd-unit-tests":true,"fast-dispatch-unit-tests":true,"fabric-unit-tests":true,"cpp-unit-tests":true,"ttnn-unit-tests":true,"models-unit-tests":true,"tt-train-cpp-unit-tests":true,"run-profiler-regression":true,"t3000-fast-tests":true,"test-ttnn-tutorials":true}
        required: false
        type: string
        default: '{"sd-unit-tests":true,"fast-dispatch-unit-tests":true,"fabric-unit-tests":true,"cpp-unit-tests":true,"ttnn-unit-tests":true,"models-unit-tests":true,"tt-train-cpp-unit-tests":true,"run-profiler-regression":true,"t3000-fast-tests":true,"test-ttnn-tutorials":true}'
      commit:
        required: false
        type: string
        default: ""
        description: 'Commit SHA to test (default: HEAD)'

jobs:
  parse-tests-json:
    runs-on: ubuntu-latest
    outputs:
      tests-to-run: ${{ steps.parse.outputs.tests_to_run }}
    steps:
      - name: Parse tests-json to comma-separated string
        id: parse
        run: |
          TESTS_JSON='${{ inputs.tests-json }}'
          TESTS=$(echo "$TESTS_JSON" | jq -r 'to_entries | map(select(.value == true) | .key) | join(",")')
          echo "tests_to_run=$TESTS" >> $GITHUB_OUTPUT

  build-artifact:
    needs: parse-tests-json
    if: ${{ always() }}
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type || 'Release' }}
      build-wheel: true
      version: ${{ inputs.version || '22.04' }}
      skip-tt-train: false
      ref: ${{ inputs.commit || github.sha }}

  build-artifact-profiler:
    needs: parse-tests-json
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'run-profiler-regression') }}
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type || 'Release' }}
      build-wheel: true
      tracy: true
      version: ${{ inputs.version || '22.04' }}
      ref: ${{ inputs.commit || github.sha }}

  sd-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'sd-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  fast-dispatch-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'fast-dispatch-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/fast-dispatch-build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  fabric-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'fabric-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/fabric-build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  ttnn-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'ttnn-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/ttnn-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  models-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'models-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/models-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  cpp-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'cpp-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/cpp-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  tt-train-cpp-unit-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'tt-train-cpp-unit-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/tt-train-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}

  run-profiler-regression:
    needs: [parse-tests-json, build-artifact-profiler]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'run-profiler-regression') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/run-profiler-regression.yaml
    with:
      arch: ${{ matrix.test-group.arch}}
      runner-label: ${{ matrix.test-group.runner-label}}
      docker-image: ${{ needs.build-artifact-profiler.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact-profiler.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact-profiler.outputs.wheel-artifact-name }}

  t3000-fast-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 't3000-fast-tests') }}
    secrets: inherit
    uses: ./.github/workflows/t3000-fast-tests-impl.yaml
    with:
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}

  tg-demo-apc-tests:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'tg-demo-apc-tests') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: in-service-dedicated-apc },
        ]
    uses: ./.github/workflows/tg-demo-all-post-commit-impl.yaml
    with:
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      runner-label: ${{ matrix.test-group.runner-label }}

  test-ttnn-tutorials:
    needs: [parse-tests-json, build-artifact]
    if: ${{ contains(needs.parse-tests-json.outputs.tests-to-run, 'test-ttnn-tutorials') }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
        ]
    uses: ./.github/workflows/ttnn-tutorials-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.basic-ttnn-runtime-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
