name: Package and release
on:
  workflow_dispatch:
  schedule:
    # Create rc every day at EOD of PST Mon-Fri + night of Sunday to kick off
    # releases for beginning of work week
    - cron: "0 0 * * *"

permissions:
  actions: read
  contents: write
  pull-requests: write
  pages: write
  id-token: write
  packages: write
  checks: write


# Some explanation:
# is-release-candidate is always true, unless the workflow is manually dispatched on a tag
# should-create-release is used to avoid creating a duplicate release
# if we are running on main branch, don't upload any artifacts or create a gh release
# if we are promoting a release candidate, don't rerun the tests

jobs:
  create-tag:
    uses: ./.github/workflows/release-verify-or-create-tag.yaml
    with:
      fetch_depth: 0
      bump_each_commit: false
      tag_type: nightly

  regression-testing:
    needs: create-tag
    uses: ./.github/workflows/regression-testing.yaml
    secrets: inherit

  create-changelog:
    needs: [create-tag, regression-testing]
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - name: Create changelog
        id: create-changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignorePreReleases: true
          failOnError: true
          outputFile: CHANGELOG.txt
      - name: Output changelog
        run: cat CHANGELOG.txt
      - name: Upload changelog as artifact
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        with:
          name: changelog
          path: CHANGELOG.txt
  create-release-notes:
    needs: create-changelog
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Create note about generating pipeline
        shell: bash
        run: echo "${{ format('This release was generated by the CI workflow https://github.com/{0}/actions/runs/{1}', github.repository, github.run_id) }}" > PIPELINE_NOTE.txt
      - name: Create release notes by concatenating parts
        shell: bash
        run: |
          touch RELEASE_NOTES.txt
          cat infra/RELEASE_TOP_NOTE.txt >> RELEASE_NOTES.txt
          echo "" >> RELEASE_NOTES.txt
          cat PIPELINE_NOTE.txt >> RELEASE_NOTES.txt
          echo "" >> RELEASE_NOTES.txt
          cat CHANGELOG.txt >> RELEASE_NOTES.txt
      - name: Output release notes
        run: cat RELEASE_NOTES.txt
      - uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: RELEASE_NOTES.txt
