name: Package and release
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "If true, do not upload tag or draft release."
        required: false
        default: false
        type: boolean


permissions:
  actions: read
  contents: write
  pull-requests: write
  pages: write
  id-token: write
  packages: write
  checks: write



# Some explanation:
# is-release-candidate is always true, unless the workflow is manually dispatched on a tag
# should-create-release is used to avoid creating a duplicate release
# if we are running on main branch, don't upload any artifacts or create a gh release
# if we are promoting a release candidate, don't rerun the tests

jobs:
  release-precheck:
    runs-on: ubuntu-latest
    outputs:
      is-release-candidate: ${{ steps.get-is-release-candidate.outputs.is-release-candidate }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get is-release-candidate
        id: get-is-release-candidate
        run: |
          # A workflow dispatch on a tag is considered a release run for us.
          isReleaseCandidate=${{ !(github.ref_type == 'tag' && github.event_name == 'workflow_dispatch') }}
          echo "is-release-candidate=$isReleaseCandidate" >> "$GITHUB_OUTPUT"
      - name: Get should-create-release
        id: get-should-create-release
        run: |
          # Run once to check for errors
          ./scripts/build_scripts/get_should_create_release.sh ${{ fromJSON(steps.get-is-release-candidate.outputs.is-release-candidate) && '--release-candidate' || '' }}
          shouldCreateRelease=$(scripts/build_scripts/get_should_create_release.sh ${{ fromJSON(steps.get-is-release-candidate.outputs.is-release-candidate) && '--release-candidate' || '' }})
          if [ "$shouldCreateRelease" != "true" ]; then
            echo "should-create-release is false, no release needed. Exiting workflow."
            exit 1
          fi
          echo "should-create-release is true, proceeding with release workflow."
  create-tag:
    needs: release-precheck
    uses: ./.github/workflows/release-verify-or-create-tag.yaml
    with:
      fetch_depth: 0
      bump_each_commit: false
      tag_type: ${{ needs.release-precheck.outputs.is-release-candidate == 'true' && 'rc' || '' }}
      dry_run: ${{ inputs.dry_run }}


  regression-testing:
    needs: create-tag
    uses: ./.github/workflows/regression-testing.yaml
    secrets: inherit

  debug-create-tag-output:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Echo create-tag version output
        run: echo "create-tag.outputs.version = ${{ needs.create-tag.outputs.version }}"

  debug-regression-testing-output:
    needs: regression-testing
    runs-on: ubuntu-latest
    steps:
      - name: Echo regression-testing wheel-artifact-name output
        run: echo "regression-testing.outputs.wheel-artifact-name = ${{ needs.regression-testing.outputs.wheel-artifact-name }}"

  create-changelog:
    needs: [create-tag, regression-testing]
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - name: Create changelog
        id: create-changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignorePreReleases: true
          failOnError: true
          outputFile: CHANGELOG.txt
      - name: Output changelog
        run: cat CHANGELOG.txt
      - name: Upload changelog as artifact
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        with:
          name: changelog
          path: CHANGELOG.txt
  create-release-notes:
    needs: create-changelog
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Create note about generating pipeline
        shell: bash
        run: echo "${{ format('This release was generated by the CI workflow https://github.com/{0}/actions/runs/{1}', github.repository, github.run_id) }}" > PIPELINE_NOTE.txt
      - name: Create release notes by concatenating parts
        shell: bash
        run: |
          touch RELEASE_NOTES.txt
          cat infra/RELEASE_TOP_NOTE.txt >> RELEASE_NOTES.txt
          echo "" >> RELEASE_NOTES.txt
          cat PIPELINE_NOTE.txt >> RELEASE_NOTES.txt
          echo "" >> RELEASE_NOTES.txt
          cat CHANGELOG.txt >> RELEASE_NOTES.txt
      - name: Output release notes
        run: cat RELEASE_NOTES.txt
      - uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: RELEASE_NOTES.txt
  # Candidate for breaking up
  create-and-upload-draft-release:
    needs: [create-tag, create-release-notes, regression-testing]
    # May accidentally create two releases without restricting to 1 job
    concurrency: create_upload_draft_release
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Create archive with submodules
        uses: qmonnet/git-archive-all-action@791fb850881cf58b1d1fcc9b06c01940080bba0a
        with:
          output-files: tt-metalium.tar.gz
      - name: Create VERSION
        run: echo ${{ needs.create-tag.outputs.version }} > VERSION
      - name : Download release notes
        uses: actions/download-artifact@v4
        with:
          name: release-notes
      - name : Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Release (skipped for dry run)
        if: ${{ !inputs.dry_run }}
        uses: softprops/action-gh-release@4634c16e79c963813287e889244c50009e7f0981
        with:
          tag_name: ${{ needs.create-tag.outputs.version }}
          name: ${{ needs.create-tag.outputs.version }}
          draft: false
          prerelease: true
          body_path: RELEASE_NOTES.txt
          files: |
            VERSION
            CHANGELOG.txt
            README.md
            INSTALLING.md
            models/docs/MODEL_UPDATES.md
            tt-metalium.tar.gz
          fail_on_unmatched_files: true

  create-docker-release-image:
    needs: [
      regression-testing,
      create-tag,
      create-and-upload-draft-release,
      release-precheck
    ]
    uses: ./.github/workflows/publish-release-image.yaml
    secrets: inherit
    if: github.ref != 'refs/heads/main'
    with:
      version: ${{ needs.create-tag.outputs.version }}
      tag-latest:  ${{ needs.release-precheck.outputs.is-release-candidate != 'true' }}
      wheel-artifact-name: ${{ needs.regression-testing.outputs.wheel-artifact-name }}

  release-docs:
    needs: [
      regression-testing,
      release-precheck,
      create-tag,
      create-and-upload-draft-release
    ]
    if: ${{ needs.release-precheck.outputs.is-release-candidate !='true' }}
    uses: ./.github/workflows/docs-latest-public.yaml
    with:
      version: ${{ needs.create-tag.outputs.version }}
      docker-image: ${{ needs.regression-testing.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.regression-testing.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.regression-testing.outputs.wheel-artifact-name }}
    secrets: inherit
