name: "[internal] Single-card Device perf regressions impl"

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: "ubuntu-22.04"
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      extra-tag:
        required: false
        type: string
        default: "in-service"

jobs:
  device-perf:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-info: [
          {name: "N300 WH B0 not yet ported", arch: wormhole_b0, runs-on: ["N300", "pipeline-perf", "bare-metal", "${{ inputs.extra-tag }}"], machine-type: "bare_metal", civ2-compatible: false, timeout: 30, job-set1: false},
          {name: "N300 WH B0 Set 1", arch: wormhole_b0, runs-on: ["tt-ubuntu-2204-n300-stable"], machine-type: "CIv2", civ2-compatible: true, timeout: 120, job-set1: true},
          {name: "N300 WH B0 Set 2", arch: wormhole_b0, runs-on: ["tt-ubuntu-2204-n300-stable"], machine-type: "CIv2", civ2-compatible: true, timeout: 120, job-set1: false},
        ]
    name: "${{ matrix.test-info.name }} device perf"
    runs-on: ${{ matrix.test-info.runs-on }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ matrix.test-info.arch }}
        LOGURU_LEVEL: INFO
        GITHUB_ACTIONS: true
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf:ro
      options: "--device /dev/tenstorrent -e TT_GH_CI_INFRA"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: non-civ2 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "non-civ2_tests"
          commands: |
            pytest models/demos/convnet_mnist/tests/ -m models_device_performance_bare_metal
            pytest models/demos/mnist/tests -m models_device_performance_bare_metal
            pytest models/demos/falcon7b_common/tests -m models_device_performance_bare_metal
            pytest models/demos/segformer/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && !matrix.test-info.civ2-compatible }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov11 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov11"
          commands: |
            pytest models/demos/yolov11/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov10x tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov10x"
          commands: |
            pytest models/demos/yolov10x/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1}}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: stable_diffusion tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "stable_diffusion"
          commands: |
            pytest models/demos/wormhole/stable_diffusion/tests -m models_device_performance_bare_metal --timeout=600
            pytest models/experimental/stable_diffusion_xl_base/tests/test_sdxl_perf.py -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: distilbert tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "distilbert"
          commands: |
            pytest models/demos/distilbert/tests -m models_device_performance_bare_metal
            pytest models/demos/wormhole/distilbert/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: vgg tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "vgg"
          commands: |
            pytest models/demos/vgg/tests/ -m models_device_performance_bare_metal
            pytest models/demos/vgg_unet/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: bert_tiny tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "bert_tiny"
          commands: |
            pytest models/demos/bert_tiny/tests/ -m models_device_performance_bare_metal
            pytest models/demos/wormhole/bert_tiny/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: squeezebert tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "squeezebert"
          commands: |
            pytest models/demos/squeezebert/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: roberta tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "roberta"
          commands: |
            pytest models/demos/roberta/tests/ -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: resnet50 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "resnet50"
          commands: |
            pytest models/demos/wormhole/resnet50/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: ufld_v2 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "ufld_v2"
          commands: |
            pytest models/demos/ufld_v2/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: sentence_bert tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "sentence_bert"
          commands: |
            pytest models/demos/sentence_bert/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: functional_unet tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "functional_unet"
          commands: |
            pytest models/experimental/functional_unet/tests/test_unet_perf.py -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: mamba tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "mamba"
          commands: |
            pytest models/demos/wormhole/mamba/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: metal_BERT_large_11 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "metal_BERT_large_11"
          commands: |
            # pytest models/demos/metal_BERT_large_11/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov4 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov4"
          commands: |
            pytest models/demos/yolov4/tests -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: mobilenetv2 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "mobilenetv2"
          commands: |
            pytest models/demos/mobilenetv2/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov8 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov8"
          commands: |
            pytest models/demos/yolov8x/tests/perf -m models_device_performance_bare_metal
            pytest models/demos/yolov8s/tests/perf -m models_device_performance_bare_metal
            pytest models/demos/yolov8s_world/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov7 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov7"
          commands: |
            pytest models/demos/yolov7/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: vit tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "vit"
          commands: |
            pytest models/demos/wormhole/vit/demo/ -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov6l tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov6l"
          commands: |
            pytest models/demos/yolov6l/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov9c tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov9c"
          commands: |
            pytest models/demos/yolov9c/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: vanilla_unet tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "vanilla_unet"
          commands: |
            pytest models/demos/vanilla_unet/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: swin_v2 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "swin_v2"
          commands: |
            pytest models/experimental/swin_v2/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: swin_s tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "swin_s"
          commands: |
            pytest models/experimental/swin_s/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov5x tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov5x"
          commands: |
            pytest models/experimental/yolov5x/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: vovnet tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "VoVNet"
          commands: |
            pytest models/experimental/vovnet/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: yolov12x tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "yolov12x"
          commands: |
            pytest models/demos/yolov12x/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: efficientnetb0 tests
        uses: tenstorrent/tt-metal/.github/actions/device-perf-test@main
        with:
          model_name: "efficientnetb0"
          commands: |
            pytest models/experimental/efficientnetb0/tests/perf -m models_device_performance_bare_metal
        if: ${{ !cancelled() && matrix.test-info.civ2-compatible && !matrix.test-info.job-set1 }}
        timeout-minutes: ${{ matrix.test-info.timeout }}

      - name: Merge test reports
        id: generate-device-perf-report
        if: ${{ !cancelled() }}
        timeout-minutes: ${{ matrix.test-info.timeout }}
        env:
          TRACY_NO_INVARIANT_CHECK: 1
        run: |
          CLEAN_NAME=$(echo "${{ matrix.test-info.name }}" | tr ' ' '-')
          export DEVICE_PERF_REPORT_FILENAME=Models_Device_Perf_${{ matrix.test-info.test-type }}_${CLEAN_NAME}_$(date +%Y_%m_%d).csv
          cat Models_Device_Perf_$(date +%Y_%m_%d).csv > Models_Device_Perf_${{ matrix.test-info.test-type }}_${CLEAN_NAME}_$(date +%Y_%m_%d).csv
          cat Models_Device_Perf_${{ matrix.test-info.test-type }}_${CLEAN_NAME}_$(date +%Y_%m_%d).csv
          python3 models/perf/merge_device_perf_results.py $DEVICE_PERF_REPORT_FILENAME CHECK
          echo "device_perf_report_filename=$DEVICE_PERF_REPORT_FILENAME" >> "$GITHUB_OUTPUT"

      - name: Check device perf report exists
        id: check-device-perf-report
        if: ${{ !cancelled() }}
        run: |
          test -f ${{ steps.generate-device-perf-report.outputs.device_perf_report_filename }}

      - name: Clean test name for artifact
        run: |
          CLEAN_NAME=$(echo "${{ matrix.test-info.name }}" | tr ' ' '-')
          echo "ARTIFACT_NAME=device-perf-report-csv-${{ matrix.test-info.test-type }}-${{ matrix.test-info.arch }}-${{ matrix.test-info.machine-type }}-${CLEAN_NAME}" >> "$GITHUB_ENV"

      - name: Upload device perf report
        timeout-minutes: 5
        if: ${{ !cancelled() && steps.check-device-perf-report.conclusion == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /work/${{ steps.generate-device-perf-report.outputs.device_perf_report_filename }}

      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"

      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
