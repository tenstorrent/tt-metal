name: "[impl] Nightly tt-metal L2 tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 120

jobs:
  tt-metal-l2-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group:
          - name: ttnn nightly conv tests
            cmd: pytest tests/ttnn/nightly/unit_tests/operations/conv -xv -m "not disable_fast_runtime_mode"
            owner: U052J2QDDKQ # Pavle Josipovic
          - name: ttnn nightly matmul tests
            cmd: pytest tests/ttnn/nightly/unit_tests/operations/matmul -xv -m "not disable_fast_runtime_mode"
            owner: U06Q7ESTFEV # Borys Bradel
          - name: ttnn nightly pool tests
            cmd: pytest tests/ttnn/nightly/unit_tests/operations/pool -xv -m "not disable_fast_runtime_mode"
            owner: U052J2QDDKQ # Pavle Josipovic
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: ${{ matrix.test-group.name }} ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-beta-ubuntu-2204-{0}-large-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: ${{ matrix.test-group.name }} tests
        timeout-minutes: ${{ inputs.timeout }}
        run: ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner }}
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
