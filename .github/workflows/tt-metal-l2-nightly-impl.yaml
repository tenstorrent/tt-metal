name: "[impl] Nightly tt-metal L2 tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 120
      run_conv_tests:
        required: false
        type: boolean
        default: true
      run_matmul_tests:
        required: false
        type: boolean
        default: true
      run_pool_tests:
        required: false
        type: boolean
        default: true
      run_sdxl_tests:
        required: false
        type: boolean
        default: true
      run_train_tests:
        required: false
        type: boolean
        default: true

jobs:
  ttnn-conv-tests:
    if: ${{ inputs.run_conv_tests }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        TT_METAL_HOME: /work
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        HF_HOME: /mnt/MLPerf/tt_dnn-models/hf_home
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent -v /mnt/MLPerf:/mnt/MLPerf:ro"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: ttnn nightly conv tests ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service", "cloud-virtual-machine"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: ttnn nightly conv tests
        timeout-minutes: ${{ inputs.timeout }}
        run: pytest tests/ttnn/nightly/unit_tests/operations/conv -xv -m "not disable_fast_runtime_mode"
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U052J2QDDKQ # Pavle Josipovic
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()

  ttnn-matmul-tests:
    if: ${{ inputs.run_matmul_tests }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        HF_HOME: /mnt/MLPerf/tt_dnn-models/hf_home
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent -v /mnt/MLPerf:/mnt/MLPerf:ro"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: ttnn nightly matmul tests ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: ttnn nightly matmul tests
        timeout-minutes: ${{ inputs.timeout }}
        run: pytest tests/ttnn/nightly/unit_tests/operations/matmul -xv -m "not disable_fast_runtime_mode"
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06Q7ESTFEV # Borys Bradel
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()

  ttnn-pool-tests:
    if: ${{ inputs.run_pool_tests }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        HF_HOME: /mnt/MLPerf/tt_dnn-models/hf_home
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent -v /mnt/MLPerf:/mnt/MLPerf:ro"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: ttnn nightly pool tests ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: ttnn nightly pool tests
        timeout-minutes: ${{ inputs.timeout }}
        run: pytest tests/ttnn/nightly/unit_tests/operations/pool -xv -m "not disable_fast_runtime_mode"
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U052J2QDDKQ # Pavle Josipovic
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()

  ttnn-sdxl-tests:
    if: ${{ inputs.run_sdxl_tests }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        HF_HOME: /mnt/MLPerf/tt_dnn-models/hf_home
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent -v /mnt/MLPerf:/mnt/MLPerf:ro"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: ttnn nightly sdxl tests ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: ttnn nightly sdxl tests
        timeout-minutes: ${{ inputs.timeout }}
        run: |
          pytest models/experimental/stable_diffusion_xl_base/tests/pcc/test_unet_loop.py --loop-iter-num=50 -xv -m "not disable_fast_runtime_mode"
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U07N3CUUN05 # Iva Potkonjak
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()

  ttnn-train-nightly-tests:
    if: ${{ inputs.run_train_tests }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        TT_METAL_HOME: /work
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        ENABLE_NIGHTLY_TT_TRAIN_TESTS: 1
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    name: tt-train nightly tests ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on: >-
      ${{
        ((inputs.runner-label == 'P150b') && format('tt-ubuntu-2204-{0}-stable', inputs.runner-label))
        || fromJSON(format('["{0}", "in-service"]', inputs.runner-label))
      }}
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: tt-train nightly tests
        timeout-minutes: ${{ inputs.timeout }}
        run: build/tt-train/tests/ttml_tests --gtest_filter=*NIGHTLY_*
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        # Only notify during failed scheduled runs
        if: ${{ failure() && github.event_name == 'schedule' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U082L4RSULT # Denys Makoviichuk
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
