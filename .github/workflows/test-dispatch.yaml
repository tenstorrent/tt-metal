name: "Custom test dispatch"

on:
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - wormhole_b0
          - blackhole
      runner-label:
        description: 'Optional: N150, N300, BH, config-t3000, config-tg. for example: ["in-service", "config-t3000"]'
        required: true
        type: string
        default: '["in-service"]'
      build-type:
        required: false
        type: choice
        options:
          - Release
          - Debug
          - RelWithDebInfo
          - ASan
          - TSan
      tracy:
        required: false
        type: boolean
        default: false
        description: "Build with tracy enabled"
      command:
        required: true
        type: string
      description:
        type: string
        default: "Custom test dispatch"
        required: false
      version:
        required: false
        type: choice
        default: "22.04"
        options:
            - "22.04"
            - "24.04"
      commit:
        required: false
        type: string
        default: ""
        description: 'Commit SHA to test (default: HEAD)'

run-name: ${{ inputs.description }}
jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type }}
      tracy: ${{ inputs.tracy }}
      version: ${{ inputs.version }}
      build-wheel: true
      ref: ${{ inputs.commit || github.sha }}
  test-dispatch:
    needs: build-artifact
    timeout-minutes: 120
    runs-on: ${{ fromJSON(inputs.runner-label) }}
    container:
      image: ${{ contains(inputs.runner-label, 'tt-ubuntu-2204') && 'harbor.ci.tenstorrent.net/' || '' }}${{ needs.build-artifact.outputs.dev-docker-image || 'docker-image-unresolved' }}
      env:
        ARCH_NAME: ${{ inputs.arch }}
        LOGURU_LEVEL: INFO
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        GTEST_OUTPUT: xml:/work/generated/test_reports/
        TT_METAL_HOME: /work
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - ${{ !contains(inputs.runner-label, 'viommu') && '/dev/hugepages-1G:/dev/hugepages-1G' || '/nohugepages:/nohugepages' }}
        - ${{ !contains(inputs.runner-label, 'tt-ubuntu-2204') && '/mnt/MLPerf:/mnt/MLPerf:ro' || '/donotmount:/donotmount:ro' }}
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ðŸ§¬ Checkout Repository
        uses: actions/checkout@v4
        timeout-minutes: 10
        with:
          fetch-depth: 1
          submodules: recursive
          path: docker-job
          ref: ${{ inputs.commit || github.sha }}
      - name: ðŸ“¦ Download Build Artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.build-artifact-name }}
          path: docker-job
      - name: ðŸ“‚ Extract Build Files
        timeout-minutes: 10
        working-directory: docker-job
        run: tar --zstd -xf ttm_any.tar.zst
        shell: bash
      - name: ðŸ§ª Download Python Wheel
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
          path: docker-job
      - name: ðŸ’¿ Install Wheel
        timeout-minutes: 10
        working-directory: docker-job
        run: |
          echo "ðŸ“‚ In directory: $(pwd)"
          echo "ðŸ“„ Files:"
          ls -la
          WHEEL_FILENAME=$(ls -1 *.whl)
          echo "ðŸ“¦ Installing $WHEEL_FILENAME"
          pip3 install "$WHEEL_FILENAME"
        shell: bash
      - name: Run regression in loop
        run: |
          pip3 install pytest-repeat
          ${{ inputs.command }}
        shell: bash
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
