name: "Custom test dispatch"

on:
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - wormhole_b0
          - blackhole
      runner-label:
        description: 'Optional: N150, N300, BH, config-t3000, config-tg'
        required: true
        type: string
        default: '["in-service"]'
      build-type:
        required: false
        type: choice
        options:
          - Release
          - Debug
          - RelWithDebInfo
          - ASan
          - TSan
      tracy:
        required: false
        type: boolean
        default: false
        description: "Build with tracy enabled"
      command:
        required: true
        type: string
      description:
        type: string
        default: "Custom test dispatch"
        required: false
      version:
        required: false
        type: choice
        default: "22.04"
        options:
            - "22.04"
            - "24.04"

run-name: ${{ inputs.description }}
jobs:
  # setup:
  #   name: Setup runner labels for deploy
  #   runs-on: ubuntu-latest
  #   outputs:
  #     deployrunner: ${{ steps.step1.outputs.deployrunner }}
  #   steps:
  #     - name: Set runs-on for deploy
  #       id: step1
  #       run: |
  #         # local_var="\'[\"${{ inputs.hw-config }}\", \"${{ inputs.runner-label }}\"]\'"
  #         echo "deployrunner=${{ inputs.runner-label }}" >> $GITHUB_OUTPUT
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type }}
      tracy: ${{ inputs.tracy }}
      version: ${{ inputs.version }}
      build-wheel: true
  test-dispatch:
    # needs: setup
    needs: build-artifact
    timeout-minutes: 1440
    runs-on: ${{ fromJSON(inputs.runner-label) }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/ensure-active-weka-mount
        timeout-minutes: 3
        if: ${{ inputs.arch != 'blackhole' }}
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
      - name: Run regression in loop in docker
        uses: ./.github/actions/docker-run
        with:
          docker_image: ${{ needs.build-artifact.outputs.dev-docker-image }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          install_wheel: true
          docker_opts: |
            -v /mnt/MLPerf:/mnt/MLPerf:ro
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=${{ inputs.arch }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e GTEST_OUTPUT=xml:generated/test_reports/
            ${{ (inputs.arch == 'wormhole_b0' && '-e WH_ARCH_YAML=wormhole_b0_80_arch_eth_dispatch.yaml') || '' }}
          run_args: |
            pip3 install pytest-repeat
            ${{ inputs.command }}
