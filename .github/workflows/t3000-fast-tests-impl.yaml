name: "[internal] T3000 fast tests impl"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      enable-watcher:
        required: false
        type: boolean
        default: false
      timeout:
        required: false
        type: number
        default: 20
      run-fabric-tests:
        required: false
        type: string
        default: 'true'
        description: "Run t3k fabric tests"
      run-multiprocess-tests:
        required: false
        type: string
        default: 'true'
        description: "Run t3k ttnn multiprocess tests"
      run-ccl-tests:
        required: false
        type: string
        default: 'true'
        description: "Run t3k ttnn ccl tests"

jobs:
  t3000-fast-tests:
    name: T3000 fast tests
    runs-on:
      - tt-ubuntu-2204-N300-llmbox-stable
    container:
      image: harbor.ci.tenstorrent.net/${{ inputs.docker-image || 'docker-image-unresolved!' }}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: wormhole_b0
        LOGURU_LEVEL: INFO
        GTEST_OUTPUT: xml:/work/generated/test_reports/
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@5b5c6ff5b54025e165d189371cda93d2b9ef6115
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
          enable-watcher: ${{ inputs.enable-watcher || false }}
      - name: Run t3k fabric tests
        id: t3k-fabric-tests
        timeout-minutes: 20
        if: ${{ inputs.run-fabric-tests == 'true' }}
        run: |
          mkdir -p generated/test_reports
          source tests/scripts/t3000/run_t3000_unit_tests.sh
          run_t3000_ttfabric_tests
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() && steps.t3k-fabric-tests.outcome == 'failure' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: UJ45FEC7M #Allan Liu
      - name: Run t3k ttnn multiprocess tests
        id: t3k-ttnn-multiprocess-tests
        timeout-minutes: 15
        if: ${{ inputs.run-multiprocess-tests == 'true' }}
        run: |
          mkdir -p generated/test_reports
          source tests/scripts/t3000/run_t3000_unit_tests.sh
          run_t3000_ttnn_multiprocess_tests
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() && steps.t3k-ttnn-multiprocess-tests.outcome == 'failure' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: UBHPP2NDP #Joseph Chu

      - name: Run t3k ttnn ccl tests
        id: t3k-ttnn-ccl-tests
        timeout-minutes: 10
        if: ${{ inputs.run-ccl-tests == 'true' }}
        run: |
          mkdir -p generated/test_reports
          source tests/scripts/t3000/run_t3000_unit_tests.sh
          run_t3000_ccl_tests
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() && steps.t3k-ttnn-ccl-tests.outcome == 'failure' }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_METAL_INFRA_PIPELINE_STATUS_ALERT }}
          owner: U06LRK6JDGB #Saad Jameel
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 17
        if: ${{ !cancelled() }}
        with:
          prefix: "test_reports_"
      - name: Generate gtest annotations on failure
        uses: tenstorrent/tt-metal/.github/actions/generate-gtest-failure-message@main
        if: ${{ failure() }}
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
