name: "zzz TG Stress tests"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      extra-tag:
        required: false
        type: string
        default: "in-service"
      topology-4u:
        required: false
        type: boolean
        default: true
      topology-6u:
        required: false
        type: boolean
        default: true

jobs:
  stress-4u:
    if: ${{ inputs.topology-4u }}
    runs-on:
      - ${{ inputs.extra-tag }}
      - config-tg
      - arch-wormhole_b0
      - pipeline-functional
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!'}}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        LOGURU_LEVEL: INFO
        LLAMA_DIR: /mnt/MLPerf/tt_dnn-models/llama/Llama3.1-70B-Instruct/
        TT_METAL_ENABLE_ERISC_IRAM: 1
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /work
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf:ro
      options: --device /dev/tenstorrent
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ‚¨áÔ∏è  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: Run stress tests
        timeout-minutes: 100
        run: |
          for i in {1..5}; do
            echo "üîÅ Run #$i"
            timeout --preserve-status 1200 pytest models/demos/llama3_subdevices/demo/demo_decode.py -k "nd-hang-test"
          done
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06F3ER8X9A # Stuti Raizada
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
  stress-6u:
    if: ${{ inputs.topology-6u }}
    runs-on:
      - ${{ inputs.extra-tag }}
      - topology-6u
      - arch-wormhole_b0
      - pipeline-functional
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!'}}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        LOGURU_LEVEL: INFO
        LLAMA_DIR: /mnt/MLPerf/tt_dnn-models/llama/Llama3.1-70B-Instruct/
        TT_METAL_ENABLE_ERISC_IRAM: 1
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /work
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf:ro
      options: --device /dev/tenstorrent
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ‚¨áÔ∏è  Setup Job
        uses: tenstorrent/tt-metal/.github/actions/setup-job@main
        timeout-minutes: 10
        with:
          build-artifact-name: ${{ inputs.build-artifact-name }}
          wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      - name: Run stress tests
        timeout-minutes: 360
        run: |
          for i in {1..5}; do
            echo "üîÅ Run #$i"
            timeout --preserve-status 1200 pytest models/demos/llama3_subdevices/demo/demo_decode.py -k "nd-hang-test"
          done
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06F3ER8X9A # Stuti Raizada
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
