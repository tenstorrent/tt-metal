name: "Build tt-metal artifacts"

permissions:
  packages: write

on:
  workflow_call:
    inputs:
      build-type:
        required: false
        type: string
        default: "Release"
      tracy:
        required: false
        type: boolean
        default: false
        description: "Build with tracy enabled"
      distributed:
        required: false
        type: boolean
        default: true
        description: "Build with distributed enabled (Adds OpenMPI dependency)"
      build-wheel:
        required: false
        type: boolean
        default: false
        description: "Build Python Wheel"
      distro:
        required: false
        type: string
        default: "ubuntu"
      version:
        required: false
        type: string
        default: "22.04"
      architecture:
        required: false
        type: string
        default: "amd64"
      toolchain:
        required: false
        type: string
        default: "cmake/x86_64-linux-clang-17-libstdcpp-toolchain.cmake"
        description: "Toolchain file to use for build"
      publish-artifact:
        required: false
        type: boolean
        default: true
        description: "Make resulting artifact available in the workflow"
      skip-tt-train:
        # FIXME: TT-Train needs to get fixed to not assume a specific toolchain.
        #        Fow now enabling an opt-out. But this should get removed.
        required: false
        type: boolean
        default: true
      profile:
        required: false
        type: boolean
        default: false
        description: "Profile the compilation"
      build-umd-tests:
        required: false
        type: boolean
        default: false
        description: "Build UMD tests"
      fetch-depth:
        required: false
        type: number
        default: 500
        description: "Git fetch depth for the checkout step. Must be large enough to include all tags and history needed for `git describe`."
      ref:
        required: false
        type: string
        default: ""
        description: 'Commit SHA to test (default: HEAD)'
      build-evaluation-image:
        required: false
        type: boolean
        default: false
        description: "Build evaluation Docker image with build artifacts and wheel installed"
    outputs:
      ci-build-docker-image:
        description: "Docker tag for the CI Build Docker image for building TT-Metalium et al"
        value: ${{ jobs.build-docker-image.outputs.ci-build-tag }}
      ci-test-docker-image:
        description: "Docker tag for the CI Test Docker image for testing TT-Metalium et al"
        value: ${{ jobs.build-docker-image.outputs.ci-test-tag }}
      dev-docker-image:
        description: "Docker tag for the dev Docker image for developing TT-Metalium et al"
        value: ${{ jobs.build-docker-image.outputs.dev-tag }}
      basic-dev-docker-image:
        description: "Docker tag for the basic dev Docker image for basic development"
        value: ${{ jobs.build-docker-image.outputs.basic-dev-tag }}
      basic-ttnn-runtime-docker-image:
        description: "Docker tag for the basic TTNN runtime Docker image for running TTNN"
        value: ${{ jobs.build-docker-image.outputs.basic-ttnn-runtime-tag }}
      evaluation-docker-image:
        description: "Docker tag for the evaluation Docker image"
        value: ${{ jobs.build-evaluation-image.outputs.evaluation-tag }}
      packages-artifact-name:
        description: "Name to give download-artifact to get the packages"
        value: ${{ jobs.build-artifact.outputs.packages-artifact-name }}
      build-artifact-name:
        description: "Name of the published build artifact"
        value: ${{ jobs.build-artifact.outputs.build_artifact_name }}
      wheel-artifact-name:
        description: "Name of the published wheel artifact"
        value: ${{ jobs.build-wheel.outputs.wheel_artifact_name }}

  workflow_dispatch:
    inputs:
      build-type:
        required: false
        type: string
        default: "Release"
      tracy:
        required: false
        type: boolean
        default: false
        description: "Build with tracy enabled"
      distributed:
        required: false
        type: boolean
        default: true
        description: "Build with distributed enabled (Adds OpenMPI dependency)"
      build-wheel:
        required: false
        type: boolean
        default: false
        description: "Build Python Wheel"
      distro:
        required: false
        type: string
        default: "ubuntu"
      version:
        required: false
        type: string
        default: "22.04"
      architecture:
        required: false
        type: string
        default: "amd64"
      toolchain:
        required: false
        type: string
        default: "cmake/x86_64-linux-clang-17-libstdcpp-toolchain.cmake"
        description: "Toolchain file to use for build"
      profile:
        required: false
        type: boolean
        default: false
        description: "Profile the compilation"
      build-umd-tests:
        required: false
        type: boolean
        default: false
        description: "Build UMD tests"

jobs:
  build-evaluation-image:
    name: "📦 Build Evaluation Docker Image"
    runs-on: tt-ubuntu-2204-large-stable
    environment: ${{ github.ref == 'refs/heads/main' && 'mainline' || '' }}
    timeout-minutes: 60
    outputs:
      evaluation-tag: ${{ steps.image_names.outputs.evaluation-image-name }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Download Build Artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        with:
          name: eager-dist-cp310-ubuntu-22.04-any-profiler-ca391200619c21121b25ff6cb105f09fda3c375f-18975278514
          run-id: 18975278514
          path: .

      - name: 🧪 Download Python Wheel
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0
        with:
          name: TTMetal_build_any_22.04_amd64_x86_64-linux-clang-17-libstdcpp_profiler_ca391200619c21121b25ff6cb105f09fda3c375f_18975278514
          run-id: 18975278514
          path: .

      - name: Set evaluation image name
        id: image_names
        run: |
          echo "evaluation-image-name=${{ inputs.distro }}-${{ inputs.version }}-evaluation-${{ inputs.architecture }}" >> $GITHUB_OUTPUT
          echo "ci-build-tag=ghcr.io/${{ github.repository }}/tt-metalium/${{ env.CI_BUILD_IMAGE_NAME }}:${HASH}" >> $GITHUB_OUTPUT

      - name: Build and push Evaluation image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}
          file: dockerfile/Dockerfile.evaluation
          push: true
          tags: ghcr.io/${{ github.repository }}/tt-metalium/${{ steps.image_names.outputs.evaluation-image-name }}:${{ github.sha }}
          build-args: UBUNTU_VERSION=${{ inputs.version }},BASE_IMAGE=${{ needs.image_names.outputs.ci-build-tag }},BUILD_ARTIFACT_NAME=${{ needs.build-artifact.outputs.build_artifact_name }},WHEEL_ARTIFACT_NAME=${{ needs.build-wheel.outputs.wheel_artifact_name }}
          cache-to: type=inline
          pull: true
