[build-system]
requires = [
    "scikit-build-core>=0.8.0",
    "pybind11>=2.10.0",
    "wheel",
]
build-backend = "scikit_build_core.build"

[project]
name = "ttnn"
authors = [
    {name = "Tenstorrent"},
    {email = "info@tenstorrent.com"},
]
dependencies = [
  "numpy>=1.24.4,<2",
  "loguru>=0.6.0",
  "networkx>=3.1",
  "graphviz>=0.20.3",
  # The following dependencies are only needed when ENABLE_TRACY=ON (profiler builds)
  # "pyyaml>=5.4",
  # "click>=8.0",
  # "pandas>=2.0.3",
  # "seaborn>=0.13.2",
]
requires-python = ">=3.10"
keywords = ["metalium", "ttnn", "tt-metal", "machine learning", "tenstorrent", "libnuma", "libhwloc"]
license = { text = "Apache-2.0" }
description = "General compute framework for Tenstorrent devices"
dynamic = ["version", "readme"]

[project.urls]
Homepage = "https://docs.tenstorrent.com/tt-metal/latest/ttnn"
Documentation = "https://docs.tenstorrent.com/tt-metal/latest/ttnn"
Repository = "https://github.com/tenstorrent/tt-metal"
Issues = "https://github.com/tenstorrent/tt-metal/issues"

[project.scripts]
tt-run = "ttnn.distributed.ttrun:main"

[tool.black]
line-length = 120
include = '^.*(ttnn|tests/scripts|tests/ttnn|tests/tt_eager/python_api_testing|tt_eager/tt_lib|tests/scripts|models/demos|infra|.github)/.*\.py$'

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
skip = ["__init__.py"]

[tool.ruff]
line-length = 120

[tool.scikit-build]
build-dir = "build/{wheel_tag}"

[tool.scikit-build.cmake]
version = ">=3.24"
build-type = {env="CIBW_BUILD_TYPE", default="Release"}

[tool.scikit-build.cmake.define]
ENABLE_TRACY = {env="CIBW_ENABLE_TRACY", default="OFF"}
CMAKE_BUILD_TYPE = {env="CIBW_BUILD_TYPE", default="Release"}
BUILD_SHARED_LIBS = "ON"
TT_INSTALL = "ON"
TT_UNITY_BUILDS = "ON"
TT_ENABLE_LIGHT_METAL_TRACE = "ON"
WITH_PYTHON_BINDINGS = "ON"
TT_USE_SYSTEM_SFPI = "ON"
ENABLE_CCACHE = "TRUE"
CMAKE_INSTALL_LIBDIR = "ttnn"
CMAKE_INSTALL_LIBEXECDIR = "ttnn"

[tool.scikit-build.wheel]
# Package discovery - include all packages that were found by setup.py find_packages
packages = [
    "ttnn/tracy",
    "ttnn/tt_lib",
    "ttnn/ttnn",
    "tools/tracy",
    "tools/triage",
]
# Exclude examples from wheel
exclude = ["ttnn/examples", "ttnn/examples/**"]

[tool.scikit-build.install]
# Use CMake install components for packaging
components = ["umd-runtime", "metalium-runtime", "ttnn-runtime", "tracy"]

# Conditionally add tracy component when enabled
[[tool.scikit-build.overrides]]
if.env.CIBW_ENABLE_TRACY = "ON"
install.components = ["umd-runtime", "metalium-runtime", "ttnn-runtime", "tracy"]

# Handle version from git via setuptools-scm-like behavior
[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
# Supported tag formats:
# v1.2.3, v1.2.3-rc1
tag_regex = '^(?:v)?(?P<version>\d+\.\d+\.\d+(?:-rc\d+)?)$'
#Only look for release tags for calculating distance for wheel name
git_describe_command = [
  "git","describe","--dirty","--tags","--long",
  "--match","v[0-9]*.[0-9]*.[0-9]*",
  "--match","v[0-9]*.[0-9]*.[0-9]*-rc[0-9]*",
  "--exclude","*-dev*"
]
fallback_version = "0.0.0.dev0"


[tool.cibuildwheel]
skip = "*-musllinux_*"
build-verbosity = 2
