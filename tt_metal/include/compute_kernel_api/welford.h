// SPDX-FileCopyrightText: Â© 2025 Tenstorrent AI ULC
//
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "compute_kernel_api/common_globals.h"
#ifdef TRISC_MATH
#include "llk_math_welfords_sfpu_entry.h"
#define MAIN math_main()
#define MATH(x) x
#else
#define MATH(x)
#endif

namespace ckernel {
/**
 * @brief Performs a Welford's online algorithm update for mean and m2 on a tile in the DST register.
 *
 * This operation computes the running mean and m2 for a stream of data, enabling numerically stable
 * calculation of statistics in a single pass. The DST register buffer must be in acquired state via @ref
 * tile_regs_acquire call. This call is blocking and is only available on the compute engine.
 *
 * @tparam input_dst_index   The index of the tile in DST register buffer containing the new input.
 *                           Must be less than the size of the DST register.
 * @tparam mean_dst_index    The index of the tile in DST register buffer containing the current running mean.
 *                           Must be less than the size of the DST register.
 *                           This tile can be left uninitialized when current_row is 0.
 * @tparam m2_dst_index     M2 is the short hand name for the sum of squares
 *                          The index of the tile in DST register buffer containing the running m2.
 *                           Must be less than the size of the DST register.
 *                           This tile can be left uninitialized when current_row is 0.
 * @tparam reformat_dst_to_col_on_end      True: if final_row-current_row <= 32 then LLK converts dst reg at tile offset
 * 1 and dst reg at tile offset 2 to column vectors
 *
 * @tparam convert_M2_to_var_on_end      True: if final_row-current_row <= 32 then LLK converts M2 (dst reg at tile
 * offset 2) to variance
 *
 * @param current_row     The current row index (starting from 0). Should follow 0 <= current_row <= 32 and current_row
 * <= final_row. When current_row is 0, the previous mean and m2 are ignored.
 * @param final_row       The final row index. This index is not included in the update. Should follow current_row <=
 * final_row.A2D This dictates the total number of rows to update, starting from current_row.
 * @param num_skip_rows   Number of initial rows to skip in the update. Must be >= 0. Default is 0.
 *                        Setting this to a value greater than 0 skips the first num_skip_rows rows of the update.
 *                        Should follow 0 <= num_skip_rows <= 32.
 * @param reciprocal_lut_ptr       The reciprocal lookup table pointer for optimized speed
 *
 * @note All 32 rows of the input tile are processed by this function.
 *
 * @return None. Mean and m2 tiles are updated in place.
 */

template <
    uint32_t input_dst_index,
    uint32_t mean_dst_index,
    uint32_t m2_dst_index,
    bool reformat_dst_to_col_on_end,
    bool convert_M2_to_var_on_end>
ALWI void welford_tile(uint32_t current_row, uint32_t final_row, uint32_t num_skip_rows, uint32_t reciprocal_lut_ptr) {
    MATH((llk_math_welfords_sfpu<
          input_dst_index,
          mean_dst_index,
          m2_dst_index,
          reformat_dst_to_col_on_end,
          convert_M2_to_var_on_end>(current_row, final_row, num_skip_rows, reciprocal_lut_ptr)));
}

// /**
//  * @brief Pack the final mean and m2 tiles generated by Welford's algorithm into the DST register as mean and
//  variance.
//  *
//  * This function should be called after all the rows of the input tile have been processed.
//  * The DST register buffer must be in acquired state via @ref tile_regs_acquire call.
//  * This call is blocking and is only available on the compute engine.
//  * This function converts m2 to variance and packs both mean and variance into the DST register.
//  *
//  * @param scale_factor The 1/scale factor is multiplied to the M2 value in dst reg at tile offset 2 to convert it to
//  var and then stored in dst reg at tile offset 2.
//  *
//  * @return None. Mean and variance tiles are updated in place. 32 values each are written to the DST register.
//  *         All 32 values are written to the first face of the DST register. Each valid value is followed by an
//  invalid
//  * value.
//  */
ALWI void welford_M2_to_var(uint32_t scale_factor) {
    welford_tile<0, 1, 2, false, true>(scale_factor, scale_factor, 0, 0, 0);
}

/**
 * Uses a copy of the ternery_sfpu_init
 * Programs the replay for fast LLK. Needed otherwise LLK wont work
 */
ALWI void welford_init() { MATH((llk_math_welfords_sfpu_init())); }

}  // namespace ckernel
