// SPDX-FileCopyrightText: Â© 2025 Tenstorrent AI ULC
//
// SPDX-License-Identifier: Apache-2.0

/*******************************************************************************
 * Header file for register addresses
 *
 * This file was auto-generated by this script:
 *       create_reg_c_header.py
 * ... from this input file:
 *       noc_conn.rdl
 * ... using this as the target address space:
 *       noc_conn
 *
 * This file should not be modified by hand.
 *
 ******************************************************************************/

#ifndef NOC_CONN_REG_H
#define NOC_CONN_REG_H

#include <stdint.h>

//==============================================================================
// Addresses for Address Map: noc_conn
//==============================================================================

#define NOC_CONN_REG_MAP_BASE_ADDR (0x00000000)
#define NOC_CONN_REG_MAP_SIZE (0x000000A8)

#define TEST_UNIT_CONFIG_REG_OFFSET (0x00000000)
#define TEST_UNIT_CONFIG_REG_ADDR (0x00000000)
#define SENDER_CONFIG_REG_OFFSET (0x00000004)
#define SENDER_CONFIG_REG_ADDR (0x00000004)
#define SENDER_START_REG_OFFSET (0x00000008)
#define SENDER_START_REG_ADDR (0x00000008)
#define SENDER_STATUS_REG_OFFSET (0x0000000C)
#define SENDER_STATUS_REG_ADDR (0x0000000C)
#define RECEIVER_STATUS_REG_OFFSET (0x00000010)
#define RECEIVER_STATUS_REG_ADDR (0x00000010)
#define TEST_RESULT_REG_OFFSET (0x00000014)
#define TEST_RESULT_REG_ADDR (0x00000014)
#define FLIT_PAYLOAD_ERR_Y_PLUS_0__REG_OFFSET (0x00000018)
#define FLIT_PAYLOAD_ERR_Y_PLUS_0__REG_ADDR (0x00000018)
#define FLIT_PAYLOAD_ERR_Y_PLUS_1__REG_OFFSET (0x0000001C)
#define FLIT_PAYLOAD_ERR_Y_PLUS_1__REG_ADDR (0x0000001C)
#define FLIT_PAYLOAD_ERR_Y_PLUS_2__REG_OFFSET (0x00000020)
#define FLIT_PAYLOAD_ERR_Y_PLUS_2__REG_ADDR (0x00000020)
#define FLIT_PAYLOAD_ERR_Y_PLUS_3__REG_OFFSET (0x00000024)
#define FLIT_PAYLOAD_ERR_Y_PLUS_3__REG_ADDR (0x00000024)
#define FLIT_PAYLOAD_ERR_Y_PLUS_4__REG_OFFSET (0x00000028)
#define FLIT_PAYLOAD_ERR_Y_PLUS_4__REG_ADDR (0x00000028)
#define FLIT_PAYLOAD_ERR_Y_PLUS_5__REG_OFFSET (0x0000002C)
#define FLIT_PAYLOAD_ERR_Y_PLUS_5__REG_ADDR (0x0000002C)
#define FLIT_PAYLOAD_ERR_Y_PLUS_6__REG_OFFSET (0x00000030)
#define FLIT_PAYLOAD_ERR_Y_PLUS_6__REG_ADDR (0x00000030)
#define FLIT_PAYLOAD_ERR_Y_PLUS_7__REG_OFFSET (0x00000034)
#define FLIT_PAYLOAD_ERR_Y_PLUS_7__REG_ADDR (0x00000034)
#define FLIT_PAYLOAD_ERR_X_PLUS_0__REG_OFFSET (0x00000038)
#define FLIT_PAYLOAD_ERR_X_PLUS_0__REG_ADDR (0x00000038)
#define FLIT_PAYLOAD_ERR_X_PLUS_1__REG_OFFSET (0x0000003C)
#define FLIT_PAYLOAD_ERR_X_PLUS_1__REG_ADDR (0x0000003C)
#define FLIT_PAYLOAD_ERR_X_PLUS_2__REG_OFFSET (0x00000040)
#define FLIT_PAYLOAD_ERR_X_PLUS_2__REG_ADDR (0x00000040)
#define FLIT_PAYLOAD_ERR_X_PLUS_3__REG_OFFSET (0x00000044)
#define FLIT_PAYLOAD_ERR_X_PLUS_3__REG_ADDR (0x00000044)
#define FLIT_PAYLOAD_ERR_X_PLUS_4__REG_OFFSET (0x00000048)
#define FLIT_PAYLOAD_ERR_X_PLUS_4__REG_ADDR (0x00000048)
#define FLIT_PAYLOAD_ERR_X_PLUS_5__REG_OFFSET (0x0000004C)
#define FLIT_PAYLOAD_ERR_X_PLUS_5__REG_ADDR (0x0000004C)
#define FLIT_PAYLOAD_ERR_X_PLUS_6__REG_OFFSET (0x00000050)
#define FLIT_PAYLOAD_ERR_X_PLUS_6__REG_ADDR (0x00000050)
#define FLIT_PAYLOAD_ERR_X_PLUS_7__REG_OFFSET (0x00000054)
#define FLIT_PAYLOAD_ERR_X_PLUS_7__REG_ADDR (0x00000054)
#define FLIT_PAYLOAD_ERR_Y_MNUS_0__REG_OFFSET (0x00000058)
#define FLIT_PAYLOAD_ERR_Y_MNUS_0__REG_ADDR (0x00000058)
#define FLIT_PAYLOAD_ERR_Y_MNUS_1__REG_OFFSET (0x0000005C)
#define FLIT_PAYLOAD_ERR_Y_MNUS_1__REG_ADDR (0x0000005C)
#define FLIT_PAYLOAD_ERR_Y_MNUS_2__REG_OFFSET (0x00000060)
#define FLIT_PAYLOAD_ERR_Y_MNUS_2__REG_ADDR (0x00000060)
#define FLIT_PAYLOAD_ERR_Y_MNUS_3__REG_OFFSET (0x00000064)
#define FLIT_PAYLOAD_ERR_Y_MNUS_3__REG_ADDR (0x00000064)
#define FLIT_PAYLOAD_ERR_Y_MNUS_4__REG_OFFSET (0x00000068)
#define FLIT_PAYLOAD_ERR_Y_MNUS_4__REG_ADDR (0x00000068)
#define FLIT_PAYLOAD_ERR_Y_MNUS_5__REG_OFFSET (0x0000006C)
#define FLIT_PAYLOAD_ERR_Y_MNUS_5__REG_ADDR (0x0000006C)
#define FLIT_PAYLOAD_ERR_Y_MNUS_6__REG_OFFSET (0x00000070)
#define FLIT_PAYLOAD_ERR_Y_MNUS_6__REG_ADDR (0x00000070)
#define FLIT_PAYLOAD_ERR_Y_MNUS_7__REG_OFFSET (0x00000074)
#define FLIT_PAYLOAD_ERR_Y_MNUS_7__REG_ADDR (0x00000074)
#define FLIT_PAYLOAD_ERR_X_MNUS_0__REG_OFFSET (0x00000078)
#define FLIT_PAYLOAD_ERR_X_MNUS_0__REG_ADDR (0x00000078)
#define FLIT_PAYLOAD_ERR_X_MNUS_1__REG_OFFSET (0x0000007C)
#define FLIT_PAYLOAD_ERR_X_MNUS_1__REG_ADDR (0x0000007C)
#define FLIT_PAYLOAD_ERR_X_MNUS_2__REG_OFFSET (0x00000080)
#define FLIT_PAYLOAD_ERR_X_MNUS_2__REG_ADDR (0x00000080)
#define FLIT_PAYLOAD_ERR_X_MNUS_3__REG_OFFSET (0x00000084)
#define FLIT_PAYLOAD_ERR_X_MNUS_3__REG_ADDR (0x00000084)
#define FLIT_PAYLOAD_ERR_X_MNUS_4__REG_OFFSET (0x00000088)
#define FLIT_PAYLOAD_ERR_X_MNUS_4__REG_ADDR (0x00000088)
#define FLIT_PAYLOAD_ERR_X_MNUS_5__REG_OFFSET (0x0000008C)
#define FLIT_PAYLOAD_ERR_X_MNUS_5__REG_ADDR (0x0000008C)
#define FLIT_PAYLOAD_ERR_X_MNUS_6__REG_OFFSET (0x00000090)
#define FLIT_PAYLOAD_ERR_X_MNUS_6__REG_ADDR (0x00000090)
#define FLIT_PAYLOAD_ERR_X_MNUS_7__REG_OFFSET (0x00000094)
#define FLIT_PAYLOAD_ERR_X_MNUS_7__REG_ADDR (0x00000094)
#define FLIT_CTRL_SIG_ERR_Y_PLUS_REG_OFFSET (0x00000098)
#define FLIT_CTRL_SIG_ERR_Y_PLUS_REG_ADDR (0x00000098)
#define FLIT_CTRL_SIG_ERR_X_PLUS_REG_OFFSET (0x0000009C)
#define FLIT_CTRL_SIG_ERR_X_PLUS_REG_ADDR (0x0000009C)
#define FLIT_CTRL_SIG_ERR_Y_MNUS_REG_OFFSET (0x000000A0)
#define FLIT_CTRL_SIG_ERR_Y_MNUS_REG_ADDR (0x000000A0)
#define FLIT_CTRL_SIG_ERR_X_MNUS_REG_OFFSET (0x000000A4)
#define FLIT_CTRL_SIG_ERR_X_MNUS_REG_ADDR (0x000000A4)

//==============================================================================
// Structs for Address Map: noc_conn
//==============================================================================

typedef struct {
    uint32_t test_unit_enable : 1;
    uint32_t rsvd_0 : 3;
    uint32_t power_testing_mode : 1;
} NOC_CONN_TEST_UNIT_CONFIG_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_TEST_UNIT_CONFIG_reg_t f;
} NOC_CONN_TEST_UNIT_CONFIG_reg_u;

#define NOC_CONN_TEST_UNIT_CONFIG_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t power_testing_repeating : 1;
    uint32_t rsvd_0 : 3;
    uint32_t power_testing_pattern_select : 2;
    uint32_t rsvd_1 : 2;
    uint32_t power_testing_pattern_custom : 8;
    uint32_t power_testing_cycles : 8;
    uint32_t power_testing_comp_cycles : 8;
} NOC_CONN_SENDER_CONFIG_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_SENDER_CONFIG_reg_t f;
} NOC_CONN_SENDER_CONFIG_reg_u;

#define NOC_CONN_SENDER_CONFIG_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t sender_start_y_plus : 1;
    uint32_t sender_start_x_plus : 1;
    uint32_t sender_start_y_mnus : 1;
    uint32_t sender_start_x_mnus : 1;
} NOC_CONN_SENDER_START_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_SENDER_START_reg_t f;
} NOC_CONN_SENDER_START_reg_u;

#define NOC_CONN_SENDER_START_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t sender_done_y_plus : 1;
    uint32_t sender_done_x_plus : 1;
    uint32_t sender_done_y_mnus : 1;
    uint32_t sender_done_x_mnus : 1;
} NOC_CONN_SENDER_STATUS_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_SENDER_STATUS_reg_t f;
} NOC_CONN_SENDER_STATUS_reg_u;

#define NOC_CONN_SENDER_STATUS_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t receiver_done_y_plus : 1;
    uint32_t receiver_done_x_plus : 1;
    uint32_t receiver_done_y_mnus : 1;
    uint32_t receiver_done_x_mnus : 1;
} NOC_CONN_RECEIVER_STATUS_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_RECEIVER_STATUS_reg_t f;
} NOC_CONN_RECEIVER_STATUS_reg_u;

#define NOC_CONN_RECEIVER_STATUS_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t test_passed_y_plus : 1;
    uint32_t test_passed_x_plus : 1;
    uint32_t test_passed_y_mnus : 1;
    uint32_t test_passed_x_mnus : 1;
} NOC_CONN_TEST_RESULT_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_TEST_RESULT_reg_t f;
} NOC_CONN_TEST_RESULT_reg_u;

#define NOC_CONN_TEST_RESULT_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t req_chan_flit_payload_byte_err : 32;
} NOC_CONN_FLIT_PAYLOAD_ERR_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_FLIT_PAYLOAD_ERR_reg_t f;
} NOC_CONN_FLIT_PAYLOAD_ERR_reg_u;

#define NOC_CONN_FLIT_PAYLOAD_ERR_REG_DEFAULT (0x00000000)

typedef struct {
    uint32_t req_chan_flit_type_err : 1;
    uint32_t rsvd_0 : 3;
    uint32_t req_chan_vc_err : 1;
    uint32_t rsvd_1 : 3;
    uint32_t req_chan_vld_err : 1;
    uint32_t rsvd_2 : 3;
    uint32_t resp_chan_backoff_err : 1;
    uint32_t rsvd_3 : 3;
    uint32_t resp_chan_credit_err : 1;
} NOC_CONN_FLIT_CTRL_SIG_ERR_reg_t;

typedef union {
    uint32_t val;
    NOC_CONN_FLIT_CTRL_SIG_ERR_reg_t f;
} NOC_CONN_FLIT_CTRL_SIG_ERR_reg_u;

#define NOC_CONN_FLIT_CTRL_SIG_ERR_REG_DEFAULT (0x00000000)

typedef struct {
    NOC_CONN_TEST_UNIT_CONFIG_reg_u test_unit_config;
    NOC_CONN_SENDER_CONFIG_reg_u sender_config;
    NOC_CONN_SENDER_START_reg_u sender_start;
    NOC_CONN_SENDER_STATUS_reg_u sender_status;
    NOC_CONN_RECEIVER_STATUS_reg_u receiver_status;
    NOC_CONN_TEST_RESULT_reg_u test_result;
    NOC_CONN_FLIT_PAYLOAD_ERR_reg_u flit_payload_err_y_plus[8];
    NOC_CONN_FLIT_PAYLOAD_ERR_reg_u flit_payload_err_x_plus[8];
    NOC_CONN_FLIT_PAYLOAD_ERR_reg_u flit_payload_err_y_mnus[8];
    NOC_CONN_FLIT_PAYLOAD_ERR_reg_u flit_payload_err_x_mnus[8];
    NOC_CONN_FLIT_CTRL_SIG_ERR_reg_u flit_ctrl_sig_err_y_plus;
    NOC_CONN_FLIT_CTRL_SIG_ERR_reg_u flit_ctrl_sig_err_x_plus;
    NOC_CONN_FLIT_CTRL_SIG_ERR_reg_u flit_ctrl_sig_err_y_mnus;
    NOC_CONN_FLIT_CTRL_SIG_ERR_reg_u flit_ctrl_sig_err_x_mnus;
} noc_conn_regmap_t;

//==============================================================================
// Bit Fields for Address Map: noc_conn
//==============================================================================

#define NOC_CONN_TEST_UNIT_CONFIG_TEST_UNIT_ENABLE_MASK 0x1
#define NOC_CONN_TEST_UNIT_CONFIG_TEST_UNIT_ENABLE_SHIFT 0

#define NOC_CONN_TEST_UNIT_CONFIG_POWER_TESTING_MODE_MASK 0x10
#define NOC_CONN_TEST_UNIT_CONFIG_POWER_TESTING_MODE_SHIFT 4

#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_REPEATING_MASK 0x1
#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_REPEATING_SHIFT 0

#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_PATTERN_SELECT_MASK 0x30
#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_PATTERN_SELECT_SHIFT 4

#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_PATTERN_CUSTOM_MASK 0xFF00
#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_PATTERN_CUSTOM_SHIFT 8

#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_CYCLES_MASK 0xFF0000
#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_CYCLES_SHIFT 16

#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_COMP_CYCLES_MASK 0xFF000000
#define NOC_CONN_SENDER_CONFIG_POWER_TESTING_COMP_CYCLES_SHIFT 24

#define NOC_CONN_SENDER_START_SENDER_START_Y_PLUS_MASK 0x1
#define NOC_CONN_SENDER_START_SENDER_START_Y_PLUS_SHIFT 0

#define NOC_CONN_SENDER_START_SENDER_START_X_PLUS_MASK 0x2
#define NOC_CONN_SENDER_START_SENDER_START_X_PLUS_SHIFT 1

#define NOC_CONN_SENDER_START_SENDER_START_Y_MNUS_MASK 0x4
#define NOC_CONN_SENDER_START_SENDER_START_Y_MNUS_SHIFT 2

#define NOC_CONN_SENDER_START_SENDER_START_X_MNUS_MASK 0x8
#define NOC_CONN_SENDER_START_SENDER_START_X_MNUS_SHIFT 3

#define NOC_CONN_SENDER_STATUS_SENDER_DONE_Y_PLUS_MASK 0x1
#define NOC_CONN_SENDER_STATUS_SENDER_DONE_Y_PLUS_SHIFT 0

#define NOC_CONN_SENDER_STATUS_SENDER_DONE_X_PLUS_MASK 0x2
#define NOC_CONN_SENDER_STATUS_SENDER_DONE_X_PLUS_SHIFT 1

#define NOC_CONN_SENDER_STATUS_SENDER_DONE_Y_MNUS_MASK 0x4
#define NOC_CONN_SENDER_STATUS_SENDER_DONE_Y_MNUS_SHIFT 2

#define NOC_CONN_SENDER_STATUS_SENDER_DONE_X_MNUS_MASK 0x8
#define NOC_CONN_SENDER_STATUS_SENDER_DONE_X_MNUS_SHIFT 3

#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_Y_PLUS_MASK 0x1
#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_Y_PLUS_SHIFT 0

#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_X_PLUS_MASK 0x2
#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_X_PLUS_SHIFT 1

#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_Y_MNUS_MASK 0x4
#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_Y_MNUS_SHIFT 2

#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_X_MNUS_MASK 0x8
#define NOC_CONN_RECEIVER_STATUS_RECEIVER_DONE_X_MNUS_SHIFT 3

#define NOC_CONN_TEST_RESULT_TEST_PASSED_Y_PLUS_MASK 0x1
#define NOC_CONN_TEST_RESULT_TEST_PASSED_Y_PLUS_SHIFT 0

#define NOC_CONN_TEST_RESULT_TEST_PASSED_X_PLUS_MASK 0x2
#define NOC_CONN_TEST_RESULT_TEST_PASSED_X_PLUS_SHIFT 1

#define NOC_CONN_TEST_RESULT_TEST_PASSED_Y_MNUS_MASK 0x4
#define NOC_CONN_TEST_RESULT_TEST_PASSED_Y_MNUS_SHIFT 2

#define NOC_CONN_TEST_RESULT_TEST_PASSED_X_MNUS_MASK 0x8
#define NOC_CONN_TEST_RESULT_TEST_PASSED_X_MNUS_SHIFT 3

#define NOC_CONN_FLIT_PAYLOAD_ERR_REQ_CHAN_FLIT_PAYLOAD_BYTE_ERR_MASK 0xFFFFFFFF
#define NOC_CONN_FLIT_PAYLOAD_ERR_REQ_CHAN_FLIT_PAYLOAD_BYTE_ERR_SHIFT 0

#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_FLIT_TYPE_ERR_MASK 0x1
#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_FLIT_TYPE_ERR_SHIFT 0

#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_VC_ERR_MASK 0x10
#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_VC_ERR_SHIFT 4

#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_VLD_ERR_MASK 0x100
#define NOC_CONN_FLIT_CTRL_SIG_ERR_REQ_CHAN_VLD_ERR_SHIFT 8

#define NOC_CONN_FLIT_CTRL_SIG_ERR_RESP_CHAN_BACKOFF_ERR_MASK 0x1000
#define NOC_CONN_FLIT_CTRL_SIG_ERR_RESP_CHAN_BACKOFF_ERR_SHIFT 12

#define NOC_CONN_FLIT_CTRL_SIG_ERR_RESP_CHAN_CREDIT_ERR_MASK 0x10000
#define NOC_CONN_FLIT_CTRL_SIG_ERR_RESP_CHAN_CREDIT_ERR_SHIFT 16

#endif
