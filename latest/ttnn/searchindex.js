Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.cumprod", "ttnn/api/ttnn.cumsum", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gather", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sort", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.cumprod.rst", "ttnn/api/ttnn.cumsum.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gather.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sort.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer.md", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.cumprod", "ttnn.cumsum", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.conv3d", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gather", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sort", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Add Tensors", "Basic Convolution", "More Basic Tensor Operations", "MLP Inference", "Multi-Head Attention", "Running a Simple CNN Inference on CIFAR-10", "TT-NN Visualizer", "Using TT-NN"], "terms": {"what": [0, 375, 377, 379, 388], "i": [0, 6, 7, 8, 9, 17, 19, 29, 38, 42, 43, 46, 60, 61, 62, 67, 72, 80, 81, 87, 88, 91, 108, 111, 113, 114, 121, 122, 124, 126, 129, 131, 133, 137, 138, 139, 140, 153, 155, 160, 161, 171, 174, 175, 180, 184, 187, 191, 198, 199, 200, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 230, 232, 234, 245, 247, 248, 250, 252, 254, 255, 257, 262, 263, 266, 271, 274, 275, 276, 281, 282, 287, 288, 289, 292, 297, 298, 314, 315, 322, 328, 329, 330, 332, 334, 335, 337, 338, 339, 349, 351, 352, 353, 354, 356, 357, 358, 366, 367, 371, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389], "get": [0, 6, 8, 302, 355, 374, 377, 381, 383, 388], "start": [0, 28, 179, 314, 374, 377, 379, 381, 386, 388], "1": [0, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 69, 71, 73, 74, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344, 345, 349, 352, 356, 357, 358, 362, 367, 368, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 386, 387, 388], "instal": [0, 375, 379, 381, 388, 389], "build": [0, 383, 388], "2": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267, 269, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 351, 356, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 380, 382, 383, 384, 385, 386, 387], "explor": [0, 388], "our": [0, 375, 377, 378, 380, 382, 383, 384, 385, 387], "model": [0, 3, 226, 227, 375, 378, 379, 381, 382, 383, 385, 387], "demo": [0, 377, 379, 388], "where": [0, 2, 6, 28, 42, 67, 72, 89, 90, 121, 122, 139, 171, 184, 216, 240, 257, 298, 349, 369, 375, 379, 380, 387, 388], "To": [0, 6, 352, 378, 380, 381, 384, 388, 389], "go": [0, 298], "from": [0, 2, 4, 6, 28, 30, 60, 61, 65, 66, 67, 73, 74, 88, 126, 129, 168, 169, 185, 258, 259, 260, 261, 296, 297, 298, 333, 365, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388], "here": [0, 2, 4, 377, 379, 382, 383, 384, 385, 387, 388], "prerequisit": [0, 381], "set": [0, 6, 9, 61, 67, 113, 216, 232, 249, 258, 259, 262, 301, 337, 352, 355, 358, 374, 379, 381, 385, 387, 388, 389], "up": [0, 3, 114, 298, 379, 381, 383, 387], "hardwar": [0, 2, 4, 245, 374, 375, 376, 380, 382, 385, 387, 388, 389], "driver": [0, 383, 384, 385, 386, 387, 388], "firmwar": 0, "system": [0, 111, 133, 138, 266, 276, 281, 282, 292, 335, 379, 388], "level": [0, 379, 382, 384, 388], "depend": [0, 258, 259, 260, 261, 349, 375, 379, 380, 381], "kmd": [0, 383, 384, 385, 386, 387, 388], "updat": [0, 42, 169, 375, 378, 385, 387, 389], "devic": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 388], "flash": [0, 357], "manag": [0, 215, 274, 275, 375, 387], "interfac": [0, 385, 387], "smi": 0, "option": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 379, 383, 387, 388, 389], "multi": [0, 24, 30, 84, 104, 185, 273, 366, 380, 381, 385], "card": [0, 375], "configur": [0, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 381, 383, 387, 388], "topologi": [0, 24, 104, 273], "metalium": [0, 4], "There": [0, 4, 216, 374, 380], "ar": [0, 6, 7, 9, 17, 24, 37, 42, 45, 48, 59, 61, 73, 74, 81, 104, 114, 129, 139, 171, 184, 216, 219, 240, 249, 255, 273, 274, 275, 292, 314, 315, 337, 352, 358, 366, 374, 375, 376, 379, 380, 381, 383, 385, 386, 387, 388, 389], "four": 0, "binari": [0, 16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 118, 119, 130, 131, 132, 140, 141, 152, 162, 172, 173, 175, 176, 196, 197, 200, 201, 204, 205, 206, 207, 211, 212, 220, 224, 233, 234, 235, 238, 246, 254, 255, 257, 283, 296, 327, 331, 333, 370], "step": [0, 28, 314, 375, 378, 388], "latest": [0, 379], "wheel": [0, 389], "For": [0, 4, 6, 11, 21, 30, 43, 66, 73, 74, 81, 120, 126, 129, 135, 153, 180, 188, 190, 192, 193, 195, 198, 199, 209, 210, 216, 256, 263, 267, 272, 284, 317, 322, 324, 352, 358, 371, 374, 375, 378, 379, 380, 383, 385, 387, 388], "user": [0, 4, 6, 156, 184, 216, 226, 227, 245, 347, 375, 376, 378, 383, 384, 385, 386, 387, 388], "onli": [0, 4, 6, 7, 17, 19, 20, 22, 24, 29, 38, 43, 55, 56, 57, 58, 61, 62, 72, 80, 81, 88, 114, 126, 131, 133, 138, 139, 140, 153, 174, 175, 179, 180, 187, 191, 198, 199, 200, 211, 214, 216, 217, 218, 221, 222, 223, 230, 247, 252, 260, 261, 271, 273, 276, 284, 297, 328, 329, 330, 332, 334, 335, 337, 357, 358, 367, 368, 371, 374, 375, 379, 380, 387, 388, 389], "environ": [0, 6, 376, 381, 388, 389], "docker": [0, 389], "releas": [0, 75, 389], "imag": [0, 67, 160, 250, 375, 379, 380, 381, 383, 387, 389], "sourc": [0, 3, 129, 168, 298, 388], "clone": [0, 156, 358, 388], "repositori": [0, 1, 376, 381, 388], "librari": [0, 3, 381, 387], "3": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 249, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 358, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383, 385, 386, 387], "creat": [0, 4, 6, 28, 59, 72, 73, 74, 89, 90, 111, 127, 128, 129, 243, 244, 322, 372, 373, 378, 379, 380, 381, 382, 385, 386, 387, 388], "virtual": [0, 381], "anaconda": 0, "packag": 0, "you": [0, 1, 2, 4, 316, 375, 376, 379, 380, 381, 385, 387, 388, 389], "all": [0, 4, 6, 24, 29, 42, 104, 129, 137, 171, 216, 217, 221, 222, 226, 227, 247, 254, 262, 263, 273, 289, 315, 329, 334, 337, 352, 367, 374, 375, 378, 379, 380, 385, 386, 387, 388], "verifi": [0, 378, 387], "your": [0, 375, 376, 379, 381, 388], "try": [0, 6, 375, 383], "execut": [0, 6, 274, 275, 352, 375, 379, 385, 386, 387, 388, 389], "program": [0, 3, 4, 24, 184, 216, 273, 353, 354, 379, 382, 383, 384, 385, 386, 387], "exampl": [0, 74, 125, 129, 217, 221, 222, 249, 262, 287, 298, 322, 329, 334, 337, 348, 367, 375, 376, 378, 379, 380, 381, 388], "interest": 0, "contribut": [0, 2, 376], "machin": [0, 379, 388], "requir": [0, 4, 17, 19, 35, 42, 62, 72, 81, 113, 114, 127, 226, 227, 230, 243, 297, 315, 330, 332, 369, 372, 375, 379, 384, 388], "overview": [0, 388], "why": 0, "It": [0, 3, 4, 6, 7, 65, 66, 67, 226, 227, 351, 385, 387, 388], "matter": 0, "vm": 0, "us": [0, 3, 4, 6, 7, 8, 9, 24, 30, 43, 61, 65, 66, 67, 72, 81, 87, 88, 90, 94, 96, 100, 104, 106, 107, 108, 114, 126, 128, 134, 135, 139, 153, 156, 184, 216, 219, 226, 227, 244, 245, 247, 258, 259, 260, 261, 266, 267, 273, 274, 275, 286, 294, 301, 302, 315, 316, 322, 346, 347, 350, 351, 352, 357, 358, 364, 365, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "basic": [0, 377, 381], "convert": [0, 3, 4, 6, 30, 59, 126, 129, 226, 227, 258, 259, 260, 261, 322, 350, 351, 380, 381, 383, 385, 387], "torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374, 380, 381, 383, 384, 385, 387], "tensor": [0, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 379, 381, 385, 386, 387], "run": [0, 3, 4, 24, 42, 104, 126, 226, 273, 274, 275, 315, 352, 375, 376, 377, 378, 379, 381, 382, 384, 385], "an": [0, 2, 3, 4, 24, 61, 65, 66, 67, 87, 104, 105, 114, 115, 119, 137, 215, 216, 250, 257, 262, 273, 283, 348, 351, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 388], "oper": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 380, 381, 385, 386, 387], "__getitem__": 0, "slice": [0, 6, 7], "4": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 377, 380, 383, 384, 385, 386, 387, 388], "enabl": [0, 3, 6, 352, 377, 378, 379, 383, 384, 385, 386, 387, 388], "cach": [0, 3, 30, 60, 108, 168, 169, 226, 227, 379, 380, 383, 384, 385, 386, 387, 388], "5": [0, 6, 28, 42, 56, 58, 72, 73, 74, 78, 87, 89, 128, 143, 144, 162, 208, 231, 257, 267, 298, 318, 319, 322, 377, 384, 385, 386, 387], "debug": [0, 3, 4, 378, 387, 388], "intermedi": 0, "6": [0, 28, 231, 290, 322, 377, 380, 383, 384, 385, 386, 387], "trace": [0, 3, 245, 379], "graph": [0, 3, 226, 381], "7": [0, 87, 127, 290, 383, 384, 385, 386, 387], "tt_lib": [0, 113, 114, 348], "8": [0, 24, 28, 72, 87, 104, 247, 273, 379, 380, 383, 384, 387], "log": [0, 6, 195, 370, 379, 382, 385, 387, 388], "9": [0, 55, 57, 70, 87, 89, 312, 385, 386], "support": [0, 1, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 352, 357, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 377, 380, 387, 388], "python": [0, 3, 377, 378, 379, 380, 381, 382, 384, 388], "10": [0, 28, 75, 87, 125, 129, 137, 155, 184, 216, 252, 270, 298, 344, 348, 349, 350, 377, 381, 383, 385, 388], "chang": [0, 6, 288, 346, 347, 364, 365, 380], "string": [0, 6, 43, 80, 135, 226, 227, 266, 267, 301], "represent": [0, 316, 380, 388], "11": [0, 89, 377], "visual": [0, 3, 381], "web": 0, "browser": [0, 388], "12": [0, 62, 139, 171, 247, 289, 374, 377, 381, 386], "regist": [0, 3, 4, 274, 275], "pre": [0, 4, 219, 275, 377, 381, 387], "post": [0, 274, 379], "hook": [0, 274, 275], "13": [0, 383, 384, 385, 386, 387], "queri": [0, 358, 386], "14": [0, 62, 377, 383, 384, 385, 386, 387], "fall": [0, 174], "back": [0, 4, 355, 379, 381, 383, 385, 387], "15": [0, 383, 384, 387], "captur": 0, "c": [0, 3, 7, 42, 65, 66, 67, 105, 113, 114, 219, 302, 352, 366, 377, 379, 380, 383, 387], "function": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 383, 384, 385, 387], "buffer": [0, 4, 6, 24, 75, 104, 245, 273, 379, 380, 381], "alloc": [0, 4, 28, 89, 90, 127, 128, 243, 244, 372, 373, 380, 388], "etc": [0, 3, 4, 298, 380, 387], "shape": [0, 28, 29, 42, 61, 67, 72, 73, 74, 89, 90, 111, 121, 122, 127, 128, 129, 137, 171, 184, 216, 219, 240, 243, 244, 247, 248, 249, 285, 286, 287, 288, 289, 314, 315, 347, 352, 355, 358, 365, 372, 373, 374, 379, 382, 383, 384, 385, 386, 387, 388], "layout": [0, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 382, 383, 384, 385, 386, 387, 388, 389], "data": [0, 3, 6, 16, 28, 29, 30, 59, 65, 66, 67, 87, 88, 89, 90, 91, 113, 114, 126, 127, 128, 130, 131, 137, 140, 171, 172, 173, 175, 184, 196, 197, 200, 204, 206, 211, 216, 217, 220, 221, 222, 224, 233, 234, 243, 244, 258, 259, 260, 261, 262, 266, 289, 296, 315, 327, 329, 333, 334, 346, 347, 349, 350, 351, 352, 364, 365, 366, 367, 370, 372, 373, 374, 379, 381, 384, 387, 388, 389], "type": [0, 3, 4, 6, 7, 16, 28, 29, 30, 43, 59, 65, 66, 67, 73, 74, 81, 87, 88, 89, 90, 91, 105, 113, 114, 121, 126, 127, 128, 129, 130, 131, 135, 137, 140, 171, 172, 173, 175, 184, 196, 197, 200, 204, 206, 211, 216, 217, 220, 221, 222, 224, 233, 234, 243, 244, 245, 249, 258, 259, 260, 261, 262, 266, 270, 288, 289, 296, 315, 322, 327, 329, 333, 334, 337, 346, 347, 349, 350, 351, 352, 364, 365, 367, 370, 372, 373, 374, 379, 385, 387, 388], "limit": [0, 11, 21, 29, 42, 43, 81, 120, 135, 153, 171, 184, 188, 190, 192, 193, 195, 198, 199, 209, 210, 256, 262, 263, 267, 272, 284, 289, 315, 317, 324, 352, 371, 375], "bfloat8_b": [0, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 33, 34, 35, 36, 37, 38, 39, 43, 51, 53, 62, 68, 69, 70, 76, 77, 78, 79, 81, 83, 85, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 109, 110, 111, 116, 120, 123, 124, 126, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 225, 230, 233, 234, 235, 236, 237, 238, 239, 254, 255, 256, 257, 263, 264, 265, 267, 271, 272, 276, 277, 278, 280, 281, 284, 289, 290, 293, 294, 295, 296, 297, 299, 300, 303, 304, 305, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 351, 359, 360, 361, 363, 367, 368, 369, 371, 374, 379, 386], "storag": 0, "shard": [0, 6, 17, 61, 72, 139, 171, 184, 216, 219, 258, 259, 260, 261, 289, 315, 348, 350, 358, 388], "memori": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 381, 383, 386, 387], "config": [0, 6, 24, 63, 87, 88, 104, 105, 121, 122, 171, 216, 250, 258, 259, 273, 288, 314, 353, 354, 355, 374, 377, 383, 387, 388, 389], "api": [0, 4, 356, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 123, 124, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 351, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 380], "to_rank": [0, 380], "open_devic": [0, 9, 60, 75, 87, 88, 125, 185, 270, 298, 337, 348, 349, 350, 382, 383, 384, 385, 386, 387, 389], "close_devic": [0, 382, 383, 384, 385, 386, 387, 389], "manage_devic": [0, 389], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 380], "core": [0, 4, 6, 72, 184, 216, 245, 349, 350, 352, 364, 374, 379, 380, 383, 384, 385, 386, 387, 388], "as_tensor": 0, "from_torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 359, 360, 361, 362, 363, 368, 369, 370, 371, 373, 374, 380, 384, 385, 386, 387, 389], "to_torch": [0, 4, 247, 374, 383, 384, 385, 386, 387, 389], "to_devic": [0, 24, 26, 27, 63, 64, 75, 83, 87, 125, 157, 158, 159, 160, 161, 170, 184, 216, 219, 229, 240, 249, 250, 251, 253, 268, 269, 270, 293, 349, 350, 386], "from_devic": 0, "to_layout": [0, 75, 126, 351, 380, 386, 387], "dump_tensor": 0, "load_tensor": 0, "dealloc": [0, 6, 270, 380, 386, 389], "realloc": 0, "to_memory_config": [0, 380], "creation": [0, 28, 89, 90, 126, 127, 128, 243, 244, 372, 373, 380, 381, 385], "arang": [0, 384], "empti": [0, 4, 6, 389], "empty_lik": 0, "zero": [0, 6, 61, 65, 66, 67, 80, 106, 115, 128, 215, 240, 249, 258, 259, 260, 261, 271, 314, 315, 380, 383, 384, 389], "zeros_lik": 0, "ones": [0, 84, 121, 380, 384], "ones_lik": 0, "full": [0, 6, 262, 375, 379, 380, 381, 388, 389], "full_lik": 0, "matrix": [0, 3, 6, 87, 184, 216, 377, 380, 384, 388, 389], "multipl": [0, 3, 4, 6, 59, 75, 114, 127, 133, 138, 172, 216, 226, 243, 258, 259, 260, 261, 276, 335, 349, 352, 372, 379, 384, 388], "matmul": [0, 184, 384, 386, 388], "linear": [0, 24, 104, 273, 316, 374, 385, 386, 387], "pointwis": 0, "unari": [0, 4, 10, 12, 14, 25, 31, 33, 36, 40, 46, 50, 51, 53, 55, 57, 68, 70, 76, 78, 85, 93, 94, 96, 98, 100, 101, 109, 111, 116, 123, 133, 134, 136, 138, 142, 143, 145, 147, 149, 151, 154, 156, 163, 164, 165, 166, 167, 177, 181, 182, 186, 187, 189, 191, 194, 202, 203, 208, 213, 225, 231, 236, 239, 241, 242, 252, 264, 266, 267, 271, 276, 277, 278, 281, 282, 290, 292, 294, 299, 302, 303, 305, 307, 308, 310, 312, 316, 318, 320, 323, 325, 335, 336, 338, 340, 342, 344, 359, 360, 361, 363], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 32], "asinh": [0, 34], "atan": [0, 39], "atanh": [0, 41], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 52, 219], "celu": [0, 54], "clamp": [0, 56], "clip": [0, 58], "co": 0, "cosh": [0, 71], "deg2rad": [0, 77], "digamma": [0, 79], "experiment": [0, 6, 375], "dropout": 0, "gelu_bw": 0, "elu": [0, 86], "eqz": 0, "erf": [0, 95], "erfc": [0, 97], "erfinv": [0, 99], "exp": [0, 363, 389], "exp2": [0, 102], "expm1": [0, 110], "fill": [0, 112, 114, 115, 127, 128, 243, 244, 285, 314, 372, 373, 379, 382, 384], "floor": [0, 80, 81, 117, 118, 266, 267], "frac": [0, 37, 42, 80, 124, 139, 171, 315], "geglu": 0, "gelu": [0, 6, 107, 133, 135, 374], "glu": 0, "gez": 0, "gtz": 0, "hardshrink": [0, 144, 178], "hardsigmoid": [0, 146], "hardswish": [0, 148], "hardtanh": [0, 150], "heavisid": 0, "i0": [0, 155], "ident": [0, 171, 315], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 178], "lez": 0, "lgamma": [0, 183], "log10": [0, 188], "log1p": [0, 190], "log2": [0, 192], "log_sigmoid": 0, "logical_not": [0, 203], "logical_not_": 0, "logit": [0, 209, 385, 387], "ltz": 0, "mish": [0, 6], "multigammaln": 0, "neg": [0, 237, 256], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 253], "prelu": 0, "rad2deg": [0, 265], "rdiv": [0, 267], "reciproc": [0, 272, 295, 380], "reglu": 0, "relu": [0, 6, 16, 177, 233, 276, 280, 281, 282, 316, 333, 363, 385, 387], "relu_max": 0, "relu_min": 0, "relu6": [0, 279], "remaind": [0, 284], "round": [0, 35, 80, 81, 266, 267, 291, 380], "rsqrt": 0, "selu": [0, 300], "sigmoid": [0, 6, 195, 304], "sigmoid_accur": 0, "sign": [0, 306], "signbit": 0, "silu": [0, 6, 309, 335, 389], "sin": [0, 311], "sinh": [0, 313], "softmax": [0, 353, 354, 386], "softplu": [0, 6, 317], "softshrink": [0, 319], "softsign": [0, 321], "sqrt": [0, 6, 42, 139, 152, 171], "squar": [0, 6, 229, 289, 295, 324, 326, 327, 353, 354, 380], "swiglu": 0, "swish": 0, "tan": [0, 339], "tanh": [0, 6, 43, 107, 135, 341], "tanhshrink": [0, 343], "threshold": [0, 316, 317, 345], "tril": 0, "triu": 0, "trunc": [0, 80, 81, 266, 267], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 161, 250, 269, 375], "angl": [0, 27], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 64], "polar": [0, 251], "alt_complex_rotate90": 0, "add": [0, 17, 247, 353, 354, 375, 377, 378, 381, 384, 386, 389], "addalpha": [0, 19], "subalpha": [0, 332], "multipli": [0, 6, 18, 20, 22, 184, 216, 230, 331, 366, 380, 389], "subtract": [0, 296, 297, 330, 358, 389], "div": 0, "div_no_nan": [0, 83], "floor_div": 0, "fmod": [0, 120], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 293], "rsub": 0, "ldexp": [0, 174], "logical_and": 0, "logical_or": 0, "logical_xor": 0, "bitwise_and": [0, 45, 48], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 199], "logaddexp2": [0, 198], "hypot": [0, 153], "xlogi": [0, 371], "squared_differ": [0, 328], "gt": 0, "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": 0, "le": 0, "eq": 0, "ne": 0, "isclos": 0, "nextaft": 0, "maximum": [0, 6, 29, 55, 56, 57, 58, 150, 218, 219], "minimum": [0, 4, 55, 56, 57, 58, 150, 223, 380], "outer": 0, "pow": 0, "polyv": 0, "scatter": [0, 273], "atan2": [0, 38], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 20, 22, 179, 214, 368], "addcdiv": [0, 21], "addcmul": [0, 23], "mac": 0, "lerp": [0, 180], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 170, 229], "l1_loss": 0, "mse_loss": 0, "reduct": [0, 3, 6, 29, 73, 74, 170, 217, 221, 222, 229, 262, 298, 329, 334, 352, 367], "cumprod": 0, "max": [0, 55, 56, 57, 58, 149, 150, 219, 281, 387], "mean": [0, 6, 42, 139, 170, 171, 229, 289, 380, 386], "min": [0, 55, 56, 57, 58, 149, 150, 281, 282], "std": [0, 4, 217, 221, 222, 249, 301, 334, 352, 367, 387], "sum": [0, 74, 228, 298], "var": 0, "argmax": [0, 385, 387], "prod": [0, 72, 263], "topk": 0, "cumsum": 0, "movement": [0, 388], "concat": [0, 62, 378], "nonzero": 0, "pad": [0, 6, 59, 65, 66, 67, 87, 114, 121, 122, 126, 171, 219, 248, 249, 258, 259, 260, 261, 288, 289, 314, 315, 347, 349, 352, 380, 383, 387], "permut": [0, 219, 358, 383, 386, 387], "reshap": [0, 6, 219, 358, 383, 385, 386, 387], "repeat": [0, 3, 286, 287, 384], "repeat_interleav": 0, "tiliz": [0, 30, 42, 139, 386], "tilize_with_val_pad": 0, "fill_rm": [0, 113], "fill_ones_rm": 0, "until": [0, 298, 351, 365], "untilize_with_unpad": 0, "indexed_fil": 0, "gather": [0, 24, 104], "sort": [0, 352], "normal": [0, 42, 139, 156, 171, 289, 315, 385, 387], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "moreh": [0, 228], "moreh_sum": 0, "transform": [0, 3, 184, 250, 374, 385, 386, 387], "split_query_key_value_and_split_head": [0, 386], "concatenate_head": [0, 386], "attention_softmax": 0, "attention_softmax_": [0, 386], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 3, 24, 273], "all_gath": 0, "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 88, 108], "convolut": [0, 3, 61, 65, 66, 67, 105, 219, 258, 259, 260, 261, 381], "conv1d": [0, 6], "conv2d": [0, 6, 7, 67, 258, 259, 260, 261, 383, 387], "conv3d": 0, "conv_transpose2d": [0, 6], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 65, 66, 67, 258, 259, 260, 261, 383, 387], "act_block_h_overrid": [0, 6, 387], "act_block_w_div": [0, 6, 387], "activ": [0, 6, 16, 91, 130, 131, 140, 150, 172, 173, 175, 184, 196, 197, 200, 204, 206, 211, 216, 220, 224, 233, 234, 296, 327, 333, 370, 374, 377, 381, 385, 387, 388], "core_grid": [0, 6, 72, 139, 184, 216, 374, 386, 387], "deallocate_activ": [0, 6, 387], "enable_act_double_buff": [0, 6, 387], "enable_kernel_stride_fold": [0, 6, 387], "enable_split_read": [0, 6, 387], "enable_weights_double_buff": [0, 6, 387], "full_inner_dim": [0, 6], "in_plac": [0, 6, 219, 387], "output_layout": [0, 6, 139, 387], "override_sharding_config": [0, 6, 387], "reallocate_halo_output": [0, 6, 387], "reshard_if_not_optim": [0, 6, 387], "shard_layout": [0, 6, 387], "transpose_shard": [0, 6, 387], "weights_dtyp": [0, 6, 258, 259, 383, 387], "conv2dsliceconfig": 0, "slicetypeenum": [0, 7], "sliceheight": [0, 7], "slicewidth": [0, 7], "name": [0, 4, 7, 30, 84, 185, 226, 227, 356, 374, 377, 378, 379, 385, 387, 388, 389], "valu": [0, 6, 7, 18, 19, 20, 21, 22, 23, 28, 29, 42, 54, 55, 56, 57, 58, 61, 63, 73, 74, 78, 83, 86, 89, 90, 111, 113, 114, 121, 126, 127, 128, 129, 137, 143, 144, 149, 150, 151, 159, 160, 161, 162, 168, 169, 178, 182, 210, 217, 219, 221, 222, 232, 243, 244, 245, 247, 249, 252, 255, 256, 266, 281, 282, 288, 292, 293, 298, 299, 314, 316, 317, 318, 319, 322, 329, 331, 332, 334, 344, 345, 347, 358, 359, 360, 367, 372, 373, 375, 380, 382, 384, 385, 386, 387, 388, 389], "num_slic": [0, 7], "slice_typ": [0, 7], "pool": [0, 137, 219, 366, 381], "global_avg_pool2d": 0, "max_pool2d": [0, 387], "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 77, 265, 381, 385, 387], "model_preprocess": [0, 374, 386], "preprocess_model": 0, "preprocess_model_paramet": [0, 374], "report": [0, 66, 216, 375, 381, 385, 389], "set_printopt": [0, 389], "register_pre_operation_hook": [0, 389], "register_post_operation_hook": [0, 389], "tutori": [0, 376, 382, 383, 384, 385, 386, 387, 388], "import": [0, 4, 73, 74, 129, 219, 298, 322, 374, 375, 377, 379, 380, 381, 386, 389], "necessari": [0, 59, 375, 381, 387], "open": [0, 3, 215, 245, 381, 386, 388, 389], "tenstorr": [0, 2, 4, 6, 24, 273, 374, 375, 376, 377, 381, 388, 389], "perform": [0, 6, 11, 13, 15, 17, 19, 21, 23, 24, 26, 27, 32, 34, 35, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 62, 64, 69, 70, 71, 73, 74, 77, 78, 79, 81, 83, 86, 92, 95, 97, 99, 102, 103, 104, 110, 112, 115, 117, 119, 120, 124, 129, 132, 133, 135, 137, 138, 141, 143, 144, 146, 148, 149, 150, 153, 155, 156, 157, 158, 174, 176, 178, 180, 182, 183, 188, 190, 192, 193, 195, 198, 199, 203, 208, 209, 210, 212, 215, 216, 218, 219, 223, 230, 231, 232, 235, 237, 241, 242, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 283, 284, 286, 291, 292, 293, 295, 297, 299, 300, 302, 304, 306, 309, 311, 312, 313, 314, 317, 318, 319, 321, 324, 326, 328, 330, 332, 335, 336, 339, 341, 343, 344, 345, 352, 359, 360, 362, 369, 371, 374, 375, 377, 378, 381, 383, 384, 385, 386, 387], "addit": [0, 129, 171, 216, 298, 322, 374, 377, 381, 384, 387], "close": [0, 60, 215, 377, 381], "The": [0, 3, 4, 6, 7, 8, 9, 24, 25, 28, 29, 30, 53, 59, 60, 65, 66, 67, 75, 84, 85, 87, 88, 89, 90, 104, 107, 111, 114, 126, 127, 128, 129, 137, 139, 151, 177, 184, 215, 216, 217, 219, 221, 222, 232, 243, 244, 245, 248, 258, 259, 260, 261, 262, 273, 274, 275, 281, 282, 285, 298, 322, 329, 334, 337, 348, 351, 352, 356, 357, 366, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 388, 389], "output": [0, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 388, 389], "more": [0, 1, 3, 4, 6, 11, 21, 42, 43, 66, 81, 120, 135, 139, 153, 171, 188, 190, 192, 193, 195, 198, 199, 209, 210, 256, 263, 267, 271, 272, 284, 289, 317, 324, 371, 376, 377, 379, 380, 381, 382, 383, 386, 387, 388], "host": [0, 30, 65, 66, 84, 125, 185, 247, 314, 337, 377, 379, 380, 381, 383], "tile": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 379, 380, 381, 382, 385, 387, 388], "nativ": [0, 3, 380, 381], "base": [0, 4, 6, 7, 42, 61, 72, 129, 216, 248, 377, 380, 381, 386], "arithmet": [0, 381], "simul": [0, 381, 383, 385, 386, 387, 388], "broadcast": [0, 16, 17, 18, 81, 91, 129, 131, 140, 173, 175, 184, 196, 197, 200, 204, 206, 211, 216, 233, 234, 287, 315, 327, 330, 331, 333, 356, 370, 381, 383, 385, 387, 389], "row": [0, 6, 52, 105, 112, 114, 115, 117, 124, 139, 240, 291, 306, 362, 379, 380, 381, 388], "vector": [0, 4, 216, 254, 302, 381, 385], "expans": [0, 381], "mlp": [0, 381], "infer": [0, 42, 66, 375, 379, 381], "load": [0, 3, 185, 381, 388], "mnist": [0, 381], "test": [0, 4, 374, 375, 378, 379, 381, 384, 386, 388, 389], "pretrain": [0, 381, 387], "weight": [0, 6, 42, 65, 66, 67, 87, 88, 105, 139, 179, 184, 257, 258, 259, 260, 261, 374, 381, 383], "accuraci": [0, 340, 375, 381, 387], "track": [0, 381, 387], "loop": [0, 381], "flatten": [0, 381, 383, 387], "head": [0, 353, 354, 355, 356, 358, 377, 381], "attent": [0, 353, 354, 356, 357, 358, 381], "write": [0, 1, 4, 72, 184, 216, 374, 380, 381], "initi": [0, 90, 226, 227, 374, 381, 382, 383, 384, 385, 388], "first": [0, 126, 133, 138, 184, 216, 240, 247, 276, 335, 374, 377, 379, 381, 385, 387, 388, 389], "iter": [0, 381, 385], "subsequ": [0, 381, 385, 389], "optim": [0, 6, 380, 381, 387, 388], "version": [0, 7, 139, 226, 227, 357, 377, 379, 381, 383, 384, 385, 387, 388], "process": [0, 61, 73, 74, 139, 258, 259, 379, 381, 385, 387], "paramet": [0, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 377, 381, 387], "check": [0, 2, 4, 216, 375, 377, 381, 385, 387], "match": [0, 6, 59, 73, 74, 171, 216, 217, 221, 222, 226, 227, 288, 289, 315, 329, 334, 367, 380, 381, 382, 384, 385], "origin": [0, 217, 221, 222, 226, 227, 248, 262, 322, 329, 334, 367, 375, 378, 381], "implement": [0, 6, 65, 216, 247, 298, 356, 357, 358, 374, 378, 379, 381, 388], "manual": [0, 4, 374, 377, 381, 389], "seed": [0, 106, 381], "reproduc": [0, 381], "forward": [0, 374, 381], "method": [0, 4, 270, 381], "input": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 381, 382, 385, 386, 387, 388, 389], "simpl": [0, 377, 381, 382, 383, 384, 385], "cnn": [0, 381, 383], "cifar": [0, 381], "setup": [0, 375, 376, 377, 381, 388], "dataset": [0, 380, 381, 385, 388], "defin": [0, 4, 30, 378, 380, 381], "stage": [0, 381, 388], "sampl": [0, 381, 385], "profil": [0, 156, 301, 381, 389], "gener": [0, 6, 87, 106, 114, 216, 250, 375, 379, 381, 383, 384, 385, 386, 387], "result": [0, 28, 30, 42, 114, 126, 128, 129, 156, 184, 216, 219, 244, 258, 259, 260, 261, 262, 266, 271, 373, 379, 380, 381, 382, 383, 384, 385, 387], "analysi": [0, 379, 381], "upload": [0, 379, 381], "tab": [0, 379, 381], "recap": [0, 381], "onboard": 0, "new": [0, 90, 128, 244, 285, 288, 373, 375, 379], "pytorch": [0, 3, 65, 66, 67, 216, 258, 259, 260, 261, 322, 352, 356, 358, 383, 384, 385, 387, 389], "rewrit": 0, "switch": [0, 247, 316], "ad": [0, 65, 66, 67, 184, 258, 259, 260, 261, 378], "faq": 0, "need": [0, 1, 2, 7, 184, 216, 375, 377, 379, 380, 383, 386, 387, 388, 389], "bind": [0, 383, 384, 385, 386, 387], "golden": [0, 374, 388, 389], "perf": [0, 6, 375, 388], "header": 0, "profile_thi": 0, "descript": [0, 113, 114, 378], "uplift": 0, "bug": 0, "featur": [0, 3, 6, 377, 378, 388, 389], "propos": [0, 378], "request": [0, 349, 378], "troubleshoot": [0, 375], "tip": 0, "commun": [0, 377], "develop": [0, 3, 6, 376, 377, 378, 379, 381, 382, 388], "index": [0, 129, 168, 169, 298, 322, 357, 379, 387], "modul": [0, 4, 67, 226, 227, 374, 385, 387, 388], "search": [0, 388], "page": [0, 377, 388], "If": [1, 2, 4, 6, 7, 29, 59, 65, 66, 67, 72, 73, 74, 129, 171, 184, 216, 217, 221, 222, 226, 227, 245, 247, 249, 262, 263, 289, 314, 315, 322, 329, 334, 337, 351, 352, 357, 358, 367, 376, 377, 378, 379, 380, 387, 388, 389], "would": [1, 378, 379, 380, 387], "like": [1, 115, 298, 316, 374, 377, 379, 380, 382, 383, 387, 388, 389], "thi": [1, 4, 6, 7, 8, 9, 29, 42, 59, 61, 65, 66, 67, 88, 107, 108, 111, 121, 122, 137, 156, 174, 219, 248, 258, 259, 260, 261, 262, 281, 282, 298, 316, 322, 356, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "project": [1, 2, 3, 376, 388], "pleas": [1, 2, 216, 375, 376, 377, 378, 389], "review": [1, 376, 378, 382, 384], "standard": [1, 2, 282, 375, 376, 377, 387], "gain": 1, "access": [1, 2, 3, 377], "read": [1, 72, 376, 380], "section": [1, 2, 375, 380, 381, 388], "detail": [1, 4, 11, 21, 42, 43, 81, 120, 135, 139, 153, 171, 188, 190, 192, 193, 195, 198, 199, 209, 210, 256, 263, 267, 272, 284, 289, 317, 324, 371, 376, 387, 388, 389], "contact": 1, "u": [1, 378, 385], "have": [2, 4, 73, 74, 75, 88, 122, 129, 171, 179, 216, 258, 259, 262, 266, 298, 315, 346, 347, 352, 364, 365, 375, 377, 379, 380, 387, 388], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 6, 216, 316, 375, 378, 379, 383], "file": [2, 4, 30, 84, 185, 375, 377, 379, 382, 383, 384, 385, 387, 388, 389], "github": [2, 24, 273, 375, 376, 377, 388], "can": [2, 3, 4, 6, 7, 28, 43, 55, 56, 57, 58, 65, 66, 67, 80, 81, 90, 128, 135, 139, 216, 244, 247, 258, 259, 260, 261, 266, 267, 274, 275, 316, 337, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "out": [2, 4, 6, 73, 74, 106, 129, 282, 314, 322, 352, 377, 382, 383, 386, 387], "relev": [2, 375], "ever": 2, "help": [2, 378, 381, 388], "we": [2, 6, 122, 126, 216, 351, 375, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389], "offici": [2, 377, 388], "discord": 2, "channel": [2, 6, 24, 42, 65, 66, 67, 104, 113, 114, 137, 219, 258, 259, 260, 261, 273, 366, 379, 383, 387], "repres": [2, 3, 379, 380, 387], "both": [2, 6, 17, 65, 66, 67, 73, 74, 216, 255, 258, 259, 260, 261, 374, 375, 379, 380, 386, 388], "metal": [2, 3, 24, 273, 376, 377, 381, 383, 384, 385, 386, 387, 388], "join": 2, "discuss": [2, 375], "board": 2, "member": [2, 7], "bounc": 2, "idea": [2, 375], "off": [2, 281, 290, 374, 380], "each": [2, 7, 42, 61, 114, 129, 137, 219, 247, 285, 287, 314, 379, 380, 381, 385, 387, 388], "other": [2, 4, 6, 129, 216, 374, 375, 376, 377, 380, 383, 384, 387, 388, 389], "refer": [2, 3, 11, 21, 43, 66, 75, 81, 90, 111, 120, 135, 153, 188, 190, 192, 193, 195, 198, 199, 209, 210, 216, 232, 256, 263, 267, 272, 284, 317, 324, 371, 378, 380, 387, 388, 389], "code": [2, 4, 274, 275, 322, 352, 358, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389], "conduct": 2, "when": [2, 4, 6, 7, 8, 9, 42, 61, 65, 66, 67, 72, 81, 108, 139, 153, 200, 215, 216, 220, 226, 249, 255, 262, 267, 349, 375, 378, 380, 386, 389], "interact": [2, 388], "neural": [3, 383, 385, 387, 388], "network": [3, 385, 387, 388], "built": [3, 270, 377, 387], "design": [3, 381, 382, 388], "feel": [3, 388], "familiar": 3, "experienc": 3, "kei": [3, 358, 374, 380, 386, 387], "includ": [3, 4, 42, 59, 375, 380, 384, 385, 387, 388], "than": [3, 6, 7, 61, 78, 113, 114, 131, 132, 140, 141, 175, 176, 182, 211, 212, 232, 262, 379, 386, 389], "200": 3, "fuse": [3, 6, 374, 386], "A": [3, 4, 6, 28, 127, 128, 129, 216, 217, 221, 222, 243, 244, 316, 329, 334, 357, 367, 372, 373, 375, 377, 378, 380, 388], "differ": [3, 6, 67, 216, 302, 327, 380, 384, 385, 387, 389], "wai": [3, 226, 227, 374, 377, 381], "distribut": [3, 72, 171, 184, 216, 377, 380, 388], "abil": [3, 388], "custom": [3, 4, 274, 275, 377, 383, 385, 386, 387, 388], "mesh": [3, 24, 126, 273, 351, 377, 383, 384, 385, 386, 387], "tool": [3, 377, 379, 388], "comput": [3, 4, 18, 20, 22, 37, 42, 59, 65, 66, 67, 73, 74, 80, 82, 105, 118, 129, 130, 137, 139, 152, 162, 171, 172, 173, 179, 184, 196, 197, 200, 201, 204, 205, 206, 207, 214, 216, 217, 220, 221, 222, 224, 238, 246, 254, 258, 259, 260, 261, 262, 289, 315, 327, 329, 331, 334, 353, 354, 357, 358, 367, 368, 370, 379, 384, 385, 387, 388], "util": [3, 377, 380, 385, 387, 388], "significantli": [3, 6, 386], "speed": 3, "comparison": [3, 162, 378], "mode": [3, 35, 42, 43, 81, 94, 96, 100, 134, 135, 170, 219, 229, 267, 294, 302, 383, 384, 385, 386, 387, 388], "long": [3, 378], "sequenc": [3, 4, 356, 357], "against": [3, 129, 375, 388, 389], "known": [3, 67], "document": [4, 375, 378, 388], "meant": 4, "contributor": 4, "Not": [4, 235, 374, 389], "mai": [4, 6, 75, 81, 153, 174, 216, 267, 271, 348, 374, 377, 380, 383, 384, 385, 386, 387, 389], "grayskul": [4, 30, 374, 389], "wormhol": [4, 30, 374, 377, 389], "take": [4, 6, 355, 375, 376, 380, 383, 386, 387], "one": [4, 55, 56, 57, 58, 129, 262, 376, 380, 381, 384], "produc": [4, 171, 271, 375, 385], "call": [4, 6, 126, 274, 275, 351, 378, 379, 380, 386, 388, 389], "optiona": 4, "b": [4, 108, 287, 356, 357, 377, 383, 387], "composit": 4, "struct": 4, "specifi": [4, 6, 28, 59, 73, 74, 84, 89, 90, 127, 128, 129, 184, 216, 217, 221, 222, 226, 227, 243, 244, 247, 248, 249, 262, 285, 298, 322, 329, 334, 337, 347, 356, 357, 367, 372, 373, 374, 379, 380, 386], "how": [4, 7, 375, 379, 380, 382, 384, 385, 386, 387, 388, 389], "simpli": [4, 349, 388], "ttnn": [4, 377, 378, 380, 381, 382, 383, 384, 385, 387, 389], "register_oper": 4, "exist": [4, 245, 379, 385, 387], "bind_registered_oper": 4, "auto": 4, "attach": [4, 226, 227], "attach_golden_funct": 4, "let": [4, 380, 382, 383, 384, 385, 386, 387], "": [4, 6, 59, 65, 66, 67, 139, 171, 217, 221, 222, 226, 227, 289, 298, 315, 329, 334, 356, 357, 367, 375, 377, 380, 382, 384, 385, 386, 387, 388], "just": [4, 258, 259, 260, 261, 386, 387], "copi": [4, 59, 125, 156, 348, 377, 388], "In": [4, 106, 216, 288, 349, 354, 374, 379, 380, 383, 385, 387, 388], "order": [4, 72, 216, 253, 297, 322, 352, 379, 380, 386, 388, 389], "follow": [4, 6, 29, 67, 114, 216, 217, 221, 222, 262, 288, 322, 329, 334, 352, 367, 374, 376, 377, 378, 379, 380, 381, 385, 387, 388, 389], "directori": [4, 377, 381, 388], "structur": [4, 6, 7, 374, 385, 388], "shown": [4, 380, 382, 383, 384, 385, 386, 387], "below": [4, 216, 375, 379, 380, 382, 383, 384, 385, 386, 387], "cpp": [4, 383, 384, 385, 386, 387, 388], "categori": [4, 388], "operation_nam": 4, "_device_oper": 4, "hpp": 4, "program_factory_0": 4, "_program_factori": 4, "mani": [4, 374], "factori": 4, "But": 4, "concret": [4, 216], "found": [4, 374, 385, 387, 388], "example_device_oper": 4, "spdx": [4, 389], "filecopyrighttext": [4, 389], "2023": 4, "inc": [4, 389], "licens": [4, 389], "identifi": [4, 388, 389], "apach": [4, 389], "0": [4, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 73, 74, 75, 76, 78, 80, 81, 85, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 109, 111, 112, 113, 114, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 142, 143, 144, 145, 147, 151, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 178, 179, 181, 182, 185, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 208, 210, 211, 213, 215, 217, 219, 220, 221, 222, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 243, 244, 245, 247, 249, 250, 254, 255, 256, 262, 263, 264, 266, 267, 268, 270, 271, 273, 277, 278, 281, 282, 287, 288, 290, 294, 295, 296, 297, 298, 302, 303, 305, 307, 308, 309, 310, 314, 316, 318, 319, 320, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389], "pragma": 4, "onc": [4, 258, 259, 260, 261, 377, 385, 388], "variant": [4, 139], "device_oper": 4, "decor": [4, 378], "namespac": 4, "exampledeviceoper": 4, "attribut": [4, 374, 379, 380], "store": [4, 6, 42, 129, 379, 380, 386], "variabl": [4, 377, 388, 389], "aren": [4, 8], "t": [4, 8, 156, 216, 226, 227, 379, 380, 386], "operation_attributes_t": 4, "bool": [4, 17, 19, 29, 30, 35, 42, 62, 65, 66, 67, 72, 73, 74, 75, 80, 81, 84, 94, 96, 100, 129, 134, 139, 162, 170, 184, 185, 216, 217, 219, 221, 222, 226, 227, 229, 230, 247, 260, 261, 262, 294, 297, 302, 322, 329, 330, 332, 334, 346, 347, 352, 353, 354, 356, 357, 358, 364, 365, 367, 369, 387], "int": [4, 10, 12, 14, 16, 17, 18, 19, 24, 25, 28, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 65, 66, 67, 68, 72, 73, 74, 76, 80, 81, 85, 87, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 142, 145, 147, 151, 154, 156, 159, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 181, 184, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 215, 216, 219, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 244, 245, 247, 248, 249, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 271, 273, 276, 277, 278, 281, 282, 286, 290, 294, 296, 297, 302, 303, 305, 307, 308, 309, 310, 314, 315, 316, 320, 322, 323, 324, 325, 327, 330, 331, 332, 333, 335, 337, 338, 340, 341, 342, 346, 347, 351, 352, 353, 354, 356, 357, 358, 361, 363, 364, 365, 366, 368, 369, 370, 373, 380, 383, 387], "some_other_attribut": 4, "argument": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 380], "pass": [4, 6, 65, 66, 107, 108, 114, 274, 275, 358, 374, 378, 380, 383, 385, 387], "don": [4, 216], "thei": [4, 7, 216, 375, 380, 386], "tensor_args_t": 4, "const": [4, 301], "input_tensor": [4, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 121, 123, 124, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 176, 177, 178, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 208, 209, 210, 212, 213, 219, 225, 231, 232, 235, 236, 237, 239, 240, 241, 242, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 373, 383, 387, 389], "howev": [4, 247], "show": [4, 216, 380, 386, 388], "els": [4, 80, 385, 387], "done": [4, 6, 375, 377, 379], "io_tensor": 4, "optional_output_tensor": [4, 184, 216], "vector_of_tensor": 4, "tupl": [4, 65, 66, 67, 72, 247, 258, 259, 260, 261, 322, 352, 358, 383, 387], "tuple_of_tensor": 4, "vector_of_optional_tensor": 4, "some_crazy_tuple_of_tensor": 4, "return": [4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 386, 387], "spec": [4, 72, 126, 171], "singl": [4, 217, 221, 222, 329, 334, 357, 367, 374, 375, 378, 379, 380], "tensorspec": [4, 126], "spec_return_value_t": 4, "tensor_return_value_t": 4, "note": [4, 6, 64, 129, 158, 216, 217, 221, 222, 243, 244, 269, 288, 329, 334, 367, 377, 379, 380, 386, 388, 389], "should": [4, 6, 67, 133, 138, 156, 162, 179, 216, 219, 240, 247, 255, 276, 335, 375, 377, 378, 379, 382, 386, 387, 388], "same": [4, 6, 16, 18, 20, 22, 37, 44, 45, 47, 48, 49, 65, 66, 67, 73, 74, 80, 82, 88, 90, 91, 92, 111, 113, 118, 128, 129, 130, 131, 132, 140, 141, 152, 156, 162, 172, 173, 175, 176, 179, 184, 196, 197, 200, 201, 204, 205, 206, 207, 211, 212, 214, 216, 220, 224, 226, 227, 233, 234, 235, 238, 240, 244, 246, 254, 255, 258, 259, 260, 261, 262, 296, 298, 327, 331, 333, 349, 352, 356, 368, 370, 373, 377, 379, 380, 384, 385, 386, 388], "pattern": [4, 61, 226, 378, 385, 387], "e": [4, 29, 171, 216, 217, 221, 222, 262, 315, 329, 334, 367, 377, 379, 380, 385, 387, 388, 389], "singlecor": 4, "share": [4, 380], "between": [4, 28, 42, 65, 66, 67, 216, 258, 259, 260, 261, 350, 377, 387, 388], "override_runtime_argu": 4, "shared_variables_t": 4, "tt_metal": [4, 337, 366, 377, 379, 388], "kernelhandl": 4, "unary_reader_kernel_id": 4, "unary_writer_kernel_id": 4, "cached_program_t": 4, "cachedprogram": 4, "static": 4, "operation_attribut": 4, "tensor_arg": 4, "tensor_return_valu": 4, "void": 4, "cached_program": 4, "multicor": [4, 247, 346, 347, 352, 364, 365], "size_t": 4, "num_cor": [4, 6], "num_cores_i": 4, "program_factory_t": 4, "mandatori": 4, "select": [4, 6, 42, 378, 385], "arg": [4, 114, 139, 217, 221, 222, 249, 258, 259, 260, 261, 274, 275, 329, 334, 337, 367, 387, 389], "select_program_factori": 4, "valid": [4, 6, 24, 104, 113, 114, 216, 226, 227, 273, 352, 374, 375, 379, 380], "usual": 4, "validate_on_program_cache_miss": 4, "reus": [4, 258, 259, 260, 261, 388], "less": [4, 6, 175, 176, 211, 212, 262, 379, 389], "validate_on_program_cache_hit": 4, "compute_output_spec": 4, "create_output_tensor": 4, "map": [4, 30], "abl": 4, "prim": 4, "after": [4, 6, 105, 247, 274, 378, 379, 380, 383, 385, 387, 388, 389], "op": [4, 6, 7, 8, 29, 65, 66, 67, 72, 88, 139, 219, 315, 337, 356, 357, 363, 378, 379, 383, 388, 389], "keep": [4, 29, 217, 221, 222, 262, 329, 334, 367, 374, 380], "mind": [4, 386], "overload": [4, 337], "queue_id": [4, 10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 67, 68, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 114, 116, 123, 127, 128, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 219, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 244, 247, 249, 255, 256, 264, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 314, 316, 320, 323, 324, 325, 327, 330, 331, 332, 333, 338, 340, 341, 342, 346, 347, 352, 356, 357, 361, 363, 364, 365, 368, 369, 370, 373], "automat": [4, 215, 349, 375, 379, 380], "primit": 4, "so": [4, 6, 114, 374], "also": [4, 6, 65, 66, 67, 73, 74, 232, 375, 379, 380, 381, 388], "invok": 4, "case": [4, 80, 126, 162, 216, 238, 257, 349, 374, 375, 380, 387, 388, 389], "hash": [4, 226, 227, 379], "stl": 4, "hash_t": 4, "compute_program_hash": 4, "create_op_performance_model": 4, "opperformancemodel": 4, "make": [4, 226, 227, 316, 352, 358, 374, 380, 388, 389], "avail": [4, 6, 366, 381, 388, 389], "constexpr": 4, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 4, "true": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 385, 387, 388, 389], "logical_shap": 4, "tensorlayout": 4, "dtype": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 380, 382, 383, 384, 385, 386, 387, 389], "pageconfig": 4, "memoryconfig": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "output_spec": 4, "create_device_tensor": 4, "42": [4, 385], "single_core_program_factori": 4, "work_split": 4, "tensor_accessor_arg": 4, "output_tensor": [4, 10, 12, 14, 16, 18, 25, 29, 31, 33, 36, 40, 44, 45, 46, 47, 48, 49, 51, 53, 61, 68, 73, 76, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 109, 111, 112, 116, 122, 123, 127, 128, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 220, 224, 225, 229, 233, 234, 236, 237, 239, 244, 255, 256, 264, 266, 271, 277, 278, 281, 282, 290, 294, 295, 296, 302, 303, 305, 307, 308, 309, 310, 316, 320, 323, 324, 325, 327, 331, 333, 338, 340, 341, 342, 352, 361, 363, 368, 369, 370, 373, 389], "src_buffer": 4, "dst_buffer": 4, "dataformat": 4, "cb_data_format": 4, "datatype_to_dataformat_convert": 4, "uint32_t": [4, 106], "single_tile_s": 4, "tiles": 4, "cb_data_format_output": 4, "single_tile_size_output": 4, "num_til": 4, "physical_volum": 4, "constant": [4, 42, 139, 171, 380], "tile_hw": 4, "corecoord": 4, "compute_with_storage_grid_s": 4, "y": [4, 37, 250, 379, 380, 386], "all_cor": 4, "core_group_1": 4, "core_group_2": 4, "num_tiles_per_core_group_1": 4, "num_tiles_per_core_group_2": 4, "split_work_to_cor": 4, "src0_cb_index": 4, "cbindex": 4, "c_0": 4, "num_input_til": 4, "circularbufferconfig": 4, "cb_src0_config": 4, "set_page_s": 4, "createcircularbuff": 4, "output_cb_index": 4, "c_2": 4, "num_output_til": 4, "cb_output_config": 4, "reader_compile_time_arg": 4, "tensoraccessorarg": 4, "append_to": 4, "writer_compile_time_arg": 4, "createkernel": 4, "eltwis": [4, 119, 257, 283, 382], "kernel": [4, 6, 42, 59, 65, 66, 67, 105, 107, 139, 184, 216, 217, 219, 221, 222, 258, 259, 260, 261, 315, 329, 334, 367, 377, 379, 383, 387, 388], "dataflow": 4, "reader_unary_interleaved_start_id": 4, "readerdatamovementconfig": 4, "writer_unary_interleaved_start_id": 4, "writerdatamovementconfig": 4, "compute_kernel_args_group_1": 4, "per_core_block_cnt": 4, "per_core_block_s": 4, "math_approx_mod": 4, "fals": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 385, 387, 388, 389], "eltwise_sfpu": 4, "computeconfig": 4, "math_fidel": 4, "mathfidel": 4, "hifi4": [4, 379], "compile_arg": 4, "rang": [4, 16, 28, 44, 45, 46, 47, 48, 49, 70, 113, 114, 130, 155, 172, 174, 189, 220, 225, 231, 233, 252, 290, 292, 312, 333, 338, 339, 340, 352, 380], "compute_kernel_args_group_2": 4, "num_tiles_written": 4, "num_tiles_per_cor": 4, "contain": [4, 6, 28, 29, 73, 74, 87, 129, 219, 271, 298, 380, 384, 387, 388], "tt_assert": 4, "setruntimearg": 4, "address": [4, 388], "move": [4, 6, 121, 122, 375, 383, 386, 387], "shared_vari": 4, "runtime_arg": 4, "getruntimearg": 4, "multi_core_program_factori": 4, "idevic": [4, 258, 259, 337], "written": [4, 168, 169, 184, 216, 386], "compositeexampleoper": 4, "composite_exampl": 4, "another_copi": 4, "_pybind": 4, "example_pybind": 4, "pybind": 4, "pybind_fwd": 4, "py": [4, 374, 375, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389], "pybind11": 4, "bind_example_oper": 4, "r": [4, 250, 377, 388], "doc": [4, 388], "expos": 4, "logic": [4, 200, 201, 204, 205, 207, 216, 226, 227], "self": [4, 374, 380], "correct": [4, 217, 221, 222, 329, 334, 367, 385, 387], "specif": [4, 6, 29, 216, 245, 322, 357, 375, 377, 380, 381, 387, 388], "pybind_overload_t": 4, "decltyp": 4, "examples_pybind": 4, "py_modul": 4, "final": [4, 216, 374, 375, 378, 385, 387, 388], "wherev": 4, "want": [4, 377, 389], "compar": [4, 91, 131, 140, 175, 211, 216, 234, 385, 387], "its": [4, 59, 67, 90, 220, 247, 314, 374, 375, 378, 379, 380, 385, 387, 389], "equival": [4, 322, 352, 358, 377, 380, 381], "signatur": 4, "And": [4, 374, 380], "ignor": 4, "kwarg": [4, 258, 259, 260, 261, 274, 275, 337, 389], "def": [4, 374, 383, 384, 386, 387, 389], "golden_funct": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "befor": [4, 6, 30, 73, 74, 247, 258, 259, 260, 261, 275, 316, 375, 380], "some": [4, 337, 377, 384, 389], "preprocess": [4, 6, 30, 65, 66, 67, 226, 227, 258, 259, 260, 261, 380, 387], "postprocess": 4, "pack": [4, 364, 365], "preprocess_golden_function_input": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "ttnn_input_tensor": 4, "postprocess_golden_function_output": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "torch_output_tensor": [4, 389], "becaus": [4, 380, 386], "wa": [4, 375, 379, 380], "class": [6, 7, 374, 375, 379, 380, 385], "pybind11_object": [6, 7, 380], "flag": [6, 30], "properti": [6, 7, 380], "control": [6, 377], "size": [6, 7, 28, 65, 66, 67, 73, 74, 87, 88, 129, 216, 217, 219, 221, 222, 245, 257, 258, 259, 260, 261, 262, 314, 329, 334, 356, 357, 358, 366, 367, 380, 382, 387, 389], "block": [6, 65, 66, 67, 72, 215, 216, 219, 258, 259, 260, 261, 271, 380], "height": [6, 7, 59, 61, 65, 66, 67, 72, 113, 114, 127, 137, 171, 216, 219, 243, 258, 259, 260, 261, 289, 349, 372, 379, 380, 383, 387], "chunk": [6, 356, 357], "l1": [6, 7, 72, 184, 216, 245, 348, 350, 380, 383, 386, 387, 388], "divid": [6, 7, 81, 353, 354, 388], "among": 6, "further": 6, "subdivid": 6, "within": [6, 28, 45, 48, 219, 375, 380, 388], "possibl": [6, 216, 351, 374], "which": [6, 45, 48, 72, 73, 74, 127, 128, 129, 184, 216, 219, 226, 227, 243, 244, 266, 314, 315, 322, 356, 357, 372, 373, 374, 379, 380, 382, 383, 384, 385, 387, 388], "equal": [6, 91, 92, 131, 132, 162, 171, 175, 176, 234, 235, 322, 389], "output_matrix_height_per_cor": 6, "lead": 6, "larg": [6, 7, 316, 374, 380, 384], "temporari": 6, "circular": [6, 388], "oom": 6, "must": [6, 25, 42, 65, 66, 73, 74, 88, 105, 129, 171, 232, 256, 258, 259, 262, 266, 288, 289, 298, 314, 315, 322, 346, 347, 348, 352, 364, 365, 377, 380, 388], "32": [6, 24, 29, 59, 61, 62, 75, 105, 114, 125, 127, 133, 137, 138, 171, 184, 216, 240, 241, 242, 243, 246, 247, 249, 257, 263, 270, 276, 286, 287, 289, 314, 315, 335, 348, 349, 350, 352, 363, 372, 380, 382, 383, 384, 385, 387, 389], "evenli": [6, 28], "reduc": [6, 7, 29, 139, 217, 221, 222, 262, 273, 298, 329, 334, 352, 367], "width": [6, 7, 59, 65, 66, 67, 72, 113, 114, 127, 137, 171, 216, 219, 243, 258, 259, 260, 261, 315, 349, 352, 355, 372, 379, 383, 387], "prevent": [6, 377], "greater": [6, 61, 78, 113, 114, 131, 132, 140, 141, 182, 232, 389], "n150": 6, "thats": 6, "64": [6, 29, 61, 72, 75, 125, 133, 138, 171, 184, 216, 249, 270, 276, 289, 314, 315, 335, 348, 349, 350, 352, 380, 385, 386, 387, 389], "2048": [6, 387, 389], "divisor": [6, 130, 267], "halv": 6, "appli": [6, 7, 10, 12, 14, 16, 25, 31, 33, 36, 42, 46, 51, 53, 59, 65, 66, 67, 68, 73, 74, 76, 85, 91, 93, 94, 96, 98, 100, 101, 105, 106, 107, 108, 109, 111, 116, 123, 130, 131, 133, 134, 136, 137, 138, 140, 142, 145, 147, 151, 154, 163, 164, 165, 166, 167, 172, 173, 175, 177, 181, 184, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 216, 217, 219, 220, 221, 222, 224, 225, 233, 234, 236, 239, 247, 258, 259, 260, 261, 264, 271, 276, 277, 278, 281, 282, 290, 294, 296, 302, 303, 305, 307, 308, 310, 316, 320, 323, 325, 327, 329, 333, 334, 335, 338, 340, 342, 361, 363, 367, 370, 375, 385, 387], "sigmoid_approx": 6, "grid": [6, 184, 216, 356, 357, 364, 374, 380, 387], "boolean": [6, 160, 161, 340, 352], "indic": [6, 29, 87, 88, 129, 240, 298, 314, 322, 352, 365, 388], "whether": [6, 29, 30, 73, 74, 75, 84, 184, 185, 216, 217, 219, 221, 222, 226, 227, 260, 261, 329, 334, 346, 347, 352, 357, 358, 364, 365, 367, 387], "conv": [6, 65, 66, 67, 383, 387], "halo": [6, 7, 219], "micro": 6, "anoth": [6, 377, 380], "doubl": 6, "allow": [6, 216, 375, 378, 384, 385], "stall": 6, "reader": [6, 226], "improv": [6, 316, 375, 388], "increas": [6, 388], "usag": [6, 375, 377, 388], "fold": 6, "stride": [6, 65, 66, 67, 219, 258, 259, 260, 261, 383, 387], "dimens": [6, 7, 24, 25, 29, 59, 61, 62, 73, 74, 127, 129, 133, 137, 138, 159, 216, 217, 221, 222, 243, 247, 249, 257, 262, 263, 273, 276, 285, 287, 288, 298, 314, 315, 322, 329, 334, 335, 349, 351, 352, 355, 356, 357, 358, 367, 372, 380, 383, 384, 385], "under": [6, 375, 378, 379, 388, 389], "without": [6, 90, 377], "notic": 6, "caution": [6, 377], "product": [6, 73, 216, 262, 356, 357], "22378": 6, "nhwc": [6, 383, 387], "format": [6, 7, 30, 37, 65, 66, 67, 84, 105, 121, 122, 126, 129, 185, 219, 258, 259, 260, 261, 271, 322, 378, 380, 383, 385, 387], "n": [6, 7, 42, 61, 65, 66, 67, 73, 74, 105, 113, 114, 217, 219, 221, 222, 240, 253, 254, 329, 334, 352, 366, 367, 377, 379, 384, 387], "h": [6, 7, 42, 65, 66, 67, 105, 113, 114, 219, 289, 352, 366, 380, 383, 387], "w": [6, 7, 42, 65, 66, 67, 105, 113, 114, 219, 289, 352, 366, 379, 383, 387], "ic": 6, "oc": 6, "pad_h": [6, 219], "pad_w": [6, 219], "implicit": 6, "via": [6, 377, 385, 387, 388], "current": [6, 29, 59, 61, 72, 129, 139, 226, 227, 260, 261, 298, 348, 357, 377, 380, 389], "condit": [6, 288, 375], "met": [6, 288], "dram": [6, 7, 348, 350, 380, 388], "divis": [6, 7, 118, 133, 138, 266, 276, 315, 335, 380], "writer": 6, "carri": [6, 282], "bottleneck": [6, 388], "By": [6, 316, 378, 380], "default": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 379, 380, 387, 389], "inner": 6, "dim": [6, 24, 29, 61, 62, 72, 73, 74, 104, 129, 133, 138, 159, 171, 217, 221, 222, 249, 262, 263, 273, 276, 287, 289, 298, 314, 315, 322, 329, 334, 335, 352, 358, 367, 380, 385, 386, 387], "kernel_h": [6, 219], "constraint": [6, 171, 216, 380], "space": [6, 28, 65, 66, 67, 258, 259, 260, 261, 380], "re": [6, 374, 376, 388], "overwrit": 6, "ani": [6, 113, 114, 247, 375, 380, 388], "either": [6, 7, 72, 216, 349, 377, 380, 388], "row_major": [6, 28, 29, 72, 89, 90, 126, 127, 128, 171, 217, 221, 222, 241, 242, 243, 262, 289, 315, 329, 334, 346, 347, 364, 365, 367, 372, 373, 379, 380], "expect": [6, 67, 105, 114, 219, 358, 375, 378, 383, 385, 388], "next": [6, 238, 377, 380, 387], "recommend": [6, 174, 374, 377, 381, 388, 389], "fragment": 6, "ideal": [6, 380], "face": [6, 380], "determin": [6, 7, 67, 216, 226, 227, 380, 387], "reshard": 6, "alreadi": [6, 67, 226, 227, 245, 387], "anywai": 6, "previou": [6, 88, 385, 388], "due": [6, 271, 379, 380], "v": [6, 30, 114, 357, 387, 388], "dilat": [6, 65, 66, 67, 219, 258, 259, 260, 261, 387], "tensormemorylayout": [6, 219], "own": [6, 380], "heurist": 6, "height_shard": 6, "block_shard": [6, 219], "width_shard": 6, "orient": [6, 72, 380], "major": [6, 52, 105, 112, 114, 115, 117, 124, 139, 240, 291, 306, 362, 380, 388], "column": [6, 379, 380, 384], "bia": [6, 42, 43, 65, 66, 67, 105, 139, 184, 258, 259, 260, 261, 374, 383, 385, 386, 387], "respons": [6, 387], "prepar": [6, 375, 383, 387], "bfloat16": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 383, 384, 385, 386, 387, 389], "unspecifi": 6, "float32": [6, 14, 25, 28, 29, 33, 40, 42, 53, 73, 74, 76, 89, 90, 111, 119, 123, 130, 143, 145, 147, 149, 156, 171, 172, 217, 220, 221, 222, 224, 255, 264, 289, 290, 298, 307, 315, 318, 320, 329, 334, 340, 361, 367, 372, 373, 374, 379, 380, 382, 384, 385, 389], "place": [7, 42, 92, 132, 141, 168, 169, 176, 212, 219, 235, 290, 348, 354, 380], "too": [7, 389], "fit": [7, 287], "conv2d_dram": 7, "happen": 7, "number": [7, 16, 17, 20, 22, 24, 43, 61, 65, 66, 67, 80, 81, 82, 91, 92, 104, 113, 114, 118, 119, 120, 129, 131, 132, 139, 140, 141, 173, 175, 176, 180, 196, 197, 200, 204, 206, 211, 212, 214, 216, 217, 219, 220, 221, 222, 224, 230, 233, 234, 235, 240, 247, 249, 256, 257, 258, 259, 260, 261, 273, 283, 284, 285, 287, 288, 296, 298, 327, 329, 330, 333, 334, 347, 352, 353, 354, 367, 368, 370, 378, 379, 380, 383, 385, 386, 387, 388], "along": [7, 73, 74, 129, 217, 221, 222, 263, 298, 314, 315, 322, 329, 334, 352, 355, 367, 377, 380, 387], "correspond": [7, 24, 87, 88, 273, 357, 388], "calcul": [7, 72, 266, 379], "last": [7, 25, 29, 59, 127, 133, 138, 171, 243, 276, 288, 289, 315, 322, 335, 349, 352, 358, 372, 379, 380], "smaller": [7, 380, 384], "rest": [7, 114], "prefer": [7, 377, 382, 388], "much": [7, 379], "larger": [7, 384], "_ttnn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 380], "multi_devic": [8, 9, 121, 122, 245, 337], "meshdevic": [8, 9, 24, 30, 60, 65, 66, 67, 89, 90, 121, 122, 126, 127, 128, 185, 215, 243, 244, 245, 273, 337, 348, 351, 372, 373, 387], "plan": [8, 9, 121, 122, 248, 388], "deprec": [8, 9, 121, 122, 248], "futur": [8, 9, 121, 122, 248], "arg0": [9, 380], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "tt": [9, 24, 273, 337, 346, 347, 364, 365, 366, 376, 381, 382, 385, 387], "device_id": [9, 60, 75, 87, 88, 125, 215, 245, 270, 298, 337, 348, 349, 350, 382, 383, 384, 385, 386, 387, 389], "python_fully_qualified_nam": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "abs_t": 10, "object": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378], "default_preprocess_golden_function_input": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "_golden_funct": [10, 13, 16, 21, 23, 26, 27, 28, 33, 36, 50, 51, 59, 61, 63, 64, 66, 68, 70, 76, 78, 81, 87, 89, 90, 91, 93, 94, 96, 98, 100, 101, 108, 109, 112, 116, 125, 126, 128, 131, 134, 136, 139, 140, 142, 145, 147, 150, 154, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 171, 173, 175, 180, 181, 182, 184, 186, 187, 189, 191, 194, 196, 197, 201, 202, 205, 207, 211, 213, 216, 218, 225, 230, 231, 233, 234, 236, 239, 243, 244, 247, 249, 250, 251, 253, 256, 264, 268, 269, 270, 271, 277, 278, 285, 286, 287, 288, 289, 294, 302, 303, 305, 307, 308, 310, 312, 315, 316, 317, 320, 323, 325, 333, 336, 338, 340, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 366, 369, 372, 373], "default_postprocess_golden_function_output": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "is_cpp_oper": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "is_experiment": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "element": [10, 12, 14, 25, 29, 31, 33, 36, 46, 51, 53, 61, 65, 66, 67, 68, 73, 74, 76, 85, 93, 94, 96, 98, 100, 101, 106, 109, 111, 116, 123, 129, 133, 134, 136, 137, 138, 139, 142, 145, 147, 151, 154, 163, 164, 165, 166, 167, 177, 181, 186, 187, 189, 191, 194, 202, 213, 225, 236, 239, 240, 247, 254, 255, 258, 259, 260, 261, 262, 264, 266, 271, 276, 277, 278, 281, 282, 287, 290, 294, 302, 303, 305, 307, 308, 310, 316, 320, 322, 323, 325, 335, 338, 340, 342, 352, 361, 363, 365, 380, 384], "wise": [10, 12, 14, 25, 31, 33, 36, 46, 51, 53, 68, 76, 85, 93, 94, 96, 98, 100, 101, 106, 109, 111, 116, 123, 133, 134, 136, 138, 142, 145, 147, 151, 154, 163, 164, 165, 166, 167, 177, 181, 186, 187, 189, 191, 194, 202, 213, 225, 236, 239, 255, 264, 266, 271, 276, 277, 278, 281, 282, 290, 294, 302, 303, 305, 307, 308, 310, 316, 320, 323, 325, 335, 338, 340, 342, 361, 363, 384], "mathrm": [10, 12, 14, 16, 18, 25, 31, 33, 36, 37, 40, 44, 45, 46, 47, 48, 49, 51, 53, 68, 73, 74, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 106, 109, 111, 116, 118, 119, 123, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 145, 147, 151, 152, 154, 156, 162, 163, 164, 165, 166, 167, 172, 173, 175, 176, 177, 179, 181, 186, 187, 189, 191, 194, 196, 197, 200, 201, 202, 204, 205, 206, 207, 211, 212, 213, 225, 233, 234, 235, 236, 238, 239, 246, 254, 255, 257, 264, 271, 276, 277, 278, 281, 282, 283, 290, 294, 296, 302, 303, 305, 307, 308, 310, 316, 320, 323, 325, 327, 331, 333, 335, 338, 340, 342, 361, 363, 370], "_tensor": [10, 12, 14, 16, 18, 25, 31, 33, 36, 37, 44, 45, 46, 47, 48, 49, 51, 53, 68, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 106, 109, 111, 116, 118, 119, 123, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 145, 147, 151, 152, 154, 156, 162, 163, 164, 165, 166, 167, 172, 173, 175, 176, 177, 179, 181, 186, 187, 189, 191, 194, 196, 197, 200, 201, 202, 204, 205, 206, 207, 211, 212, 213, 225, 233, 234, 235, 236, 238, 239, 246, 254, 255, 257, 264, 271, 276, 277, 278, 281, 282, 283, 290, 294, 296, 302, 303, 305, 307, 308, 310, 316, 320, 323, 325, 327, 331, 333, 335, 338, 340, 342, 361, 363, 370], "_i": [10, 12, 14, 16, 31, 33, 36, 37, 40, 44, 45, 46, 47, 48, 49, 51, 53, 68, 73, 74, 76, 80, 85, 91, 93, 94, 96, 98, 100, 101, 106, 109, 111, 116, 123, 130, 131, 133, 134, 136, 137, 138, 140, 142, 145, 147, 151, 152, 154, 156, 163, 164, 165, 166, 167, 172, 175, 177, 181, 186, 187, 189, 191, 194, 200, 201, 202, 204, 205, 206, 207, 211, 213, 225, 233, 234, 236, 238, 239, 254, 255, 264, 271, 276, 277, 278, 281, 282, 290, 294, 296, 302, 303, 305, 307, 308, 310, 316, 320, 323, 325, 333, 335, 338, 340, 342, 361, 363, 370], "verb": [10, 12, 14, 31, 33, 36, 40, 44, 45, 46, 47, 48, 49, 51, 53, 68, 76, 82, 85, 98, 101, 106, 109, 111, 116, 118, 119, 123, 130, 133, 138, 145, 147, 151, 154, 156, 163, 164, 165, 166, 167, 172, 173, 177, 179, 186, 187, 189, 191, 194, 196, 197, 225, 236, 257, 264, 271, 276, 277, 278, 281, 282, 283, 290, 302, 303, 305, 307, 308, 310, 320, 323, 325, 327, 335, 338, 342, 361, 363], "complextensor": [10, 11, 17, 26, 27, 63, 64, 80, 81, 157, 158, 160, 161, 230, 250, 251, 268, 269, 271, 272, 330], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 384, 386, 389], "prealloc": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 68, 73, 74, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 109, 111, 112, 116, 123, 127, 128, 129, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 244, 255, 256, 264, 266, 271, 277, 278, 281, 282, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 320, 322, 323, 324, 325, 327, 330, 331, 332, 333, 338, 340, 341, 342, 352, 361, 363, 368, 369, 370, 373], "command": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 68, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 109, 111, 112, 113, 114, 116, 123, 126, 127, 128, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 244, 247, 249, 255, 256, 264, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 320, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 370, 373, 377, 379, 389], "queue": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 67, 68, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 114, 116, 123, 126, 127, 128, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 219, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 244, 247, 249, 255, 256, 264, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 320, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 370, 373], "id": [10, 12, 14, 16, 17, 18, 19, 25, 29, 31, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 67, 68, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 114, 116, 123, 126, 127, 128, 130, 131, 134, 135, 136, 140, 142, 145, 147, 151, 154, 156, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 177, 181, 186, 187, 189, 191, 194, 196, 197, 200, 202, 204, 206, 211, 213, 215, 219, 220, 224, 225, 229, 230, 233, 234, 236, 237, 239, 240, 244, 245, 247, 249, 255, 256, 264, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 320, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 342, 346, 347, 351, 352, 356, 357, 361, 363, 364, 365, 368, 369, 370, 373, 379, 383, 384, 385, 386, 387, 388], "tile_layout": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 252, 254, 255, 256, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 352, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 380, 382, 384, 385, 386, 387, 389], "unary_backward": [11, 13, 15, 32, 34, 39, 41, 52, 54, 56, 58, 69, 71, 77, 79, 83, 86, 95, 97, 99, 102, 103, 110, 112, 115, 117, 124, 135, 144, 146, 148, 150, 155, 178, 183, 188, 190, 192, 193, 195, 209, 210, 232, 237, 253, 256, 263, 265, 267, 272, 279, 280, 286, 291, 293, 295, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 339, 341, 343, 345, 362], "abs_bw_t": 11, "_golden_function_ab": 11, "backward": [11, 13, 15, 17, 19, 21, 23, 27, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 107, 110, 112, 115, 117, 120, 124, 135, 144, 146, 148, 150, 153, 155, 158, 174, 178, 180, 183, 188, 190, 192, 193, 195, 198, 199, 209, 210, 218, 223, 230, 232, 237, 251, 253, 256, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "given": [11, 13, 15, 17, 19, 21, 23, 27, 29, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 67, 69, 71, 73, 74, 77, 79, 81, 83, 86, 90, 95, 97, 99, 102, 103, 110, 112, 115, 117, 120, 124, 135, 144, 146, 148, 150, 153, 155, 158, 174, 178, 180, 183, 188, 190, 192, 193, 195, 198, 199, 209, 210, 218, 223, 226, 227, 230, 232, 237, 245, 248, 251, 253, 256, 263, 265, 267, 269, 272, 279, 280, 284, 286, 287, 291, 293, 295, 297, 298, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 328, 330, 332, 339, 341, 343, 345, 352, 357, 362, 366, 369, 371, 374, 384, 387], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 27, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 64, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 107, 110, 112, 115, 117, 120, 124, 135, 144, 146, 148, 150, 153, 155, 158, 174, 178, 180, 183, 188, 190, 192, 193, 195, 198, 199, 209, 210, 218, 223, 230, 232, 237, 251, 253, 256, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "gradient": [11, 13, 15, 17, 19, 21, 23, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 67, 69, 71, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 107, 110, 112, 115, 117, 120, 124, 129, 135, 144, 146, 148, 150, 153, 155, 174, 178, 180, 183, 188, 190, 192, 193, 195, 198, 199, 209, 210, 218, 223, 230, 232, 237, 253, 256, 263, 265, 267, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "list": [11, 13, 15, 16, 17, 19, 21, 23, 27, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 61, 62, 64, 69, 71, 72, 77, 79, 81, 83, 86, 87, 89, 91, 95, 97, 99, 102, 103, 110, 112, 115, 117, 120, 122, 124, 130, 131, 135, 140, 144, 146, 148, 150, 153, 155, 158, 172, 173, 174, 175, 178, 180, 183, 184, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 204, 206, 209, 210, 211, 216, 218, 219, 220, 223, 224, 230, 232, 233, 234, 237, 240, 247, 248, 249, 251, 253, 256, 257, 262, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 296, 297, 300, 304, 306, 309, 311, 313, 314, 317, 319, 321, 324, 326, 327, 328, 330, 332, 333, 337, 339, 341, 343, 345, 352, 357, 362, 363, 364, 365, 369, 370, 371, 376, 388], "about": [11, 21, 43, 120, 135, 188, 190, 192, 193, 195, 198, 199, 209, 210, 256, 263, 271, 272, 284, 317, 324, 371, 380, 382, 383, 384, 388], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 32, 34, 35, 38, 39, 41, 43, 52, 54, 56, 58, 62, 69, 71, 77, 79, 81, 86, 88, 95, 97, 99, 102, 103, 107, 110, 112, 115, 117, 120, 124, 135, 144, 146, 148, 150, 153, 155, 174, 178, 180, 183, 188, 190, 192, 193, 195, 198, 199, 209, 210, 218, 223, 230, 232, 237, 256, 263, 265, 267, 272, 279, 280, 284, 286, 291, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 324, 326, 328, 330, 332, 339, 341, 343, 345, 362, 369, 371], "acos_t": 12, "_golden_function_aco": 12, "rand": [12, 14, 25, 29, 31, 33, 36, 40, 42, 46, 50, 51, 62, 68, 70, 73, 74, 76, 87, 93, 98, 101, 109, 116, 123, 133, 136, 138, 142, 145, 147, 154, 163, 164, 165, 166, 167, 171, 181, 182, 186, 187, 189, 191, 194, 202, 203, 213, 217, 221, 222, 225, 236, 239, 241, 242, 246, 257, 262, 263, 264, 276, 277, 278, 286, 287, 289, 305, 307, 308, 310, 312, 320, 323, 325, 329, 334, 335, 336, 338, 342, 352, 359, 360, 361, 367, 383, 384, 385, 387, 389], "acos_bw_t": 13, "invers": [13, 15, 32, 34, 39, 41], "cosin": [13, 15, 69, 71, 108], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 34, 35, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 52, 54, 62, 69, 71, 77, 79, 80, 81, 82, 86, 91, 92, 95, 97, 99, 102, 110, 115, 117, 118, 119, 120, 124, 130, 131, 132, 140, 141, 144, 146, 148, 152, 153, 155, 159, 162, 172, 173, 174, 175, 176, 178, 180, 183, 184, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 209, 210, 211, 212, 214, 216, 218, 219, 220, 223, 224, 230, 232, 233, 234, 235, 238, 246, 254, 256, 257, 265, 267, 272, 279, 280, 283, 284, 291, 296, 297, 300, 304, 306, 311, 313, 319, 321, 326, 327, 328, 330, 331, 332, 333, 339, 343, 362, 368, 369, 370, 371, 389], "acosh_t": 14, "_golden_function_acosh": [14, 15], "acosh_bw_t": 15, "hyperbol": [15, 34, 41, 71, 313, 341], "add_t": 16, "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 62, 80, 81, 82, 91, 92, 118, 119, 120, 130, 131, 132, 140, 141, 152, 153, 159, 162, 172, 173, 174, 175, 176, 180, 184, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 211, 212, 214, 216, 218, 220, 223, 224, 230, 233, 234, 235, 238, 246, 257, 283, 284, 296, 297, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371, 389], "_a": [16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 118, 119, 130, 131, 132, 140, 141, 152, 162, 172, 173, 175, 176, 196, 197, 200, 201, 204, 205, 206, 207, 211, 212, 233, 234, 235, 238, 246, 257, 283, 296, 327, 331, 333, 370], "_b": [16, 18, 37, 44, 45, 47, 48, 49, 80, 82, 91, 92, 118, 119, 130, 131, 132, 140, 141, 152, 162, 172, 173, 175, 176, 196, 197, 200, 201, 204, 205, 206, 207, 211, 212, 233, 234, 235, 238, 246, 257, 283, 296, 327, 331, 333, 370], "datatyp": [16, 28, 30, 42, 59, 65, 66, 67, 73, 74, 87, 88, 89, 90, 91, 126, 127, 128, 130, 131, 137, 139, 140, 171, 172, 173, 175, 184, 196, 197, 200, 204, 206, 211, 216, 220, 224, 233, 234, 243, 244, 258, 259, 260, 261, 289, 296, 315, 327, 333, 349, 350, 370, 372, 373, 382, 384, 387, 388], "str": [16, 30, 35, 81, 84, 91, 107, 130, 131, 140, 172, 173, 175, 184, 185, 196, 197, 200, 204, 206, 211, 216, 220, 224, 226, 227, 233, 234, 296, 301, 327, 333, 370, 387], "int32": [16, 29, 44, 45, 46, 47, 48, 49, 73, 74, 91, 93, 130, 131, 136, 140, 142, 172, 175, 181, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 217, 220, 221, 222, 224, 233, 234, 239, 298, 307, 325, 327, 329, 333, 334, 367], "uint32": [16, 29, 45, 48, 73, 74, 87, 88, 129, 156, 159, 202, 203, 217, 221, 222, 322, 329, 334, 367, 379, 380], "4294967295": 16, "uint16": [16, 29, 44, 47, 49, 93, 127, 129, 156, 233, 239, 243, 322, 333, 352, 372, 380], "65535": [16, 44, 47, 49, 233, 333], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 61, 62, 80, 81, 82, 91, 92, 118, 119, 120, 130, 131, 132, 140, 141, 152, 153, 159, 162, 172, 173, 174, 175, 176, 179, 180, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 211, 212, 214, 216, 218, 220, 223, 224, 230, 233, 234, 235, 238, 246, 257, 283, 284, 296, 297, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 43, 44, 45, 47, 48, 49, 61, 62, 80, 81, 82, 91, 92, 118, 119, 120, 130, 131, 132, 140, 141, 152, 153, 159, 162, 172, 173, 174, 175, 176, 179, 180, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 211, 212, 214, 216, 218, 220, 223, 224, 230, 233, 234, 235, 238, 246, 257, 283, 284, 296, 297, 327, 328, 330, 331, 332, 333, 368, 369, 370, 371], "scalar": [16, 17, 20, 22, 44, 45, 47, 48, 49, 80, 81, 82, 83, 91, 92, 118, 119, 120, 127, 128, 131, 132, 140, 141, 173, 175, 176, 179, 180, 196, 197, 200, 204, 206, 211, 212, 214, 217, 220, 221, 222, 224, 230, 233, 234, 235, 253, 257, 262, 266, 267, 283, 284, 296, 327, 329, 330, 333, 334, 367, 370, 389], "binary_backward": [17, 19, 35, 38, 43, 62, 81, 120, 153, 174, 198, 199, 218, 223, 230, 284, 297, 328, 330, 332, 371], "add_bw_t": 17, "_golden_function_bw": [17, 19, 35, 38, 43, 62, 120, 153, 174, 198, 199, 223, 284, 297, 328, 330, 332, 371], "are_required_output": [17, 19, 35, 62, 81, 230, 297, 330, 332, 369], "input_grad": [17, 19, 35, 62, 81, 107, 230, 297, 330, 332], "other_grad": [17, 19, 35, 62, 81, 230, 297, 330, 332], "bfloat4_b": [17, 19, 20, 22, 25, 38, 43, 62, 81, 126, 153, 174, 179, 180, 198, 199, 214, 218, 223, 230, 297, 328, 330, 332, 351, 368, 371], "addalpha_t": 18, "_golden_function_addalpha": 18, "alpha": [18, 19, 21, 23, 53, 54, 81, 85, 86, 299, 331, 332], "float": [18, 19, 20, 21, 22, 23, 42, 53, 54, 55, 56, 57, 58, 83, 85, 86, 106, 111, 114, 121, 126, 127, 128, 139, 143, 144, 149, 150, 151, 162, 171, 177, 178, 179, 208, 210, 217, 221, 222, 247, 249, 253, 254, 255, 257, 266, 267, 281, 282, 289, 292, 293, 299, 316, 317, 318, 319, 329, 331, 332, 334, 344, 345, 356, 357, 359, 360, 367, 380], "addalpha_bw_t": 19, "addcdiv_t": 20, "_golden_function_addcdiv": 20, "input_tensor_c": [20, 21, 22, 23, 180, 214, 368, 369], "tensor3": [20, 21, 22, 23, 179, 180, 214, 368, 369], "ternary_backward": [21, 23, 180, 369], "addcdiv_bw_t": 21, "addcmul_t": 22, "_golden_function_addcmul": 22, "addcmul_bw_t": 23, "all_gather_t": 24, "across": [24, 104, 137, 273, 379, 380, 384], "cluster_axi": [24, 273], "provid": [24, 29, 42, 111, 129, 171, 184, 216, 217, 221, 222, 226, 227, 262, 263, 273, 289, 315, 329, 334, 337, 340, 347, 352, 367, 375, 377, 378, 379, 380, 381, 385, 386, 387, 388, 389], "meshtensor": [24, 273], "axi": [24, 73, 74, 273, 287, 384], "line": [24, 273], "mesh_devic": [24, 104, 273, 383, 384, 385, 386, 387], "applic": [24, 273, 380, 388], "guid": [24, 273, 376, 377, 381, 388], "http": [24, 273, 376, 377, 388], "com": [24, 273, 376, 377], "blob": [24, 273], "main": [24, 273, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389], "tech_report": [24, 273], "programming_mesh_of_devic": [24, 273], "programming_mesh_of_devices_with_tt": [24, 273], "nn": [24, 226, 227, 273, 376, 381, 382, 385, 387], "md": [24, 273, 375, 377], "num_link": [24, 104, 273], "link": [24, 104, 273], "num_work": [24, 104, 273], "worker": [24, 104, 245, 273, 383, 384, 385, 386, 387], "num_buffers_per_channel": [24, 104, 273], "per": [24, 104, 273, 377, 380, 388], "ring": [24, 104, 273], "full_tensor": [24, 104, 273], "randn": [24, 30, 75, 88, 90, 104, 125, 126, 137, 184, 216, 219, 244, 270, 273, 298, 348, 349, 350, 351, 363, 373, 386], "256": [24, 104, 219, 273, 387], "open_mesh_devic": [24, 104, 273], "meshshap": [24, 104, 273], "ttnn_tensor": [24, 351], "input_dtyp": [24, 258, 259, 260, 261], "mem_config": 24, "mesh_mapp": [24, 30, 104, 126, 273], "shardtensor2dmesh": 24, "mesh_shap": 24, "alt_complex_rotate90_t": 25, "_golden_function_alt_complex_rotate90": 25, "_": [25, 374, 379, 386], "2i": 25, "even": [25, 75, 215, 216], "complex_unari": [26, 63, 157, 160, 161, 250, 268], "angle_t": 26, "complex": [26, 27, 63, 64, 157, 158, 250, 251, 268, 269, 383, 387], "complex_unary_backward": [27, 64, 158, 251, 269], "angle_bw_t": 27, "arange_t": 28, "inclus": [28, 380], "end": [28, 73, 74, 80, 162, 179, 238, 314, 365, 375, 379, 384, 386, 388], "exclus": [28, 247], "consecut": [28, 380], "dram_memory_config": [28, 59, 89, 90, 184, 216, 348, 380, 384], "print": [28, 30, 61, 89, 90, 125, 126, 127, 128, 184, 215, 216, 243, 244, 245, 249, 285, 287, 301, 314, 348, 349, 351, 372, 373, 379, 380, 383, 387, 389], "00000": [28, 382], "argmax_t": 29, "_create_golden_funct": [29, 217, 221, 222, 329, 334, 367], "local": [29, 33, 36, 50, 51, 68, 70, 76, 78, 93, 94, 96, 98, 100, 101, 109, 116, 134, 136, 142, 145, 147, 154, 156, 163, 164, 165, 166, 167, 181, 182, 186, 187, 189, 191, 194, 202, 213, 217, 221, 222, 225, 231, 236, 239, 264, 277, 278, 294, 302, 303, 305, 307, 308, 310, 312, 316, 320, 323, 325, 329, 334, 336, 338, 340, 352, 359, 360, 367, 374, 375, 380, 381, 383, 384, 385, 386, 387, 388], "keepdim": [29, 217, 221, 222, 262, 329, 334, 367], "row_major_layout": [29, 30, 59, 84, 87, 121, 122, 126, 127, 243, 349, 372, 380, 383, 386, 387], "yield": [29, 217, 221, 222, 329, 334, 367, 387], "output_onedim": 29, "output_alldim": 29, "cache_file_nam": 30, "pathlib": [30, 84, 185], "path": [30, 84, 185, 377, 379, 385, 387, 388, 389], "callabl": [30, 226, 227], "serial": 30, "cpptensortomesh": 30, "tensortomesh": [30, 126], "use_device_til": 30, "toggl": [30, 388], "enable_multihost_format": [30, 84, 185], "truncat": [30, 362], "mantissa": 30, "bit": 30, "bfp": [30, 380], "rais": [30, 351], "runtim": [30, 377, 388], "error": [30, 170, 215, 216, 229, 351, 375, 377, 383, 384, 385, 386, 387], "rte": 30, "bfp8": 30, "bfp4": 30, "375": [30, 126], "30469": [30, 126], "714844": [30, 126], "761719": [30, 126], "53125": [30, 126], "652344": [30, 126], "asin_t": 31, "_golden_function_asin": 31, "asin_bw_t": 32, "lambda": [32, 34, 41, 52, 54, 56, 58, 71, 83, 86, 97, 144, 178, 188, 190, 192, 210, 267, 293, 306, 311, 313, 319, 321, 374], "sine": [32, 34, 108, 313], "asinh_t": 33, "register_ttnn_cpp_unary_funct": [33, 36, 50, 51, 68, 70, 76, 78, 93, 94, 96, 98, 100, 101, 109, 116, 134, 136, 142, 145, 147, 154, 156, 163, 164, 165, 166, 167, 181, 182, 186, 187, 189, 191, 194, 202, 213, 225, 231, 236, 239, 264, 277, 278, 294, 302, 303, 305, 307, 308, 310, 312, 316, 320, 323, 325, 336, 338, 340, 359, 360], "asinh_bw_t": 34, "assign_bw_t": 35, "assign": 35, "other_tensor": [35, 81], "round_mod": [35, 80, 81, 266, 267], "atan_t": 36, "atan2_t": 37, "_golden_function_atan2": 37, "arctan": 37, "left": [37, 80, 130, 172, 378], "right": [37, 80, 130, 172], "x": [37, 42, 67, 139, 171, 184, 216, 250, 356, 357, 377, 379, 380, 383, 386], "atan2_bw_t": 38, "atan_bw_t": 39, "_golden_function_atan": 39, "tangenr": 39, "atanh_t": 40, "_golden_function_atanh": 40, "bflaot8_b": 40, "atanh_bw_t": 41, "tangent": [41, 341], "batch_norm_t": 42, "batch": [42, 65, 66, 67, 113, 114, 159, 184, 216, 219, 258, 259, 260, 261, 357, 379, 383, 387], "norm": [42, 171, 289], "over": [42, 65, 66, 67, 105, 137, 139, 171, 217, 221, 222, 263, 289, 315, 329, 334, 356, 357, 367, 377, 388], "see": [42, 139, 171, 289, 375, 376, 377, 378, 379, 383, 384, 385, 386, 387, 388], "spatial": [42, 137, 366, 383], "text": [42, 80, 139, 162, 171, 238, 246, 375], "gamma": [42, 139, 232], "beta": [42, 139, 316, 317], "epsilon": [42, 139, 171, 289], "mu": [42, 139, 171], "sigma": [42, 139, 171, 315], "cdot": [42, 73, 74, 139, 171, 370, 384], "varianc": [42, 139, 171, 380], "respect": [42, 67, 88, 139, 171, 216, 380, 382], "learnabl": [42, 139, 171], "scale": [42, 106, 139, 171, 217, 221, 222, 299, 316, 329, 334, 356, 357, 367, 387], "shift": [42, 139, 171], "small": [42, 139, 171, 245, 383], "ep": [42, 208, 210], "1e": [42, 139, 162, 171, 289], "05": [42, 384], "momentum": 42, "running_mean": 42, "train": [42, 385, 387, 388], "running_var": 42, "evalu": 42, "compute_kernel_config": [42, 59, 105, 108, 139, 171, 184, 216, 217, 221, 222, 289, 315, 329, 334, 356, 357, 367], "devicecomputekernelconfig": [42, 65, 66, 67, 105, 108, 139, 171, 184, 216, 258, 259, 260, 261, 289, 315, 356, 357], "These": [42, 216, 375, 377, 379, 381, 384, 385, 388, 389], "interleav": [42, 61, 105, 171, 289, 298, 315, 348, 350, 358, 380], "bias_gelu_bw_t": 43, "bias_gelu": 43, "approxim": [43, 94, 96, 100, 107, 134, 135, 294, 302], "bitwise_and_t": 44, "_golden_function_bitwise_and": 44, "integ": [44, 45, 47, 48, 49, 247, 357], "bitwise_left_shift_t": 45, "_golden_function_bitwise_left_shift": 45, "ha": [45, 48, 67, 216, 226, 227, 260, 261, 337, 358, 374, 375, 377, 379, 380, 381, 389], "shift_bit": [45, 48], "31": [45, 48, 382, 384], "bitwise_not_t": 46, "_golden_function_bitwise_not": 46, "2147483647": [46, 130], "bitwise_or_t": 47, "_golden_function_bitwise_or": 47, "bitwise_right_shift_t": 48, "_golden_function_bitwise_right_shift": 48, "bitwise_xor_t": 49, "_golden_function_bitwise_xor": 49, "cbrt_t": 50, "ceil_t": 51, "ceil_bw_t": 52, "celu_t": 53, "_golden_function_celu": 53, "celu_bw_t": 54, "formula": [54, 86, 144, 178, 179, 210, 317, 319], "clamp_t": 55, "_golden_function_clamp": 55, "min_tensor": [55, 57], "max_tensor": [55, 57], "clamp_bw_t": 56, "clip_t": 57, "_golden_function_clip": 57, "clip_bw_t": 58, "data_mov": [59, 61, 113, 114, 129, 159, 240, 247, 249, 285, 287, 288, 298, 314, 322, 346, 347, 364, 365], "clone_t": 59, "doe": [59, 126, 351, 375, 379, 388], "alter": 59, "unpad": [59, 122, 349, 365], "two": [59, 61, 133, 138, 216, 276, 288, 315, 335, 349, 358, 374, 377, 380, 381, 382, 385, 386, 387, 388], "ensur": [59, 322, 337, 375, 377, 380, 383, 387, 388], "adjust": [59, 316, 388], "param": [59, 125, 247, 315, 348], "target": [59, 121, 122, 262, 375, 387], "l1_memory_config": [59, 348, 374, 380, 386, 389], "remov": [60, 351, 365], "success": [60, 377, 383], "concat_t": 61, "concaten": [61, 62, 355, 358], "group": [61, 65, 66, 67, 139, 258, 259, 260, 261, 380, 383, 387], "split": [61, 133, 138, 276, 335, 358, 380], "partit": 61, "independ": 61, "altern": [61, 216, 384, 385, 389], "recombin": 61, "dure": [61, 126, 162, 351, 380, 388], "residu": 61, "concat_bw_t": 62, "30": [62, 89, 129, 298, 382, 384, 387], "conj_t": 63, "conjug": 63, "conj_bw_t": 64, "conv1d_t": 65, "1d": [65, 216, 240, 257, 385], "signal": [65, 66, 105, 137], "compos": [65, 66, 67, 105, 137, 351, 385, 387], "sever": [65, 66, 67, 105, 137, 386, 387], "plane": [65, 66, 67, 105, 137], "2d": [65, 66, 67, 129, 137, 216, 366, 380, 383, 387], "input_length": 65, "weight_tensor": [65, 66, 67, 105, 260, 261, 383, 387], "out_channel": [65, 66, 67, 258, 259, 260, 261, 383, 387], "in_channel": [65, 66, 67, 258, 259, 260, 261, 383, 387], "kernel_height": [65, 66, 260, 261], "kernel_width": [65, 66, 260, 261], "bias_tensor": [65, 66, 67, 105, 383, 387], "batch_siz": [65, 66, 67, 88, 137, 219, 258, 259, 260, 261, 289, 355, 358, 374, 383, 385, 386, 387], "length": [65, 257, 356, 357], "kernel_s": [65, 66, 67, 219, 258, 259, 260, 261, 383, 387], "convolv": [65, 66, 67, 219, 258, 259, 260, 261], "cross": [65, 66, 67, 258, 259, 260, 261], "correl": [65, 66, 67, 258, 259, 260, 261, 375, 388], "side": [65, 66, 67, 258, 259, 260, 261, 379], "pad_length": 65, "pad_left": [65, 66, 67, 258, 259, 260, 261], "pad_right": [65, 66, 67, 258, 259, 260, 261], "connect": [65, 66, 67, 258, 259, 260, 261, 385, 387, 388], "conv_config": [65, 66, 67, 258, 259, 260, 261, 383, 387], "compute_config": [65, 66, 67, 258, 259, 260, 261], "return_output_dim": [65, 66, 67], "return_weights_and_bia": [65, 66, 67], "bias": [65, 374, 385, 386, 387], "conv2d_t": 66, "inform": [66, 129, 271, 377, 388], "tech": 66, "input_height": [66, 67, 258, 259, 260, 261, 383, 387], "input_width": [66, 67, 258, 259, 260, 261, 383, 387], "pad_height": [66, 67, 258, 259, 260, 261], "pad_width": [66, 67, 258, 259, 260, 261], "pad_top": [66, 67, 258, 259, 260, 261], "pad_bottom": [66, 67, 258, 259, 260, 261], "conv_transpose2d_t": 67, "transpos": [67, 108, 184, 216, 249, 358, 380, 385, 387], "seen": [67, 72], "fraction": 67, "deconvolut": 67, "o": [67, 377, 379, 385, 386, 387], "g": [67, 216, 377, 379, 380, 385, 387, 388], "k_h": 67, "k_w": 67, "equat": 67, "h_out": 67, "h_in": 67, "output_pad": 67, "w_out": 67, "w_in": 67, "mirror_kernel": 67, "mirror": 67, "intern": [67, 139, 376], "been": [67, 226, 227, 298, 337, 375, 377, 388], "cos_t": 68, "cos_bw_t": 69, "_golden_function_co": 69, "cosh_t": 70, "cosh_bw_t": 71, "coregrid": [72, 139, 184, 216, 386], "corerangeset": [72, 352, 364], "strategi": [72, 216, 379, 380, 387], "shardstrategi": 72, "shardorient": 72, "use_height_and_width_as_shard_shap": 72, "travers": 72, "math": [72, 379], "320": 72, "cumprod_t": 73, "cumul": [73, 74], "_1": [73, 74], "time": [73, 162, 226, 285, 298, 375, 379, 386, 388, 389], "_2": [73, 74], "desir": [73, 74, 90, 113, 114, 121, 122, 126, 349, 350, 351], "cast": [73, 74], "reverse_ord": [73, 74], "accumul": [73, 74], "begin": [73, 74, 80, 162, 238, 379, 384], "tensor_input": [73, 74], "tensor_output": [73, 74], "With": [73, 74, 381], "preallocated_output": [73, 74], "cumsum_t": 74, "pycapsul": [75, 125, 270, 348], "resourc": [75, 388], "explicitli": 75, "whose": [75, 90], "forc": 75, "deg2rad_t": 76, "deg2rad_bw_t": 77, "_golden_function_deg2rad": 77, "degre": [77, 265], "radian": [77, 265], "digamma_t": 78, "digamma_bw_t": 79, "_golden_function_digamma": 79, "div_t": 80, "_golden_function_div": 80, "_mode": 80, "accurate_mod": 80, "non": [80, 216, 219, 240, 256, 271, 292], "div_bw_t": 81, "pcc": [81, 153, 174, 267, 375, 378, 388], "degrad": [81, 153, 174, 267, 383, 384, 385, 386, 387], "div_no_nan_t": 82, "_golden_function_div_no_nan": 82, "div_no_nan_bw_t": 83, "denomin": [83, 266], "dump": [84, 226, 388, 389], "file_nam": [84, 185, 389], "save": 84, "bin": [84, 185, 377], "elu_t": 85, "_golden_function_elu": 85, "elu_bw_t": 86, "embedding_t": 87, "retriev": 87, "word": 87, "padding_idx": 87, "token": [87, 169, 357], "embeddings_typ": 87, "embeddingstyp": 87, "106445": 87, "988281": 87, "59375": [87, 384], "212891": 87, "964844": 87, "199219": 87, "996094": 87, "78362e": 87, "38": [87, 380, 382, 386], "89785e": 87, "39": [87, 386], "04479e": 87, "25815e": 87, "71833e": 87, "59995e": 87, "60398e": 87, "83671e": 87, "22242e": 87, "88263e": 87, "35917e": 87, "49994e": 87, "embedding_backward": 88, "embedding_bw_t": 88, "extract": [88, 129, 387], "vocabulari": 88, "output_gradient_tensor": 88, "seq_len": [88, 108], "embedding_dim": 88, "num_embed": 88, "1024": [88, 387], "4096": 88, "3200": 88, "input_shap": [88, 219], "input_index": 88, "randint": [88, 298], "weights_shap": 88, "weights_ttnn": 88, "grad_shap": 88, "grad_data": 88, "empty_t": 89, "uniniti": [89, 90], "bfloat_8": 89, "21": [89, 387], "67": 89, "empty_like_t": 90, "87": [90, 385, 387], "45": [90, 338, 339], "22": [90, 377, 383, 384, 385, 386, 387], "60": [90, 129], "75": [90, 125], "25": [90, 349, 379, 387], "eq_t": 91, "eq__t": 92, "_golden_function_eq_": 92, "input_a": [92, 132, 141, 159, 176, 212, 217, 221, 222, 235, 329, 334, 367], "input_b": [92, 132, 141, 159, 176, 212, 235], "eqz_t": 93, "_tensor_i": [93, 136, 142, 181, 202, 213, 239], "erf_t": 94, "fast_and_approximate_mod": [94, 96, 100, 134, 294, 302], "fast": [94, 96, 100, 134, 294, 302], "erf_bw_t": 95, "_golden_function_erf": 95, "erfc_t": 96, "erfc_bw_t": 97, "erfinv_t": 98, "erfinv_bw_t": 99, "_golden_function_erfinv": 99, "exp_t": 100, "exp2_t": 101, "exp2_bw_t": 102, "_golden_function_exp2": 102, "exp_bw_t": 103, "_golden_function_exp": 103, "exponenti": 103, "ccl_experiment": 104, "all_reduce_t": 104, "shardtensortomesh": [104, 273], "conv3d_t": 105, "3d": 105, "d": [105, 377], "kd": 105, "kh": [105, 383], "kw": [105, 383], "c_in": 105, "c_out": 105, "conv3dconfig": 105, "dropout_t": 106, "rng": 106, "probabl": 106, "averag": [106, 137, 379], "total_elem": 106, "124": 106, "prob": 106, "gelu_bw_t": [107, 135], "_golden_function_gelu": [107, 135], "algorithm": [107, 366], "rotary_embedding_t": 108, "rotari": 108, "cos_cach": 108, "sin_cach": 108, "token_idx": 108, "assum": [108, 122, 337, 366], "head_dim": 108, "cod_cach": 108, "token_index": 108, "expm1_t": 109, "expm1_bw_t": 110, "_golden_function_expm1": 110, "fill_t": 111, "_golden_function_fil": 111, "fill_valu": [111, 127, 128, 380, 382, 384], "wormhole_b0": 111, "fill_bw_t": 112, "fill_ones_rm_t": 113, "val_hi": [113, 114], "val_lo": [113, 114], "count": [113, 114, 171, 379], "ye": [113, 114], "hone": [113, 114], "high": [113, 114, 377, 380, 382, 384, 388, 389], "region": [113, 114, 245], "wone": [113, 114], "fill_rm_t": 114, "nchw": [114, 387], "hw": 114, "hfill": 114, "wfill": 114, "hi": 114, "lo": 114, "low": 114, "fill_zero_bw_t": 115, "_golden_function_fill_zero": 115, "floor_t": 116, "floor_bw_t": 117, "_golden_function_floor": 117, "floor_div_t": 118, "_golden_function_floor_div": 118, "fmod_t": 119, "_golden_function_fmod": 119, "fmod_bw_t": 120, "padded_shap": [121, 248], "pad_valu": [121, 126, 249, 288, 314, 347], "target_layout": [121, 122], "target_mem_config": [121, 122], "padded_tensor": 121, "output_mem_config": [121, 122], "unpadded_tensor": 122, "frac_t": 123, "_golden_function_frac": [123, 124], "frac_bw_t": 124, "tensor_on_devic": [125, 348], "tensor_on_host": [125, 348], "365234": 125, "130859": 125, "itself": 126, "twice": [126, 379], "purpos": [126, 375, 378, 380], "second": [126, 133, 138, 184, 216, 247, 257, 276, 288, 335, 379, 386, 387, 389], "now": [126, 322, 351, 366, 380, 382, 386, 388], "mapper": 126, "cq_id": [126, 337, 351], "full_t": 127, "_golden_function_ful": 127, "filled_tensor": [127, 128], "full_like_t": 128, "templat": [128, 244, 373, 379], "gather_t": 129, "except": [129, 216, 315, 386], "exce": 129, "do": [129, 375, 388], "sparse_grad": 129, "spars": 129, "20": [129, 225, 247, 298, 316, 317, 377, 379, 387, 388], "40": [129, 219], "50": 129, "70": 129, "80": [129, 174, 377, 387], "index_tensor": 129, "input_tensor_ttnn": [129, 322], "index_tensor_ttnn": 129, "gathered_tensor": 129, "gcd_t": 130, "_golden_function_gcd": 130, "greatest": 130, "common": [130, 172, 375, 387], "2147483648": 130, "tensorint32default": [130, 172], "ge_t": 131, "ge__t": 132, "_golden_function_ge_": 132, "geglu_t": 133, "_golden_function_geglu": 133, "part": [133, 138, 276, 335, 375, 379, 386], "gelu_t": 134, "uint8": [135, 156, 295, 314], "gez_t": 136, "global_avg_pool2d_t": 137, "golden_global_avg_pool2d": 137, "adapt": 137, "entir": [137, 337, 388], "typic": [137, 171, 380, 387], "glu_t": 138, "_golden_function_glu": 138, "group_norm_t": 139, "_postprocess_golden_function_output": [139, 247], "num_group": 139, "input_mask": 139, "mask": [139, 353, 354, 357, 383, 384, 385, 386, 387, 388], "look": [139, 216, 352, 375, 376, 379, 380, 388], "inplac": [139, 201, 203, 205, 207], "num_out_block": 139, "negative_mask": 139, "cb": [139, 379], "overlap": 139, "fact": 139, "rm": [139, 289, 377], "gt_t": 140, "gt__t": 141, "_golden_function_gt_": 141, "gtz_t": 142, "hardshrink_t": 143, "_golden_function_hardshrink": 143, "lambd": [143, 144, 318, 319], "hardshrink_bw_t": 144, "hardsigmoid_t": 145, "hardsigmoid_bw_t": 146, "_golden_function_hardsigmoid": 146, "hardswish_t": 147, "hardswish_bw_t": 148, "_golden_function_hardswish": 148, "hardtanh_t": 149, "_golden_function_hardtanh": 149, "min_val": 149, "max_val": 149, "hardtanh_bw_t": 150, "heaviside_t": 151, "_golden_function_heavisid": 151, "hypot_t": 152, "_golden_function_hypot": 152, "hypot_bw_t": 153, "i0_t": 154, "i0_bw_t": 155, "_golden_function_i0": 155, "identity_t": 156, "sfpu": 156, "shouldn": 156, "instead": [156, 282, 386], "sinc": 156, "lower": [156, 247, 377], "float16": 156, "imag_t": 157, "imag_bw_t": 158, "imaginari": 158, "indexed_fill_t": 159, "replac": [159, 344], "denot": 159, "batch_id": 159, "is_imag_t": 160, "is_real_t": 161, "isclose_t": 162, "_golden_function_isclos": 162, "leq": 162, "atol": 162, "rtol": 162, "otherwis": [162, 262, 337, 352, 386, 389], "rel": 162, "toler": 162, "05f": 162, "absolut": [162, 170], "08f": 162, "equal_nan": 162, "nan": 162, "treat": [162, 216], "isfinite_t": 163, "isinf_t": 164, "isnan_t": 165, "isneginf_t": 166, "isposinf_t": 167, "fill_cache_for_user__t": 168, "popul": [168, 226, 379], "batch_index": 168, "update_cache_for_token__t": 169, "update_index": 169, "batch_offset": 169, "l1_loss_t": 170, "_golden_function_l1_loss": 170, "input_refer": [170, 229], "input_predict": [170, 229], "layer_norm_t": 171, "layer": [171, 289, 379, 383, 385, 387], "program_config": [171, 184, 216, 289, 353, 354, 356, 357], "programconfig": [171, 289], "pre_all_gath": 171, "bf16": 171, "unshard": [171, 289, 315, 380], "cannot": [171, 289], "tile_height": 171, "tile_width": [171, 289, 315], "stick": 171, "align": [171, 216, 315, 377, 379], "lcm_t": 172, "_golden_function_lcm": 172, "least": [172, 216, 379], "32767": 172, "32768": 172, "ldexp_t": 173, "ldexp_bw_t": 174, "outsid": 174, "le_t": 175, "le__t": 176, "_golden_function_le_": 176, "leaky_relu_t": 177, "_golden_function_leaky_relu": 177, "negative_slop": [177, 178], "slope": 177, "leaki": 177, "leaky_relu_bw_t": 178, "01": [178, 388], "lerp_t": 179, "_golden_function_lerp": 179, "point": [179, 316, 379, 380], "interpol": 179, "lerp_bw_t": 180, "lez_t": 181, "lgamma_t": 182, "lgamma_bw_t": 183, "_golden_function_lgamma": 183, "linear_t": 184, "behaviour": [184, 216], "transpose_a": [184, 216], "transpose_b": [184, 216], "matmulprogramconfig": [184, 216], "output_til": [184, 216], "128": [184, 216, 383, 384, 385, 386, 387, 389], "log_t": 186, "log10_t": 187, "whb0": [187, 191, 284], "log10_bw_t": 188, "log1p_t": 189, "1e7": 189, "log1p_bw_t": 190, "log2_t": 191, "log2_bw_t": 192, "log_bw_t": 193, "_golden_function_log": 193, "logarithm": [193, 232], "log_sigmoid_t": 194, "log_sigmoid_bw_t": 195, "_golden_function_log_sigmoid": 195, "logaddexp_t": 196, "logaddexp2_t": 197, "logaddexp2_bw_t": 198, "logaddexp_bw_t": 199, "logical_and_t": 200, "_golden_function_logical_and": 200, "AND": [200, 201], "use_legaci": 200, "logical_and__t": 201, "logical_not_t": 202, "logical_not__t": 203, "_golden_function_logical_not_": 203, "logical_or_t": 204, "_golden_function_logical_or": 204, "OR": [204, 205, 288], "logical_or__t": 205, "logical_xor_t": 206, "_golden_function_logical_xor": 206, "land": [206, 207], "lnot": [206, 207], "lor": [206, 207], "logical_xor__t": 207, "xor": 207, "logit_t": 208, "_golden_function_logit": [208, 209], "logit_bw_t": 209, "logiteps_bw_t": 210, "logitep": 210, "lt_t": 211, "lt__t": 212, "_golden_function_lt_": 212, "ltz_t": 213, "mac_t": 214, "_golden_function_mac": 214, "context": [215, 274, 275], "exit": 215, "occur": 215, "matmul_t": 216, "dimension": [216, 232, 380], "dot": [216, 315, 356, 357], "although": 216, "combin": [216, 385], "work": [216, 314, 374, 375, 377, 389], "most": [216, 380, 384, 386, 387], "variou": [216, 384], "appropri": [216, 375, 377, 387], "abov": [216, 377, 380], "criteria": 216, "messag": [216, 379, 387, 388], "unexpect": 216, "obviou": 216, "scenario": [216, 380], "relat": 216, "swap": 216, "j": [216, 315], "implicitli": 216, "extend": 216, "patch": 216, "leverag": 216, "accord": [216, 249, 285, 298, 377, 388], "n_size": 216, "m_size": 216, "k_size": 216, "p": [216, 380, 388], "though": 216, "chosen": [216, 379], "carefulli": 216, "fix": [216, 383, 388], "problem": 216, "max_t": 217, "computekernelconfig": [217, 221, 222, 329, 334, 367], "factor": [217, 221, 222, 329, 334, 367], "bessel": [217, 221, 222, 329, 334, 367], "max_bw_t": 218, "max_pool2d_t": 219, "golden_maxpool2d": 219, "window": [219, 383, 387], "nhw": 219, "scheme": [219, 258, 259, 260, 261], "input_h": [219, 387], "input_w": [219, 387], "ceil_mod": [219, 387], "applied_shard_schem": 219, "createdevic": 219, "l1_small_siz": [219, 245, 383, 387], "8192": [219, 352, 383, 387], "kernel_w": 219, "stride_h": 219, "stride_w": 219, "dilation_h": 219, "dilation_w": 219, "nchw_shape": 219, "in_n": 219, "in_c": 219, "in_h": 219, "in_w": 219, "input_perm": 219, "input_reshap": 219, "tt_input": 219, "tt_input_dev": 219, "tt_output": 219, "in_place_halo": 219, "maximum_t": 220, "_golden_function_maximum": 220, "tensorsupport": 220, "16777216": 220, "mean_t": 221, "min_t": 222, "min_bw_t": 223, "minimum_t": 224, "_golden_function_minimum": 224, "mish_t": 225, "inf": [225, 231], "initialize_model": [226, 227, 374], "model_nam": [226, 227, 374], "convert_to_ttnn": [226, 227, 374], "custom_preprocessor": [226, 227, 374], "dict": [226, 227, 387], "parameterdict": [226, 227], "prefix": [226, 227], "run_model": 226, "reader_patterns_cach": 226, "disabl": [226, 227, 383, 384, 385, 386, 387, 388, 389], "git": [226, 227, 377], "doesn": [226, 227], "invalid": [226, 227], "preprocessor": [226, 227], "put": [226, 227, 374, 382, 383, 384, 385, 386, 387], "submodul": [226, 227, 377, 385, 387], "appear": [226, 227, 377], "ttnn_module_arg": 226, "tmp": [226, 388], "model_graph": 226, "svg": [226, 389], "avoid": [226, 316, 379, 380, 383, 384, 388], "recomput": 226, "moreh_sum_t": 228, "mse_loss_t": 229, "_golden_function_mse_loss": 229, "mul_bw_t": 230, "multigammaln_t": 231, "multigammaln_bw_t": 232, "_golden_function_mvlgamma": 232, "multivari": 232, "mvlgamma": 232, "5f": 232, "multiply_t": 233, "ne_t": 234, "ne__t": 235, "_golden_function_ne_": 235, "neg_t": 236, "neg_bw_t": 237, "_golden_function_neg": 237, "nextafter_t": 238, "_golden_function_nextaft": 238, "_float": 238, "neq": 238, "nez_t": 239, "nonzero_t": 240, "well": [240, 377, 378, 384], "normalize_global_t": 241, "_golden_function_normalize_glob": 241, "normalize_hw_t": 242, "_golden_function_normalize_hw": 242, "ones_t": 243, "ones_like_t": 244, "trace_region_s": 245, "dispatch_core_config": 245, "dispatchcoreconfig": 245, "0x7f74ee960230": 245, "worker_l1_s": 245, "default_l1_small_s": 245, "default_trace_region_s": 245, "allocat": 245, "dispatch_core_typ": 245, "dispatchcoretyp": 245, "dispatch": [245, 379], "0x7fbac5bfc1b0": 245, "outer_t": 246, "_golden_function_out": 246, "otim": 246, "pad_t": 247, "_preprocess_golden_function_input": 247, "locat": [247, 376, 379, 381, 388, 389], "mutual": 247, "output_tensor_shap": [247, 347], "input_tensor_start": 247, "union": 247, "use_multicor": [247, 346, 347, 364, 365], "pad_input": 247, "assert": [247, 386, 389], "unpadded_shap": 248, "annot": [248, 375], "fixeds": 248, "permute_t": 249, "nullopt": [249, 352, 387], "tthe": 249, "broken": 249, "random": [249, 383, 385, 387], "garbag": 249, "polar_t": 250, "cartesian": 250, "theta": 250, "polar_bw_t": 251, "polygamma_t": 252, "_golden_function_polygamma": 252, "decim": [252, 290], "k": [252, 315, 352, 356, 357, 387], "polygamma_bw_t": 253, "polyval_t": 254, "_golden_function_polyv": 254, "coeffici": [254, 375], "coeff": 254, "sum_": [254, 315], "polynomi": 254, "pow_t": 255, "_golden_function_pow": 255, "expon": [255, 256, 292, 293, 380], "pow_bw_t": 256, "power": [256, 363, 388], "prelu_t": 257, "_golden_function_prelu": 257, "arrai": [257, 384], "suitabl": [258, 259, 260, 261], "invoc": [258, 259, 260, 261], "exact": [258, 259, 260, 261, 380], "input_memory_config": [258, 259, 260, 261], "input_layout": [258, 259, 260, 261], "output_dtyp": [258, 259, 260, 261], "convtranspose2d": [259, 260], "conv_tranpose2d": 260, "weights_format": [260, 261], "iohw": 260, "has_bia": [260, 261], "term": [260, 261, 378], "oihw": 261, "prod_t": 262, "everi": [262, 375, 379, 384, 386, 388, 389], "squeez": [262, 351], "output_all_dim": 262, "prod_bw_t": 263, "particular": [263, 374, 377, 389], "taken": 263, "all_dims_output": 263, "rad2deg_t": 264, "rad2deg_bw_t": 265, "_golden_function_rad2deg": 265, "rdiv_t": 266, "_golden_function_rdiv": 266, "actual": [266, 380, 385, 387], "numer": [266, 316, 376, 380], "rounding_mod": 266, "rdiv_bw_t": 267, "real_t": 268, "real_bw_t": 269, "new_tensor": 270, "my_memory_config": 270, "reciprocal_t": 271, "inaccur": [271, 380], "characterist": [271, 388], "fp": 271, "reciprocal_bw_t": 272, "_golden_function_reciproc": 272, "reduce_scatter_t": 273, "reduce0scatt": 273, "being": [274, 275, 379, 380], "reglu_t": 276, "_golden_function_reglu": 276, "relu_t": 277, "relu6_t": 278, "relu6_bw_t": 279, "_golden_function_relu6": 279, "relu_bw_t": 280, "_golden_function_relu": 280, "relu_max_t": 281, "_golden_function_relu_max": 281, "upper_limit": 281, "cap": 281, "relu_min_t": 282, "_golden_function_relu_min": 282, "lower_limit": 282, "remainder_t": 283, "_golden_function_remaind": 283, "modulu": 283, "remainder_bw_t": 284, "repeat_t": 285, "repetit": [285, 287], "repetition_vector": 285, "smallvector": 285, "repeat_bw_t": 286, "repeat_interleave_t": 287, "he": 287, "expand": [287, 380, 384], "torch_input_tensor": [287, 389], "torch_result": 287, "reshape_t": 288, "cost": 288, "view": [288, 379, 385, 387, 388, 389], "new_shap": 288, "kwtype": 288, "rms_norm_t": 289, "root": [289, 295, 324, 353, 354, 385, 387, 388], "round_t": 290, "_golden_function_round": [290, 291], "No": [290, 383, 385], "round_bw_t": 291, "rpow_t": 292, "_golden_function_rpow": 292, "upto": 292, "28": [292, 385], "posit": [292, 357], "rpow_bw_t": 293, "rsqrt_t": 294, "rsqrt_bw_t": 295, "_golden_function_rsqrt": 295, "rsub_t": 296, "_golden_function_rsub": 296, "rsub_bw_t": 297, "subract": 297, "revers": 297, "scatter_t": 298, "onto": 298, "src": 298, "destin": 298, "amax": 298, "amin": 298, "info": [298, 322, 382, 383, 384, 385, 386, 387, 388], "input_torch": 298, "index_torch": 298, "int64": 298, "source_torch": 298, "input_ttnn": 298, "index_ttnn": 298, "source_ttnn": 298, "selu_t": 299, "_golden_function_selu": [299, 300], "0507": 299, "67326": 299, "selu_bw_t": 300, "modifi": [301, 316], "short": [301, 389], "sigmoid_t": 302, "vector_mod": 302, "better": [302, 340, 388], "rc": [302, 377], "sigmoid_accurate_t": 303, "sigmoid_bw_t": 304, "_golden_function_sigmoid": 304, "sign_t": 305, "sign_bw_t": 306, "signbit_t": 307, "silu_t": 308, "silu_bw_t": 309, "_golden_function_silu": 309, "sin_t": 310, "sin_bw_t": 311, "sinh_t": 312, "sinh_bw_t": 313, "slice_t": 314, "slice_start": 314, "input_tensor_shap": 314, "slice_end": 314, "slice_step": 314, "unmodifi": 314, "undefin": 314, "16": [314, 380, 384, 386, 387], "softmax_t": 315, "z_i": 315, "z_": 315, "m": [315, 377, 388], "softplus_t": 316, "steep": 316, "higher": [316, 379, 380], "steeper": 316, "approach": [316, 374, 378, 389], "hard": 316, "stabil": [316, 378], "veri": [316, 379], "softplus_bw_t": 317, "softshrink_t": 318, "_golden_function_softshrink": 318, "softshrink_bw_t": 319, "softsign_t": 320, "softsign_bw_t": 321, "sort_t": 322, "ascend": 322, "descend": 322, "stabl": [322, 382], "preserv": 322, "sorted_tensor": 322, "sorted_tensor_desc": 322, "indices_desc": 322, "input_tensor_tnn": 322, "input_tensor_2d": 322, "input_tensor_2d_ttnn": 322, "sorted_tensor_dim": 322, "indices_dim": 322, "sqrt_t": 323, "sqrt_bw_t": 324, "_golden_function_sqrt": 324, "square_t": 325, "square_bw_t": 326, "_golden_function_squar": 326, "squared_difference_t": 327, "_golden_function_squared_differ": 327, "squared_difference_bw_t": 328, "std_t": 329, "sub_bw_t": 330, "subalpha_t": 331, "_golden_function_subalpha": 331, "subalpha_bw_t": 332, "subtract_t": 333, "sum_t": 334, "swiglu_t": 335, "_golden_function_swiglu": 335, "swish_t": 336, "queueid": 337, "sub_device_id": 337, "subdeviceid": 337, "synchron": [337, 388, 389], "wait": [337, 379], "complet": [337, 381, 382, 383, 384, 385, 386, 387, 388], "associ": [337, 388], "sub": [337, 364, 380], "ran": [337, 379, 386], "chip": [337, 383, 384, 385, 386, 387, 388], "set_sub_device_stall_group": 337, "queu": 337, "tan_t": 338, "tan_bw_t": 339, "_golden_function_tan": 339, "tanh_t": 340, "tanh_bw_t": 341, "_golden_function_tanh": 341, "tanhshrink_t": 342, "_golden_function_tanhshrink": [342, 343], "tanhshrink_bw_t": 343, "threshold_t": 344, "_golden_function_threshold": [344, 345], "threshold_bw_t": 345, "tilize_t": 346, "_nop_golden_funct": 346, "acceler": [346, 347, 364, 365, 377, 385], "tilize_with_val_padding_t": 347, "800781": 348, "455078": 348, "585938": 348, "to_layout_t": 349, "organ": [349, 375, 380], "becom": [349, 388], "42188": 349, "398438": 349, "to_memory_config_t": 350, "torch_rank": [351, 389], "Will": 351, "reach": 351, "mesh_compos": 351, "cppmeshtotensor": 351, "torch_tensor": [351, 384], "3008": 351, "8438": [351, 384], "3242": 351, "9023": 351, "5820": 351, "5312": 351, "topk_t": 352, "_create_golden_function_topk": 352, "largest": [352, 380], "smallest": 352, "sure": [352, 377, 389], "top": 352, "sub_core_grid": [352, 364], "indices_tensor": 352, "bfloat8": 352, "output_value_tensor": 352, "output_index_tensor": 352, "4d": 352, "65536": 352, "topk_valu": 352, "topk_indic": 352, "attention_softmax_t": 353, "head_siz": [353, 354, 355, 358, 386], "attention_mask": [353, 354, 386], "softmaxprogramconfig": [353, 354], "softmaxdefaultprogramconfig": [353, 354], "causal_mask": [353, 354], "causal": [353, 354, 356], "attention_softmax__t": 354, "concatenate_heads_t": 355, "num_head": [355, 358, 386], "sequence_s": [355, 358, 374, 386], "scaled_dot_product_attention_t": 356, "mimick": 356, "flashattent": 356, "accept": [356, 357, 375, 378, 387], "sdpaprogramconfig": [356, 357], "q": [356, 357], "parallel": [356, 357, 379, 384, 388], "nqh": 356, "input_tensor_q": [356, 357], "dh": [356, 357], "input_tensor_k": [356, 357], "nkv": [356, 357], "input_tensor_v": [356, 357], "attn_mask": [356, 357], "impli": 356, "is_caus": [356, 357], "scaled_dot_product_attention_decode_t": 357, "decod": 357, "mqa": 357, "sdpamulticoreprogramconfig": 357, "nh": 357, "cur_po": 357, "cur_pos_tensor": 357, "pnh": 357, "skip": 357, "split_query_key_value_and_split_heads_t": 358, "hidden_s": [358, 374, 386], "Then": [358, 374, 377, 388], "them": [358, 377, 379, 382, 384, 385], "readi": [358, 375], "score": 358, "kv_input_tensor": 358, "q1": 358, "k1": 358, "v1": [358, 377], "qn": 358, "kn": 358, "vn": 358, "cat": [358, 386], "num_kv_head": 358, "contigu": [358, 380, 387], "transpose_kei": 358, "num": 358, "tril_t": 359, "diagon": [359, 360], "triu_t": 360, "trunc_t": 361, "_golden_function_trunc": [361, 362], "trunc_bw_t": 362, "unary_chain_t": 363, "ops_chain": 363, "unarywithparam": 363, "chain": 363, "unaryoptyp": 363, "untilize_t": 364, "use_pack_until": [364, 365], "untilize_with_unpadding_t": 365, "output_tensor_end": 365, "upsample_t": 366, "form": 366, "nearest": 366, "scale_factor": 366, "array2d": 366, "var_t": 367, "where_t": 368, "_golden_function_wher": 368, "where_bw_t": 369, "xlogy_t": 370, "_golden_function_xlogi": 370, "xlogy_bw_t": 371, "zeros_t": 372, "zeros_like_t": 373, "basi": 374, "rewritten": 374, "bert": 374, "modeling_bert": 374, "bertintermedi": 374, "__init__": 374, "super": 374, "dens": 374, "intermediate_s": 374, "hidden_st": [374, 386], "tdd": 374, "pytest": [374, 375, 379, 388, 389], "torch_bert": 374, "utility_funct": 374, "torch_random": 374, "utils_for_test": 374, "assert_with_pcc": 374, "mark": [374, 375], "parametr": 374, "phiyodr": 374, "finetun": 374, "squad2": 374, "384": [374, 386], "test_bert_intermedi": 374, "manual_se": [374, 383, 386, 387, 389], "bertconfig": 374, "from_pretrain": 374, "eval": 374, "torch_hidden_st": [374, 386], "torch_output": [374, 386], "bert_intermedi": 374, "9999": [374, 388, 389], "dictionari": [374, 387], "turn": 374, "ttnn_bert": 374, "999": [374, 385], "someth": 374, "ttnn_optimized_bert": 374, "isinst": 374, "preprocess_linear_weight": [374, 386], "preprocess_linear_bia": [374, 386], "num_cores_x": [374, 386], "ff1_weight": 374, "ff1_bia": 374, "best": 374, "integr": [374, 375], "incredibli": 375, "excit": 375, "exploratori": 375, "folder": [375, 379], "freedom": 375, "showcas": 375, "few": [375, 380, 387], "question": 375, "answer": 375, "highlight": [375, 380], "successfulli": [375, 382], "migrat": [375, 389], "good": 375, "readm": [375, 377], "describ": [375, 387], "credit": 375, "author": 375, "might": 375, "encount": 375, "demonstr": [375, 379, 382, 384, 385, 387], "adequ": 375, "achiev": [375, 378], "pearson": 375, "ci": 375, "pipelin": [375, 379, 385], "unit": [375, 377], "metric": 375, "meet": 375, "continu": [375, 377, 378], "upon": 375, "commit": 375, "ongo": 375, "complianc": 375, "catch": 375, "regress": 375, "earli": 375, "collect": [375, 379, 381, 385, 388], "script": [375, 377, 379, 381, 382, 383, 384, 385, 386, 387], "varieti": 375, "instruct": [375, 376, 377, 379, 381, 389], "measur": 375, "special": [375, 380], "run_device_perf_model": 375, "run_perform": 375, "sh": [375, 377, 379, 388, 389], "models_device_performance_bare_met": 375, "schedul": 375, "clear": [375, 378, 383, 384, 385, 386, 387], "incorpor": 375, "autom": 375, "extern": [375, 378, 380], "servic": 375, "impact": 375, "workflow": [375, 377, 388], "impl": 375, "yaml": 375, "models_performance_bare_met": 375, "run_demos_single_card_n150_test": 375, "run_demos_single_card_n300_test": 375, "run_t3000_demo_test": 375, "test_ttnn_functional_resnet50": 375, "resnet50testinfra": 375, "friendli": 376, "ml": [376, 377], "workload": 376, "choic": 376, "jupyt": 376, "notebook": 376, "through": [377, 385, 387, 388], "softwar": [377, 383, 384, 385, 386, 387], "find": [377, 388], "asset": 377, "tag": 377, "compat": [377, 387], "galaxi": 377, "4u": 377, "ubuntu": 377, "04": [377, 384], "33": 377, "fw_pack": 377, "v2": 377, "6u": 377, "18": 377, "fwbundl": 377, "v18": 377, "v3": 377, "t3000": 377, "blackhol": 377, "repo": 377, "clang": 377, "17": [377, 387], "wget": 377, "raw": [377, 385], "githubusercont": 377, "ref": 377, "install_depend": 377, "sfpi": 377, "chmod": 377, "sudo": [377, 379], "linux": 377, "consult": 377, "vari": 377, "gentoo": 377, "arch": 377, "suffix": 377, "dev": 377, "devel": 377, "gcc": 377, "later": 377, "while": [377, 378, 385], "compil": [377, 385, 386, 389], "newer": 377, "dkm": 377, "debian": 377, "apt": 377, "fedora": 377, "dnf": 377, "enterpris": 377, "epel": 377, "pacman": 377, "cd": [377, 379], "modprob": 377, "visit": [377, 388], "pip": [377, 388, 389], "fw_tag": 377, "v80": 377, "t300": 377, "download": [377, 385, 387], "fw": [377, 379, 383, 384, 385, 386, 387], "tar": 377, "tabl": [377, 388], "correctli": [377, 385], "displai": 377, "telemetri": 377, "Be": 377, "loudbox": 377, "quietbox": 377, "quick": [377, 383, 387], "immedi": 377, "ai": [377, 383, 384, 385, 386, 387], "closer": 377, "conveni": 377, "who": [377, 380], "distro": 377, "glibc": 377, "34": [377, 383, 384, 385, 386, 387, 388], "cpu": [377, 379, 383, 384, 385, 386, 387], "governor": 377, "export": [377, 388, 389], "pythonpath": 377, "pwd": 377, "python_env": [377, 388], "txt": [377, 388], "cpufrequtil": 377, "cpupow": 377, "frequenc": 377, "registri": 377, "pull": [377, 378, 383], "ghcr": 377, "io": [377, 379], "amd64": 377, "bash": 377, "recurs": 377, "simplest": 377, "build_met": [377, 379, 388], "cmake": 377, "mkdir": 377, "ninja": 377, "dcmake_build_typ": 377, "relwithdebuginfo": 377, "dcmake_cxx_compil": 377, "box": 377, "create_venv": 377, "driven": [377, 378], "recip": 377, "conda": 377, "forg": 377, "tt_metal_hom": [377, 379, 382, 383, 384, 385, 386, 387], "python3": [377, 381, 382, 383, 384, 385, 386, 387], "run_op_on_devic": 377, "iommu": [377, 383, 384, 385, 386, 387, 388], "proper": 377, "isol": 377, "passthrough": 377, "On": 377, "translat": 377, "viommu": 377, "hypervisor": 377, "secur": 377, "effici": [377, 384, 385], "dma": 377, "pcie": 377, "guest": 377, "corrupt": 377, "restrict": 377, "reliabl": [377, 378], "intel_iommu": 377, "amd_iommu": 377, "provis": 377, "remap": 377, "intel": 377, "vt": 377, "amd": 377, "vi": [377, 388], "intend": 378, "maintain": 378, "simultan": [378, 388], "fine": 378, "tune": 378, "themselv": [378, 380], "goal": 378, "ask": 378, "popular": 378, "kent": 378, "beck": 378, "benefit": 378, "submit": 378, "label": [378, 380, 385, 387], "fulli": [378, 379, 385, 387], "fallback": 378, "branch": 378, "brief": 378, "4730": 378, "rst": 378, "referenc": 378, "sweep": 378, "codeown": 378, "pr": 378, "reflect": 378, "merg": 378, "comment": 378, "resnet": 379, "test_perf_resnet": 379, "test_perf_bare_met": 379, "0185": 379, "finish": 379, "csv": [379, 388], "consol": 379, "similar": [379, 386, 388], "give": [379, 388], "shorter": 379, "append": 379, "cli": 379, "explain": 379, "reset": 379, "tt_smi": 379, "tensix_reset": 379, "tensix": [379, 384], "skew": 379, "timer": 379, "reboot": 379, "wh": 379, "analyz": [379, 388], "1000": [379, 383, 384, 385, 386, 387], "fixtur": 379, "ttl": 379, "readdeviceprofil": 379, "total": [379, 385, 387], "drop": 379, "around": [379, 386], "120": [379, 387], "eighth": 379, "receiv": 379, "warn": [379, 383, 384, 385, 386, 387], "mention": 379, "risc": 379, "faster": [379, 386], "those": [379, 387], "affect": 379, "flow": [379, 388], "come": 379, "python_fallback": 379, "tt_dnn_cpu": 379, "tt_dnn_devic": 379, "global": [379, 388], "fidel": 379, "field": 379, "lofi": 379, "hifi2": 379, "hifi3": 379, "clock": 379, "stamp": 379, "durat": [379, 386, 389], "nanosecond": 379, "end_t": 379, "start_t": 379, "cycl": 379, "earliest": 379, "core_frequ": 379, "marker": 379, "brisc": 379, "ncrisc": 379, "trisc0": 379, "trisc1": 379, "trisc2": 379, "front": 379, "spent": [379, 386], "cb_wait_front": 379, "reserv": 379, "cb_reserve_back": 379, "datamov": 379, "input_0_memori": 379, "z": 379, "channels_last": 379, "dev_0_dram": 379, "dec_0_l1": 379, "noc": 379, "timelin": 379, "npe": 379, "subdirectori": 379, "npe_viz": 379, "traffic": 379, "congest": 379, "properli": [379, 383], "item": [379, 385, 387], "aggreg": 379, "timestamp": [379, 388], "ops_perf_results_2025_06_25_14_04_34": 379, "2025_06_25_14_04_34": 379, "4x4": 380, "32x32": [380, 384], "still": 380, "transit": 380, "2x2": 380, "illustr": 380, "insid": [380, 389], "isn": 380, "16x16": 380, "li": 380, "fashion": [380, 386], "face0": 380, "face1": 380, "face2": 380, "face3": 380, "pictur": 380, "reason": 380, "engin": 380, "matric": 380, "decompos": 380, "transpose_til": 380, "col": 380, "torch_t": 380, "byte": 380, "That": 380, "sizeof": 380, "introduc": [380, 384], "behavior": 380, "observ": [380, 387], "magnitud": [380, 386], "flush": 380, "instabl": 380, "extrem": 380, "infin": 380, "domin": 380, "caus": 380, "lose": 380, "precis": [380, 385], "7014118346046923e": 380, "frequent": 380, "occurr": 380, "uniform": 380, "deal": 380, "critic": 380, "homogen": 380, "unsuit": 380, "inher": 380, "owned_host_storag": 380, "borrowed_host_storag": 380, "borrow": 380, "numpi": [380, 384, 385], "device_storag": 380, "abstract": 380, "awai": 380, "compress": 380, "upper": 380, "learn": [380, 382, 383, 384], "remain": 380, "128x128": 380, "subset": 380, "know": 380, "understand": [380, 388], "coordin": 380, "physic": 380, "task": [381, 385], "smoothli": 381, "lightweight": 381, "minim": 381, "standalon": 381, "basic_python": [381, 382, 383, 384, 385, 386, 387], "directli": [381, 382, 383, 384, 385, 386, 387], "togeth": [382, 383, 384, 385, 386, 387], "llama": 382, "mistral": 382, "diffus": 382, "ttnn_add_tensor": 382, "loguru": [382, 383, 384, 385, 386, 387], "logger": [382, 383, 384, 385, 386, 387], "tt_tensor1": 382, "tt_tensor2": 382, "tt_result": 382, "everyth": [382, 383, 384, 385, 386, 387, 388], "As": [382, 386], "2025": [382, 383, 384, 385, 386, 387, 388], "06": [382, 386], "23": 382, "09": [382, 383, 388], "36": 382, "58": 382, "211": 382, "__main__": [382, 383, 384, 385, 386, 387], "29": [382, 384], "37": 382, "00": [382, 385, 387], "524": 382, "525": 382, "present": 383, "ttnn_basic_conv": 383, "state": 383, "extra": [383, 387], "asid": [383, 387], "portion": [383, 387], "slide": [383, 387], "scratchpad": [383, 387], "kb": [383, 387], "enough": [383, 387], "amongst": [383, 387], "bchw": 383, "permuted_input": 383, "flat": 383, "reshaped_input": 383, "out_torch": 383, "f": [383, 384, 385, 386, 387, 389], "07": [383, 384, 385, 386, 387], "02": [383, 388], "649": 383, "silicondriv": [383, 384, 385, 386, 387, 388], "pci": [383, 384, 385, 386, 387, 388], "pci_devic": [383, 384, 385, 386, 387, 388], "198": [383, 384, 385, 386, 387], "651": 383, "658": 383, "tt_cluster": [383, 384, 385, 386, 387, 388], "190": [383, 384, 385, 386, 387], "659": 383, "666": 383, "667": 383, "673": 383, "harvest": [383, 384, 385, 386, 387, 388], "0x100": [383, 384, 385, 386, 387], "noc0": [383, 384, 385, 386, 387, 388], "0x0": [383, 384, 385, 386, 387, 388], "cluster": [383, 384, 385, 386, 387, 388], "282": [383, 384, 385, 386, 387], "772": 383, "817": 383, "remot": [383, 384, 385, 386, 387, 388], "147": [383, 384, 385, 386, 387], "828": 383, "ethernet": [383, 384, 385, 386, 387], "1039": [383, 384, 385, 386, 387], "915": 383, "clk": [383, 384, 385, 386, 387], "mhz": [383, 384, 385, 386, 387], "metal_context": [383, 384, 385, 386, 387], "487": 383, "428": [383, 384, 385, 386, 387], "489": 383, "unabl": [383, 384, 385, 386, 387], "thread": [383, 384, 385, 386, 387, 388, 389], "hardware_command_queu": [383, 384, 385, 386, 387], "74": [383, 384, 385, 386, 387], "921": 383, "reprocess": 383, "563": 383, "922": 383, "582": 383, "390": 383, "78": 383, "488": [383, 384, 385, 386, 387], "391": 383, "468": [383, 384, 385, 386, 387], "783": [383, 384, 385, 386, 387], "392": 383, "ttnn_basic_oper": 384, "np": [384, 385], "host_rand": 384, "amount": 384, "to_tt_til": 384, "helper": 384, "tt_t1": 384, "overhead": 384, "transfer": 384, "tt_t2": 384, "tt_t3": 384, "tt_t4": 384, "t5": 384, "tt_t5": 384, "add_result": 384, "mul_result": 384, "mul": [384, 386], "matmul_result": 384, "bmatrix": 384, "rightarrow": 384, "broadcast_vector": 384, "broadcast_tt": 384, "broadcast_add_result": 384, "850": 384, "852": [384, 385], "859": 384, "860": 384, "866": 384, "867": 384, "873": 384, "970": 384, "015": 384, "025": 384, "111": 384, "678": 384, "680": 384, "537": 384, "564": 384, "47": 384, "08": [384, 388], "072": 384, "49": 384, "82812": 384, "04688": 384, "32812": 384, "00781": 384, "39844": 384, "03906": 384, "14844": 384, "24219": 384, "65625": 384, "31250": 384, "21094": 384, "21875": 384, "33594": 384, "37500": 384, "62500": 384, "670": 384, "52": 384, "12500": 384, "23438": 384, "96875": 384, "02600": 384, "97656": 384, "18164": 384, "87891": 384, "44531": 384, "48438": 384, "50781": 384, "35938": 384, "229": 384, "55": [384, 386], "50000": 384, "25000": 384, "56250": 384, "43750": 384, "57": 384, "231": 384, "59": 384, "233": 384, "63": 384, "8242": 384, "0469": 384, "2500": 384, "0000": 384, "3750": 384, "3945": 384, "0391": 384, "5625": 384, "1250": 384, "2188": 384, "8750": 384, "4375": 384, "7500": 384, "6250": 384, "7422": 384, "1484": 384, "9531": 384, "5000": 384, "6562": 384, "3281": 384, "0938": 384, "2158": 384, "3359": 384, "234": 384, "insight": [385, 387, 388], "ttnn_mlp_inference_mnist": 385, "essenti": 385, "digit": 385, "classif": [385, 387], "perceptron": 385, "manipul": 385, "torchvis": [385, 387], "disk": [385, 387, 388, 389], "throughout": [385, 387, 388], "statu": 385, "predict": [385, 387], "backend": 385, "outcom": 385, "28x28": 385, "grayscal": 385, "dataload": [385, 387], "totensor": [385, 387], "testset": [385, 387], "testload": [385, 387], "shuffl": [385, 387], "train_and_export_mlp": 385, "mlp_mnist_weight": 385, "pt": [385, 387], "poor": [385, 387], "w1": 385, "b1": 385, "w2": 385, "b2": 385, "w3": [385, 387], "b3": [385, 387], "snippet": [385, 387, 389], "five": [385, 387], "counter": [385, 387], "sequenti": 385, "three": 385, "highest": [385, 387], "overal": [385, 387, 388], "enumer": [385, 387], "break": [385, 387], "_layout": 385, "image_tt": 385, "1x128": 385, "w1_final": 385, "b1_final": 385, "out1": 385, "w2_final": 385, "b2_final": 385, "out2": 385, "w3_final": 385, "b3_final": 385, "out3": 385, "predicted_label": [385, 387], "ntt": [385, 387], "100": [385, 387], "2f": [385, 387], "03": 385, "41": 385, "990": 385, "992": 385, "998": 385, "006": 385, "007": 385, "013": 385, "110": 385, "172": 385, "182": [385, 387], "268": 385, "886": 385, "888": 385, "44": 385, "48": 385, "677": 385, "682": 385, "686": 385, "690": 385, "695": 385, "89": [385, 387], "696": 385, "697": 385, "therefor": 386, "multi_head_attent": 386, "query_weight": 386, "query_bia": 386, "key_weight": 386, "key_bia": 386, "value_weight": 386, "value_bia": 386, "output_weight": 386, "output_bia": 386, "fallback_reshap": 386, "get_fallback_funct": [386, 389], "attention_scor": 386, "attention_prob": 386, "context_lay": 386, "self_output": 386, "torch_attention_mask": 386, "torch_query_weight": 386, "torch_query_bia": 386, "torch_key_weight": 386, "torch_key_bia": 386, "torch_value_weight": 386, "torch_value_bia": 386, "torch_output_weight": 386, "torch_output_bia": 386, "fly": 386, "fortun": 386, "ahead": 386, "data_typ": 386, "optimized_multi_head_attent": 386, "fused_qkv_weight": 386, "fused_qkv_bia": 386, "self_output_weight": 386, "self_output_bia": 386, "fused_qkv_output": 386, "context_layer_after_concatenate_head": 386, "qkv": 386, "torch_qkv_weight": 386, "torch_qkv_bia": 386, "qkv_weight": 386, "qkv_bia": 386, "optimized_output": 386, "torch_optimized_output": 386, "allclos": 386, "ttnn_multihead_attent": 386, "768": 386, "769": 386, "776": [386, 388], "777": 386, "784": 386, "790": 386, "887": 386, "931": 386, "942": 386, "027": [386, 387], "603": 386, "605": 386, "51": [386, 388], "001": 386, "132": [386, 387], "265338897705078": 386, "056": 386, "151": [386, 387], "05480194091796875": 386, "363": 386, "259": 386, "2866740226745605": 386, "366": 386, "274": 386, "002416849136352539": 386, "417": 386, "418": 386, "460": 386, "pixel": 387, "cifar10": 387, "train_and_export_cnn": 387, "simple_cnn_cifar10_weight": 387, "conv1": 387, "conv2": 387, "fc1": 387, "fc2": 387, "conv_pool_stag": 387, "encapsul": 387, "undergo": 387, "metadata": 387, "again": 387, "record": 387, "modular": 387, "flexibl": [387, 388], "input_nhwc": 387, "conv_outchannel": 387, "weight_str": 387, "bias_str": 387, "activation_str": 387, "log_first_sampl": 387, "conv_kernel_s": 387, "conv_strid": 387, "conv_pad": 387, "conv1_out": 387, "max_pool2d_kernel_s": 387, "max_pool2d_strid": 387, "max_pool2d_pad": 387, "max_pool2d_dil": 387, "max_pool2d_out": 387, "simplecnn": 387, "rearrang": 387, "obtain": 387, "ttnn_imag": 387, "ttnn_image_permu": 387, "log_thi": 387, "conv1_pool": 387, "conv2_pool": 387, "fc": 387, "out_flat": 387, "w4": 387, "b4": 387, "w3_tt": 387, "b3_tt": 387, "x_tt": 387, "w4_tt": 387, "b4_tt": 387, "ttnn_simplecnn_infer": 387, "041": 387, "043": 387, "050": 387, "051": 387, "057": 387, "058": 387, "064": 387, "161": 387, "224": 387, "235": 387, "321": 387, "889": 387, "891": 387, "19": 387, "734": 387, "471": 387, "075": 387, "86": 387, "88": 387, "076": 387, "90": 387, "91": 387, "92": 387, "93": 387, "1x1": 387, "94": 387, "95": 387, "96": [387, 389], "97": 387, "98": 387, "99": 387, "enable_subblock_pad": 387, "101": 387, "960": 387, "129": 387, "130": 387, "131": 387, "961": 387, "133": 387, "134": 387, "135": 387, "136": 387, "137": 387, "138": 387, "139": 387, "24": 387, "026": 387, "157": [387, 388], "158": 387, "121": 387, "669": 387, "238": 387, "166": 387, "181": 387, "240": 387, "183": 387, "ll": 388, "offer": 388, "intuit": 388, "depth": 388, "searchabl": 388, "plot": 388, "placement": 388, "peak": 388, "hierarch": 388, "server": 388, "ssh": 388, "instanc": 388, "comprehens": 388, "opportun": 388, "watch": 388, "walkthrough": 388, "video": 388, "offlin": 388, "launch": 388, "localhost": 388, "8000": 388, "chrome": 388, "greet": 388, "homepag": 388, "yolov4": 388, "320x320": 388, "coco": 388, "predefin": 388, "wrap": 388, "ttnn_config_path": [388, 389], "inlin": 388, "overrid": [388, 389], "ttnn_config_overrid": [388, 389], "past": 388, "enable_fast_runtime_mod": [388, 389], "enable_log": [388, 389], "report_nam": [388, 389], "ttnn_visualizer_tutori": 388, "enable_graph_report": [388, 389], "enable_detailed_buffer_report": [388, 389], "enable_detailed_tensor_report": [388, 389], "enable_comparison_mod": [388, 389], "free": 388, "test_ttnn_yolov4": 388, "test_yolov4": 388, "pretrained_weight_tru": 388, "At": 388, "664": 388, "73": 388, "665": 388, "83": 388, "cache_path": 388, "model_cache_path": 388, "tmp_dir": 388, "enable_model_cach": 388, "throw_exception_on_fallback": 388, "comparison_mode_should_raise_except": 388, "comparison_mode_pcc": [388, 389], "root_report_path": 388, "4042956046390500517": 388, "754": 388, "197": 388, "758": 388, "192": 388, "761": 388, "764": 388, "0x80": 388, "295": 388, "836": 388, "navig": 388, "json": [388, 389], "db": 388, "sqlite": 388, "traci": 388, "termin": 388, "session": 388, "unset": 388, "regener": 388, "Or": 388, "731": 388, "process_ops_log": 388, "generate_report": 388, "905": 388, "2025_08_01_10_51_02": 388, "ops_perf_results_2025_08_01_10_51_02": 388, "ops_perf_results_": 388, "device_profile_log": 388, "went": 388, "bottom": 388, "filter": 388, "click": 388, "inspect": 388, "breakdown": 388, "relationship": 388, "easi": 388, "candid": 388, "chart": 388, "lifetim": 388, "estim": 388, "headroom": 388, "pinpoint": 388, "ineffici": 388, "node": 388, "edg": 388, "zoom": 388, "pan": 388, "subnetwork": 388, "advanc": 388, "flop": 388, "underutil": 388, "hint": 388, "suboptim": 388, "summar": 388, "deepli": 388, "architectur": 389, "2024": 389, "torch_input_tensor_a": 389, "torch_input_tensor_b": 389, "matmul_output_tensor": 389, "torch_matmul_output_tensor": 389, "unlik": 389, "start_tim": 389, "end_tim": 389, "stdout": 389, "6391518115997314": 389, "0007393360137939453": 389, "manage_config": 389, "9998": 389, "construct": 389, "tracer": 389, "exp_trac": 389, "miss": 389, "tt_logger_typ": 389, "tt_logger_level": 389, "substitut": 389, "implementaiton": 389, "unless": 389, "addition": 389, "app": 389, "pre_hook_to_print_args_and_kwarg": 389, "post_hook_to_print_output": 389, "query_registered_oper": 389, "begin_graph_captur": 389, "runmod": 389, "no_dispatch": 389, "captured_graph": 389, "end_graph_captur": 389, "pretty_print": 389}, "objects": {"ttnn": [[6, 0, 1, "", "Conv2dConfig"], [7, 0, 1, "", "Conv2dSliceConfig"], [8, 3, 1, "", "GetDefaultDevice"], [9, 3, 1, "", "SetDefaultDevice"], [380, 0, 1, "", "Shape"], [10, 5, 1, "", "abs"], [11, 5, 1, "", "abs_bw"], [12, 5, 1, "", "acos"], [13, 5, 1, "", "acos_bw"], [14, 5, 1, "", "acosh"], [15, 5, 1, "", "acosh_bw"], [16, 5, 1, "", "add"], [17, 5, 1, "", "add_bw"], [18, 5, 1, "", "addalpha"], [19, 5, 1, "", "addalpha_bw"], [20, 5, 1, "", "addcdiv"], [21, 5, 1, "", "addcdiv_bw"], [22, 5, 1, "", "addcmul"], [23, 5, 1, "", "addcmul_bw"], [24, 5, 1, "", "all_gather"], [25, 5, 1, "", "alt_complex_rotate90"], [26, 5, 1, "", "angle"], [27, 5, 1, "", "angle_bw"], [28, 5, 1, "", "arange"], [29, 5, 1, "", "argmax"], [30, 5, 1, "", "as_tensor"], [31, 5, 1, "", "asin"], [32, 5, 1, "", "asin_bw"], [33, 5, 1, "", "asinh"], [34, 5, 1, "", "asinh_bw"], [35, 5, 1, "", "assign_bw"], [36, 5, 1, "", "atan"], [37, 5, 1, "", "atan2"], [38, 5, 1, "", "atan2_bw"], [39, 5, 1, "", "atan_bw"], [40, 5, 1, "", "atanh"], [41, 5, 1, "", "atanh_bw"], [42, 5, 1, "", "batch_norm"], [43, 5, 1, "", "bias_gelu_bw"], [44, 5, 1, "", "bitwise_and"], [45, 5, 1, "", "bitwise_left_shift"], [46, 5, 1, "", "bitwise_not"], [47, 5, 1, "", "bitwise_or"], [48, 5, 1, "", "bitwise_right_shift"], [49, 5, 1, "", "bitwise_xor"], [50, 5, 1, "", "cbrt"], [51, 5, 1, "", "ceil"], [52, 5, 1, "", "ceil_bw"], [53, 5, 1, "", "celu"], [54, 5, 1, "", "celu_bw"], [55, 5, 1, "", "clamp"], [56, 5, 1, "", "clamp_bw"], [57, 5, 1, "", "clip"], [58, 5, 1, "", "clip_bw"], [59, 5, 1, "", "clone"], [60, 3, 1, "", "close_device"], [61, 5, 1, "", "concat"], [62, 5, 1, "", "concat_bw"], [63, 5, 1, "", "conj"], [64, 5, 1, "", "conj_bw"], [65, 5, 1, "", "conv1d"], [66, 5, 1, "", "conv2d"], [67, 5, 1, "", "conv_transpose2d"], [68, 5, 1, "", "cos"], [69, 5, 1, "", "cos_bw"], [70, 5, 1, "", "cosh"], [71, 5, 1, "", "cosh_bw"], [72, 3, 1, "", "create_sharded_memory_config"], [73, 5, 1, "", "cumprod"], [74, 5, 1, "", "cumsum"], [75, 5, 1, "", "deallocate"], [76, 5, 1, "", "deg2rad"], [77, 5, 1, "", "deg2rad_bw"], [78, 5, 1, "", "digamma"], [79, 5, 1, "", "digamma_bw"], [80, 5, 1, "", "div"], [81, 5, 1, "", "div_bw"], [82, 5, 1, "", "div_no_nan"], [83, 5, 1, "", "div_no_nan_bw"], [84, 5, 1, "", "dump_tensor"], [85, 5, 1, "", "elu"], [86, 5, 1, "", "elu_bw"], [87, 5, 1, "", "embedding"], [88, 5, 1, "", "embedding_bw"], [89, 5, 1, "", "empty"], [90, 5, 1, "", "empty_like"], [91, 5, 1, "", "eq"], [92, 5, 1, "", "eq_"], [93, 5, 1, "", "eqz"], [94, 5, 1, "", "erf"], [95, 5, 1, "", "erf_bw"], [96, 5, 1, "", "erfc"], [97, 5, 1, "", "erfc_bw"], [98, 5, 1, "", "erfinv"], [99, 5, 1, "", "erfinv_bw"], [100, 5, 1, "", "exp"], [101, 5, 1, "", "exp2"], [102, 5, 1, "", "exp2_bw"], [103, 5, 1, "", "exp_bw"], [109, 5, 1, "", "expm1"], [110, 5, 1, "", "expm1_bw"], [111, 5, 1, "", "fill"], [112, 5, 1, "", "fill_bw"], [113, 5, 1, "", "fill_ones_rm"], [114, 5, 1, "", "fill_rm"], [115, 5, 1, "", "fill_zero_bw"], [116, 5, 1, "", "floor"], [117, 5, 1, "", "floor_bw"], [118, 5, 1, "", "floor_div"], [119, 5, 1, "", "fmod"], [120, 5, 1, "", "fmod_bw"], [121, 3, 1, "", "format_input_tensor"], [122, 3, 1, "", "format_output_tensor"], [123, 5, 1, "", "frac"], [124, 5, 1, "", "frac_bw"], [125, 5, 1, "", "from_device"], [126, 5, 1, "", "from_torch"], [127, 5, 1, "", "full"], [128, 5, 1, "", "full_like"], [129, 5, 1, "", "gather"], [130, 5, 1, "", "gcd"], [131, 5, 1, "", "ge"], [132, 5, 1, "", "ge_"], [133, 5, 1, "", "geglu"], [134, 5, 1, "", "gelu"], [135, 5, 1, "", "gelu_bw"], [136, 5, 1, "", "gez"], [137, 5, 1, "", "global_avg_pool2d"], [138, 5, 1, "", "glu"], [139, 5, 1, "", "group_norm"], [140, 5, 1, "", "gt"], [141, 5, 1, "", "gt_"], [142, 5, 1, "", "gtz"], [143, 5, 1, "", "hardshrink"], [144, 5, 1, "", "hardshrink_bw"], [145, 5, 1, "", "hardsigmoid"], [146, 5, 1, "", "hardsigmoid_bw"], [147, 5, 1, "", "hardswish"], [148, 5, 1, "", "hardswish_bw"], [149, 5, 1, "", "hardtanh"], [150, 5, 1, "", "hardtanh_bw"], [151, 5, 1, "", "heaviside"], [152, 5, 1, "", "hypot"], [153, 5, 1, "", "hypot_bw"], [154, 5, 1, "", "i0"], [155, 5, 1, "", "i0_bw"], [156, 5, 1, "", "identity"], [157, 5, 1, "", "imag"], [158, 5, 1, "", "imag_bw"], [159, 5, 1, "", "indexed_fill"], [160, 5, 1, "", "is_imag"], [161, 5, 1, "", "is_real"], [162, 5, 1, "", "isclose"], [163, 5, 1, "", "isfinite"], [164, 5, 1, "", "isinf"], [165, 5, 1, "", "isnan"], [166, 5, 1, "", "isneginf"], [167, 5, 1, "", "isposinf"], [170, 5, 1, "", "l1_loss"], [171, 5, 1, "", "layer_norm"], [172, 5, 1, "", "lcm"], [173, 5, 1, "", "ldexp"], [174, 5, 1, "", "ldexp_bw"], [175, 5, 1, "", "le"], [176, 5, 1, "", "le_"], [177, 5, 1, "", "leaky_relu"], [178, 5, 1, "", "leaky_relu_bw"], [179, 5, 1, "", "lerp"], [180, 5, 1, "", "lerp_bw"], [181, 5, 1, "", "lez"], [182, 5, 1, "", "lgamma"], [183, 5, 1, "", "lgamma_bw"], [184, 5, 1, "", "linear"], [185, 5, 1, "", "load_tensor"], [186, 5, 1, "", "log"], [187, 5, 1, "", "log10"], [188, 5, 1, "", "log10_bw"], [189, 5, 1, "", "log1p"], [190, 5, 1, "", "log1p_bw"], [191, 5, 1, "", "log2"], [192, 5, 1, "", "log2_bw"], [193, 5, 1, "", "log_bw"], [194, 5, 1, "", "log_sigmoid"], [195, 5, 1, "", "log_sigmoid_bw"], [196, 5, 1, "", "logaddexp"], [197, 5, 1, "", "logaddexp2"], [198, 5, 1, "", "logaddexp2_bw"], [199, 5, 1, "", "logaddexp_bw"], [200, 5, 1, "", "logical_and"], [201, 5, 1, "", "logical_and_"], [202, 5, 1, "", "logical_not"], [203, 5, 1, "", "logical_not_"], [204, 5, 1, "", "logical_or"], [205, 5, 1, "", "logical_or_"], [206, 5, 1, "", "logical_xor"], [207, 5, 1, "", "logical_xor_"], [208, 5, 1, "", "logit"], [209, 5, 1, "", "logit_bw"], [210, 5, 1, "", "logiteps_bw"], [211, 5, 1, "", "lt"], [212, 5, 1, "", "lt_"], [213, 5, 1, "", "ltz"], [214, 5, 1, "", "mac"], [215, 3, 1, "", "manage_device"], [216, 5, 1, "", "matmul"], [217, 5, 1, "", "max"], [218, 5, 1, "", "max_bw"], [219, 5, 1, "", "max_pool2d"], [220, 5, 1, "", "maximum"], [221, 5, 1, "", "mean"], [222, 5, 1, "", "min"], [223, 5, 1, "", "min_bw"], [224, 5, 1, "", "minimum"], [225, 5, 1, "", "mish"], [228, 5, 1, "", "moreh_sum"], [229, 5, 1, "", "mse_loss"], [230, 5, 1, "", "mul_bw"], [231, 5, 1, "", "multigammaln"], [232, 5, 1, "", "multigammaln_bw"], [233, 5, 1, "", "multiply"], [234, 5, 1, "", "ne"], [235, 5, 1, "", "ne_"], [236, 5, 1, "", "neg"], [237, 5, 1, "", "neg_bw"], [238, 5, 1, "", "nextafter"], [239, 5, 1, "", "nez"], [240, 5, 1, "", "nonzero"], [241, 5, 1, "", "normalize_global"], [242, 5, 1, "", "normalize_hw"], [243, 5, 1, "", "ones"], [244, 5, 1, "", "ones_like"], [245, 3, 1, "", "open_device"], [246, 5, 1, "", "outer"], [247, 5, 1, "", "pad"], [248, 3, 1, "", "pad_to_tile_shape"], [249, 5, 1, "", "permute"], [250, 5, 1, "", "polar"], [251, 5, 1, "", "polar_bw"], [252, 5, 1, "", "polygamma"], [253, 5, 1, "", "polygamma_bw"], [254, 5, 1, "", "polyval"], [255, 5, 1, "", "pow"], [256, 5, 1, "", "pow_bw"], [257, 5, 1, "", "prelu"], [258, 3, 1, "", "prepare_conv_bias"], [259, 3, 1, "", "prepare_conv_transpose2d_bias"], [260, 3, 1, "", "prepare_conv_transpose2d_weights"], [261, 3, 1, "", "prepare_conv_weights"], [262, 5, 1, "", "prod"], [263, 5, 1, "", "prod_bw"], [264, 5, 1, "", "rad2deg"], [265, 5, 1, "", "rad2deg_bw"], [266, 5, 1, "", "rdiv"], [267, 5, 1, "", "rdiv_bw"], [268, 5, 1, "", "real"], [269, 5, 1, "", "real_bw"], [270, 5, 1, "", "reallocate"], [271, 5, 1, "", "reciprocal"], [272, 5, 1, "", "reciprocal_bw"], [273, 5, 1, "", "reduce_scatter"], [274, 3, 1, "", "register_post_operation_hook"], [275, 3, 1, "", "register_pre_operation_hook"], [276, 5, 1, "", "reglu"], [277, 5, 1, "", "relu"], [278, 5, 1, "", "relu6"], [279, 5, 1, "", "relu6_bw"], [280, 5, 1, "", "relu_bw"], [281, 5, 1, "", "relu_max"], [282, 5, 1, "", "relu_min"], [283, 5, 1, "", "remainder"], [284, 5, 1, "", "remainder_bw"], [285, 5, 1, "", "repeat"], [286, 5, 1, "", "repeat_bw"], [287, 5, 1, "", "repeat_interleave"], [288, 5, 1, "", "reshape"], [289, 5, 1, "", "rms_norm"], [290, 5, 1, "", "round"], [291, 5, 1, "", "round_bw"], [292, 5, 1, "", "rpow"], [293, 5, 1, "", "rpow_bw"], [294, 5, 1, "", "rsqrt"], [295, 5, 1, "", "rsqrt_bw"], [296, 5, 1, "", "rsub"], [297, 5, 1, "", "rsub_bw"], [298, 5, 1, "", "scatter"], [299, 5, 1, "", "selu"], [300, 5, 1, "", "selu_bw"], [301, 3, 1, "", "set_printoptions"], [302, 5, 1, "", "sigmoid"], [303, 5, 1, "", "sigmoid_accurate"], [304, 5, 1, "", "sigmoid_bw"], [305, 5, 1, "", "sign"], [306, 5, 1, "", "sign_bw"], [307, 5, 1, "", "signbit"], [308, 5, 1, "", "silu"], [309, 5, 1, "", "silu_bw"], [310, 5, 1, "", "sin"], [311, 5, 1, "", "sin_bw"], [312, 5, 1, "", "sinh"], [313, 5, 1, "", "sinh_bw"], [314, 5, 1, "", "slice"], [315, 5, 1, "", "softmax"], [316, 5, 1, "", "softplus"], [317, 5, 1, "", "softplus_bw"], [318, 5, 1, "", "softshrink"], [319, 5, 1, "", "softshrink_bw"], [320, 5, 1, "", "softsign"], [321, 5, 1, "", "softsign_bw"], [322, 5, 1, "", "sort"], [323, 5, 1, "", "sqrt"], [324, 5, 1, "", "sqrt_bw"], [325, 5, 1, "", "square"], [326, 5, 1, "", "square_bw"], [327, 5, 1, "", "squared_difference"], [328, 5, 1, "", "squared_difference_bw"], [329, 5, 1, "", "std"], [330, 5, 1, "", "sub_bw"], [331, 5, 1, "", "subalpha"], [332, 5, 1, "", "subalpha_bw"], [333, 5, 1, "", "subtract"], [334, 5, 1, "", "sum"], [335, 5, 1, "", "swiglu"], [336, 5, 1, "", "swish"], [337, 3, 1, "", "synchronize_device"], [338, 5, 1, "", "tan"], [339, 5, 1, "", "tan_bw"], [340, 5, 1, "", "tanh"], [341, 5, 1, "", "tanh_bw"], [342, 5, 1, "", "tanhshrink"], [343, 5, 1, "", "tanhshrink_bw"], [344, 5, 1, "", "threshold"], [345, 5, 1, "", "threshold_bw"], [346, 5, 1, "", "tilize"], [347, 5, 1, "", "tilize_with_val_padding"], [348, 5, 1, "", "to_device"], [349, 5, 1, "", "to_layout"], [350, 5, 1, "", "to_memory_config"], [351, 5, 1, "", "to_torch"], [352, 5, 1, "", "topk"], [359, 5, 1, "", "tril"], [360, 5, 1, "", "triu"], [361, 5, 1, "", "trunc"], [362, 5, 1, "", "trunc_bw"], [363, 5, 1, "", "unary_chain"], [364, 5, 1, "", "untilize"], [365, 5, 1, "", "untilize_with_unpadding"], [366, 5, 1, "", "upsample"], [367, 5, 1, "", "var"], [368, 5, 1, "", "where"], [369, 5, 1, "", "where_bw"], [370, 5, 1, "", "xlogy"], [371, 5, 1, "", "xlogy_bw"], [372, 5, 1, "", "zeros"], [373, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[6, 1, 1, "", "act_block_h_override"], [6, 1, 1, "", "act_block_w_div"], [6, 1, 1, "", "activation"], [6, 1, 1, "", "core_grid"], [6, 1, 1, "", "deallocate_activation"], [6, 1, 1, "", "enable_act_double_buffer"], [6, 1, 1, "", "enable_kernel_stride_folding"], [6, 1, 1, "", "enable_split_reader"], [6, 1, 1, "", "enable_weights_double_buffer"], [6, 1, 1, "", "full_inner_dim"], [6, 1, 1, "", "in_place"], [6, 1, 1, "", "output_layout"], [6, 1, 1, "", "override_sharding_config"], [6, 1, 1, "", "reallocate_halo_output"], [6, 1, 1, "", "reshard_if_not_optimal"], [6, 1, 1, "", "shard_layout"], [6, 1, 1, "", "transpose_shards"], [6, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[7, 0, 1, "", "SliceTypeEnum"], [7, 1, 1, "", "num_slices"], [7, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[7, 2, 1, "", "SliceHeight"], [7, 2, 1, "", "SliceWidth"], [7, 1, 1, "", "name"], [7, 1, 1, "", "value"]], "ttnn.Shape": [[380, 1, 1, "", "rank"], [380, 4, 1, "", "to_rank"]], "ttnn.experimental": [[104, 5, 1, "", "all_reduce"], [105, 5, 1, "", "conv3d"], [106, 5, 1, "", "dropout"], [107, 5, 1, "", "gelu_bw"], [108, 5, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[168, 5, 1, "", "fill_cache_for_user_"], [169, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[226, 3, 1, "", "preprocess_model"], [227, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[353, 5, 1, "", "attention_softmax"], [354, 5, 1, "", "attention_softmax_"], [355, 5, 1, "", "concatenate_heads"], [356, 5, 1, "", "scaled_dot_product_attention"], [357, 5, 1, "", "scaled_dot_product_attention_decode"], [358, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 3, 4, 374, 377, 379, 384, 388, 389], "nn": [0, 3, 4, 374, 377, 379, 384, 388, 389], "document": [0, 377], "ttnn": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 386, 388], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 377], "develop": 1, "support": [2, 389], "report": [2, 5, 379, 388], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 389], "tip": 2, "commun": 2, "what": [3, 4], "i": [3, 4], "ad": 4, "new": [4, 378], "oper": [4, 5, 374, 379, 382, 383, 384, 388, 389], "faq": 4, "step": [4, 374, 377], "ar": [4, 377], "need": 4, "add": [4, 16, 382], "c": [4, 389], "python": [4, 389], "exampl": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 377, 382, 383, 384, 385, 386, 387, 389], "devic": [4, 5, 377, 382, 383, 384, 385, 386, 387, 389], "implement": [4, 386], "1": [4, 374, 376, 377, 389], "2": [4, 374, 376, 377, 389], "bind": 4, "option": [4, 315, 377], "golden": 4, "function": [4, 378, 389], "api": [5, 380], "memori": [5, 380, 388], "config": [5, 380], "core": 5, "tensor": [5, 29, 217, 221, 222, 329, 334, 367, 380, 382, 383, 384, 388, 389], "creation": [5, 382, 384], "matrix": 5, "multipl": [5, 380], "pointwis": 5, "unari": 5, "binari": [5, 377], "ternari": 5, "loss": 5, "reduct": 5, "data": [5, 380, 385], "movement": 5, "normal": 5, "moreh": 5, "transform": [5, 353, 354, 355, 356, 357, 358], "ccl": 5, "embed": [5, 87], "convolut": [5, 383, 387], "pool": [5, 387], "vision": 5, "kv": 5, "cach": [5, 389], "model": [5, 374, 376, 377, 386, 388], "convers": 5, "hook": [5, 389], "conv2dconfig": 6, "conv2dsliceconfig": 7, "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "all_gath": 24, "alt_complex_rotate90": 25, "angl": 26, "angle_bw": 27, "arang": 28, "argmax": 29, "input": [29, 217, 221, 222, 329, 334, 367, 383], "output": [29, 382, 383, 384, 385, 386, 387], "as_tensor": 30, "asin": 31, "asin_bw": 32, "asinh": 33, "asinh_bw": 34, "assign_bw": 35, "atan": 36, "atan2": 37, "atan2_bw": 38, "atan_bw": 39, "atanh": 40, "atanh_bw": 41, "batch_norm": 42, "bias_gelu_bw": 43, "bitwise_and": 44, "bitwise_left_shift": 45, "bitwise_not": 46, "bitwise_or": 47, "bitwise_right_shift": 48, "bitwise_xor": 49, "cbrt": 50, "ceil": 51, "ceil_bw": 52, "celu": 53, "celu_bw": 54, "clamp": 55, "clamp_bw": 56, "clip": 57, "clip_bw": 58, "clone": [59, 377], "close_devic": 60, "concat": 61, "concat_bw": 62, "conj": 63, "conj_bw": 64, "conv1d": 65, "conv2d": 66, "conv_transpose2d": 67, "co": 68, "cos_bw": 69, "cosh": 70, "cosh_bw": 71, "create_sharded_memory_config": 72, "cumprod": 73, "cumsum": 74, "dealloc": 75, "deg2rad": 76, "deg2rad_bw": 77, "digamma": 78, "digamma_bw": 79, "div": 80, "div_bw": 81, "div_no_nan": 82, "div_no_nan_bw": 83, "dump_tensor": 84, "elu": 85, "elu_bw": 86, "embedding_bw": 88, "empti": 89, "empty_lik": 90, "eq": 91, "eq_": 92, "eqz": 93, "erf": 94, "erf_bw": 95, "erfc": 96, "erfc_bw": 97, "erfinv": 98, "erfinv_bw": 99, "exp": 100, "exp2": 101, "exp2_bw": 102, "exp_bw": 103, "experiment": [104, 105, 106, 107, 108], "all_reduc": 104, "conv3d": 105, "dropout": 106, "gelu_bw": [107, 135], "rotary_embed": 108, "expm1": 109, "expm1_bw": 110, "fill": 111, "fill_bw": 112, "fill_ones_rm": 113, "fill_rm": 114, "fill_zero_bw": 115, "floor": 116, "floor_bw": 117, "floor_div": 118, "fmod": 119, "fmod_bw": 120, "format_input_tensor": 121, "format_output_tensor": 122, "frac": 123, "frac_bw": 124, "from_devic": 125, "from_torch": 126, "full": [127, 382, 383, 384, 385, 386, 387], "full_lik": 128, "gather": 129, "gcd": 130, "ge": 131, "ge_": 132, "geglu": 133, "gelu": 134, "gez": 136, "global_avg_pool2d": 137, "glu": 138, "group_norm": 139, "gt": 140, "gt_": 141, "gtz": 142, "hardshrink": 143, "hardshrink_bw": 144, "hardsigmoid": 145, "hardsigmoid_bw": 146, "hardswish": 147, "hardswish_bw": 148, "hardtanh": 149, "hardtanh_bw": 150, "heavisid": 151, "hypot": 152, "hypot_bw": 153, "i0": 154, "i0_bw": 155, "ident": 156, "imag": [157, 377, 385], "imag_bw": 158, "indexed_fil": 159, "is_imag": 160, "is_real": 161, "isclos": 162, "isfinit": 163, "isinf": 164, "isnan": 165, "isneginf": 166, "isposinf": 167, "kv_cach": [168, 169], "fill_cache_for_user_": 168, "update_cache_for_token_": 169, "l1_loss": 170, "layer_norm": 171, "input_tensor": [171, 262, 289, 315, 352], "residual_input_tensor": [171, 289], "weight": [171, 289, 385, 386, 387], "gamma": [171, 289], "bia": [171, 289], "beta": [171, 289], "stat": 171, "post_all_gath": 171, "onli": [171, 377], "output_tensor": [171, 262, 289, 315], "lcm": 172, "ldexp": 173, "ldexp_bw": 174, "le": 175, "le_": 176, "leaky_relu": 177, "leaky_relu_bw": 178, "lerp": 179, "lerp_bw": 180, "lez": 181, "lgamma": 182, "lgamma_bw": 183, "linear": 184, "load_tensor": 185, "log": [186, 389], "log10": 187, "log10_bw": 188, "log1p": 189, "log1p_bw": 190, "log2": 191, "log2_bw": 192, "log_bw": 193, "log_sigmoid": 194, "log_sigmoid_bw": 195, "logaddexp": 196, "logaddexp2": 197, "logaddexp2_bw": 198, "logaddexp_bw": 199, "logical_and": 200, "logical_and_": 201, "logical_not": 202, "logical_not_": 203, "logical_or": 204, "logical_or_": 205, "logical_xor": 206, "logical_xor_": 207, "logit": 208, "logit_bw": 209, "logiteps_bw": 210, "lt": 211, "lt_": 212, "ltz": 213, "mac": 214, "manage_devic": 215, "matmul": 216, "max": 217, "max_bw": 218, "max_pool2d": 219, "maximum": 220, "mean": 221, "min": 222, "min_bw": 223, "minimum": 224, "mish": 225, "model_preprocess": [226, 227], "preprocess_model": 226, "preprocess_model_paramet": 227, "moreh_sum": 228, "mse_loss": 229, "mul_bw": 230, "multigammaln": 231, "multigammaln_bw": 232, "multipli": 233, "ne": 234, "ne_": 235, "neg": 236, "neg_bw": 237, "nextaft": 238, "nez": 239, "nonzero": 240, "normalize_glob": 241, "normalize_hw": 242, "ones": 243, "ones_lik": 244, "open_devic": 245, "outer": 246, "pad": 247, "pad_to_tile_shap": 248, "permut": 249, "polar": 250, "polar_bw": 251, "polygamma": 252, "polygamma_bw": 253, "polyv": 254, "pow": 255, "pow_bw": 256, "prelu": 257, "prepare_conv_bia": 258, "prepare_conv_transpose2d_bia": 259, "prepare_conv_transpose2d_weight": 260, "prepare_conv_weight": 261, "prod": 262, "prod_bw": 263, "rad2deg": 264, "rad2deg_bw": 265, "rdiv": 266, "rdiv_bw": 267, "real": 268, "real_bw": 269, "realloc": 270, "reciproc": 271, "reciprocal_bw": 272, "reduce_scatt": 273, "register_post_operation_hook": 274, "register_pre_operation_hook": 275, "reglu": 276, "relu": 277, "relu6": 278, "relu6_bw": 279, "relu_bw": 280, "relu_max": 281, "relu_min": 282, "remaind": 283, "remainder_bw": 284, "repeat": 285, "repeat_bw": 286, "repeat_interleav": 287, "reshap": 288, "rms_norm": 289, "round": 290, "round_bw": 291, "rpow": 292, "rpow_bw": 293, "rsqrt": 294, "rsqrt_bw": 295, "rsub": 296, "rsub_bw": 297, "scatter": 298, "selu": 299, "selu_bw": 300, "set_printopt": 301, "sigmoid": 302, "sigmoid_accur": 303, "sigmoid_bw": 304, "sign": 305, "sign_bw": 306, "signbit": 307, "silu": 308, "silu_bw": 309, "sin": 310, "sin_bw": 311, "sinh": 312, "sinh_bw": 313, "slice": [314, 389], "softmax": 315, "mask": 315, "softplu": 316, "softplus_bw": 317, "softshrink": 318, "softshrink_bw": 319, "softsign": 320, "softsign_bw": 321, "sort": 322, "sqrt": 323, "sqrt_bw": 324, "squar": 325, "square_bw": 326, "squared_differ": 327, "squared_difference_bw": 328, "std": 329, "sub_bw": 330, "subalpha": 331, "subalpha_bw": 332, "subtract": 333, "sum": 334, "swiglu": 335, "swish": 336, "synchronize_devic": 337, "tan": 338, "tan_bw": 339, "tanh": 340, "tanh_bw": 341, "tanhshrink": 342, "tanhshrink_bw": 343, "threshold": 344, "threshold_bw": 345, "tiliz": 346, "tilize_with_val_pad": 347, "to_devic": 348, "to_layout": 349, "to_memory_config": 350, "to_torch": 351, "topk": 352, "attention_softmax": 353, "attention_softmax_": 354, "concatenate_head": 355, "scaled_dot_product_attent": 356, "scaled_dot_product_attention_decod": 357, "split_query_key_value_and_split_head": 358, "tril": 359, "triu": 360, "trunc": 361, "trunc_bw": 362, "unary_chain": 363, "until": 364, "untilize_with_unpad": 365, "upsampl": 366, "var": 367, "where": [368, 376], "where_bw": 369, "xlogi": 370, "xlogy_bw": 371, "zero": 372, "zeros_lik": 373, "convert": [374, 382, 384, 386, 389], "pytorch": 374, "rewrit": 374, "switch": 374, "3": [374, 377, 389], "optim": [374, 386], "more": [374, 384], "build": [375, 376, 377], "uplift": 375, "demo": [375, 376], "get": 376, "start": 376, "instal": [376, 377], "explor": 376, "our": 376, "To": [376, 377], "go": 376, "from": [376, 389], "here": 376, "prerequisit": [377, 388], "set": [377, 383], "up": 377, "hardwar": 377, "driver": 377, "firmwar": 377, "system": 377, "level": 377, "depend": 377, "kmd": 377, "updat": 377, "flash": 377, "manag": 377, "interfac": 377, "smi": 377, "multi": [377, 386], "card": 377, "configur": [377, 386], "topologi": 377, "metalium": 377, "There": 377, "four": 377, "latest": 377, "wheel": 377, "For": 377, "user": 377, "environ": 377, "docker": 377, "releas": 377, "sourc": 377, "repositori": 377, "librari": [377, 382, 383, 384, 385], "creat": [377, 383, 384], "virtual": 377, "anaconda": 377, "packag": 377, "you": 377, "all": [377, 389], "verifi": 377, "your": 377, "try": 377, "execut": 377, "program": [377, 389], "interest": 377, "machin": 377, "requir": [377, 380], "overview": 377, "why": 377, "It": 377, "matter": 377, "vm": 377, "onboard": 378, "profil": [379, 388], "perf": 379, "header": 379, "profile_thi": 379, "descript": 379, "us": [379, 386, 389], "perform": [379, 382, 388], "visual": [379, 388, 389], "shape": 380, "layout": 380, "type": 380, "width": 380, "limit": 380, "bfloat8_b": 380, "storag": 380, "shard": 380, "tutori": 381, "import": [382, 383, 384, 385, 387], "necessari": [382, 383, 384, 385], "open": [382, 383, 384, 385, 387], "tenstorr": [382, 383, 384, 385, 387], "addit": 382, "back": [382, 389], "close": [382, 383, 384, 385, 386, 387], "The": [382, 383, 384, 385, 387], "basic": [383, 384, 385, 389], "manual": 383, "seed": 383, "reproduc": 383, "forward": 383, "method": 383, "paramet": [383, 386], "run": [383, 386, 387, 388, 389], "host": 384, "tile": 384, "nativ": 384, "base": 384, "arithmet": 384, "simul": 384, "broadcast": 384, "row": 384, "vector": 384, "expans": 384, "mlp": 385, "infer": [385, 387], "load": [385, 387], "mnist": 385, "test": [385, 387], "pretrain": 385, "accuraci": 385, "track": 385, "loop": 385, "flatten": 385, "head": 386, "attent": 386, "write": 386, "initi": [386, 387], "activ": 386, "torch": [386, 389], "first": 386, "iter": 386, "subsequ": 386, "version": 386, "pre": [386, 389], "process": 386, "check": 386, "match": 386, "origin": 386, "simpl": 387, "cnn": 387, "cifar": 387, "10": [387, 389], "setup": 387, "dataset": 387, "defin": 387, "stage": 387, "sampl": 387, "gener": 388, "result": 388, "analysi": 388, "upload": 388, "tab": 388, "buffer": [388, 389], "graph": [388, 389], "recap": 388, "an": 389, "__getitem__": 389, "4": 389, "enabl": 389, "5": 389, "intermedi": 389, "6": 389, "trace": 389, "7": 389, "tt_lib": 389, "8": 389, "9": 389, "chang": 389, "string": 389, "represent": 389, "11": 389, "web": 389, "browser": 389, "12": 389, "regist": 389, "post": 389, "13": 389, "queri": 389, "14": 389, "fall": 389, "15": 389, "captur": 389, "alloc": 389, "etc": 389}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "What is TT-NN?": [[3, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[4, "adding-new-tt-nn-operation"]], "FAQ": [[4, "faq"]], "What is a TT-NN operation?": [[4, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[4, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[4, "c-implementation"]], "Step 1: Implement device operation": [[4, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[4, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[4, "python-implementation"]], "Step 1: Add Python binding": [[4, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[4, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[5, "apis"], [380, "apis"]], "Device": [[5, "device"]], "Memory Config": [[5, "memory-config"], [380, "memory-config"]], "Operations": [[5, "operations"]], "Core": [[5, "core"]], "Tensor Creation": [[5, "tensor-creation"], [382, "Tensor-Creation"]], "Matrix Multiplication": [[5, "matrix-multiplication"]], "Pointwise Unary": [[5, "pointwise-unary"]], "Pointwise Binary": [[5, "pointwise-binary"]], "Pointwise Ternary": [[5, "pointwise-ternary"]], "Losses": [[5, "losses"]], "Reduction": [[5, "reduction"]], "Data Movement": [[5, "data-movement"]], "Normalization": [[5, "normalization"]], "Moreh Operations": [[5, "moreh-operations"]], "Transformer": [[5, "transformer"]], "CCL": [[5, "ccl"]], "Embedding": [[5, "embedding"]], "Convolution": [[5, "convolution"]], "Pooling": [[5, "pooling"]], "Vision": [[5, "vision"]], "KV Cache": [[5, "kv-cache"]], "Model Conversion": [[5, "model-conversion"]], "Reports": [[5, "reports"]], "Operation Hooks": [[5, "operation-hooks"]], "ttnn.Conv2dConfig": [[6, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[7, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [60, null], [61, null], [62, null], [63, null], [64, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [106, null], [107, null], [109, null], [110, null], [111, null], [112, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [126, null], [127, null], [128, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [218, null], [219, null], [220, null], [223, null], [224, null], [225, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [250, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [276, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [288, null], [289, null], [290, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [299, null], [300, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [330, null], [331, null], [332, null], [333, null], [335, null], [336, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [345, null], [349, null], [350, null], [351, null], [352, null], [359, null], [360, null], [361, null], [362, null], [363, null], [368, null], [369, null], [370, null], [371, null], [372, null], [373, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[24, "ttnn-all-gather"]], "ttnn.alt_complex_rotate90": [[25, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[26, "ttnn-angle"]], "ttnn.angle_bw": [[27, "ttnn-angle-bw"]], "ttnn.arange": [[28, "ttnn-arange"]], "ttnn.argmax": [[29, "ttnn-argmax"]], "Input Tensor": [[29, "id2"], [217, "id2"], [221, "id2"], [222, "id2"], [329, "id2"], [334, "id2"], [367, "id2"]], "Output Tensor": [[29, "id3"]], "ttnn.as_tensor": [[30, "ttnn-as-tensor"]], "Examples": [[30, null], [301, null]], "ttnn.asin": [[31, "ttnn-asin"]], "ttnn.asin_bw": [[32, "ttnn-asin-bw"]], "ttnn.asinh": [[33, "ttnn-asinh"]], "ttnn.asinh_bw": [[34, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[35, "ttnn-assign-bw"]], "ttnn.atan": [[36, "ttnn-atan"]], "ttnn.atan2": [[37, "ttnn-atan2"]], "ttnn.atan2_bw": [[38, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[39, "ttnn-atan-bw"]], "ttnn.atanh": [[40, "ttnn-atanh"]], "ttnn.atanh_bw": [[41, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[42, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[43, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[44, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[45, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[46, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[47, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[48, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[49, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[50, "ttnn-cbrt"]], "ttnn.ceil": [[51, "ttnn-ceil"]], "ttnn.ceil_bw": [[52, "ttnn-ceil-bw"]], "ttnn.celu": [[53, "ttnn-celu"]], "ttnn.celu_bw": [[54, "ttnn-celu-bw"]], "ttnn.clamp": [[55, "ttnn-clamp"]], "ttnn.clamp_bw": [[56, "ttnn-clamp-bw"]], "ttnn.clip": [[57, "ttnn-clip"]], "ttnn.clip_bw": [[58, "ttnn-clip-bw"]], "ttnn.clone": [[59, "ttnn-clone"]], "ttnn.close_device": [[60, "ttnn-close-device"]], "ttnn.concat": [[61, "ttnn-concat"]], "ttnn.concat_bw": [[62, "ttnn-concat-bw"]], "ttnn.conj": [[63, "ttnn-conj"]], "ttnn.conj_bw": [[64, "ttnn-conj-bw"]], "ttnn.conv1d": [[65, "ttnn-conv1d"]], "ttnn.conv2d": [[66, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[67, "ttnn-conv-transpose2d"]], "ttnn.cos": [[68, "ttnn-cos"]], "ttnn.cos_bw": [[69, "ttnn-cos-bw"]], "ttnn.cosh": [[70, "ttnn-cosh"]], "ttnn.cosh_bw": [[71, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[72, "ttnn-create-sharded-memory-config"]], "ttnn.cumprod": [[73, "ttnn-cumprod"]], "ttnn.cumsum": [[74, "ttnn-cumsum"]], "ttnn.deallocate": [[75, "ttnn-deallocate"]], "ttnn.deg2rad": [[76, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[77, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[78, "ttnn-digamma"]], "ttnn.digamma_bw": [[79, "ttnn-digamma-bw"]], "ttnn.div": [[80, "ttnn-div"]], "ttnn.div_bw": [[81, "ttnn-div-bw"]], "ttnn.div_no_nan": [[82, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[83, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[84, "ttnn-dump-tensor"]], "ttnn.elu": [[85, "ttnn-elu"]], "ttnn.elu_bw": [[86, "ttnn-elu-bw"]], "ttnn.embedding": [[87, "ttnn-embedding"]], "ttnn.embedding_bw": [[88, "ttnn-embedding-bw"]], "ttnn.empty": [[89, "ttnn-empty"]], "ttnn.empty_like": [[90, "ttnn-empty-like"]], "ttnn.eq": [[91, "ttnn-eq"]], "ttnn.eq_": [[92, "ttnn-eq"]], "ttnn.eqz": [[93, "ttnn-eqz"]], "ttnn.erf": [[94, "ttnn-erf"]], "ttnn.erf_bw": [[95, "ttnn-erf-bw"]], "ttnn.erfc": [[96, "ttnn-erfc"]], "ttnn.erfc_bw": [[97, "ttnn-erfc-bw"]], "ttnn.erfinv": [[98, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[99, "ttnn-erfinv-bw"]], "ttnn.exp": [[100, "ttnn-exp"]], "ttnn.exp2": [[101, "ttnn-exp2"]], "ttnn.exp2_bw": [[102, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[103, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[104, "ttnn-experimental-all-reduce"]], "ttnn.experimental.conv3d": [[105, "ttnn-experimental-conv3d"]], "ttnn.experimental.dropout": [[106, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[107, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[108, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[109, "ttnn-expm1"]], "ttnn.expm1_bw": [[110, "ttnn-expm1-bw"]], "ttnn.fill": [[111, "ttnn-fill"]], "ttnn.fill_bw": [[112, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[113, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[114, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[115, "ttnn-fill-zero-bw"]], "ttnn.floor": [[116, "ttnn-floor"]], "ttnn.floor_bw": [[117, "ttnn-floor-bw"]], "ttnn.floor_div": [[118, "ttnn-floor-div"]], "ttnn.fmod": [[119, "ttnn-fmod"]], "ttnn.fmod_bw": [[120, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[121, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[122, "ttnn-format-output-tensor"]], "ttnn.frac": [[123, "ttnn-frac"]], "ttnn.frac_bw": [[124, "ttnn-frac-bw"]], "ttnn.from_device": [[125, "ttnn-from-device"]], "ttnn.from_torch": [[126, "ttnn-from-torch"]], "ttnn.full": [[127, "ttnn-full"]], "ttnn.full_like": [[128, "ttnn-full-like"]], "ttnn.gather": [[129, "ttnn-gather"]], "ttnn.gcd": [[130, "ttnn-gcd"]], "ttnn.ge": [[131, "ttnn-ge"]], "ttnn.ge_": [[132, "ttnn-ge"]], "ttnn.geglu": [[133, "ttnn-geglu"]], "ttnn.gelu": [[134, "ttnn-gelu"]], "ttnn.gelu_bw": [[135, "ttnn-gelu-bw"]], "ttnn.gez": [[136, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[137, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[138, "ttnn-glu"]], "ttnn.group_norm": [[139, "ttnn-group-norm"]], "ttnn.gt": [[140, "ttnn-gt"]], "ttnn.gt_": [[141, "ttnn-gt"]], "ttnn.gtz": [[142, "ttnn-gtz"]], "ttnn.hardshrink": [[143, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[144, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[145, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[146, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[147, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[148, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[149, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[150, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[151, "ttnn-heaviside"]], "ttnn.hypot": [[152, "ttnn-hypot"]], "ttnn.hypot_bw": [[153, "ttnn-hypot-bw"]], "ttnn.i0": [[154, "ttnn-i0"]], "ttnn.i0_bw": [[155, "ttnn-i0-bw"]], "ttnn.identity": [[156, "ttnn-identity"]], "ttnn.imag": [[157, "ttnn-imag"]], "ttnn.imag_bw": [[158, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[159, "ttnn-indexed-fill"]], "ttnn.is_imag": [[160, "ttnn-is-imag"]], "ttnn.is_real": [[161, "ttnn-is-real"]], "ttnn.isclose": [[162, "ttnn-isclose"]], "ttnn.isfinite": [[163, "ttnn-isfinite"]], "ttnn.isinf": [[164, "ttnn-isinf"]], "ttnn.isnan": [[165, "ttnn-isnan"]], "ttnn.isneginf": [[166, "ttnn-isneginf"]], "ttnn.isposinf": [[167, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[168, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[169, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[170, "ttnn-l1-loss"]], "ttnn.layer_norm": [[171, "ttnn-layer-norm"]], "input_tensor": [[171, "id2"], [262, "id2"], [289, "id2"], [315, "id2"], [352, "id2"]], "residual_input_tensor": [[171, "id3"], [289, "id3"]], "weight (gamma) and bias (beta)": [[171, "id4"], [289, "id4"]], "stats (POST_ALL_GATHER only)": [[171, "id5"]], "output_tensor": [[171, "id6"], [262, "id3"], [289, "id5"], [315, "id4"]], "ttnn.lcm": [[172, "ttnn-lcm"]], "ttnn.ldexp": [[173, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[174, "ttnn-ldexp-bw"]], "ttnn.le": [[175, "ttnn-le"]], "ttnn.le_": [[176, "ttnn-le"]], "ttnn.leaky_relu": [[177, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[178, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[179, "ttnn-lerp"]], "ttnn.lerp_bw": [[180, "ttnn-lerp-bw"]], "ttnn.lez": [[181, "ttnn-lez"]], "ttnn.lgamma": [[182, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[183, "ttnn-lgamma-bw"]], "ttnn.linear": [[184, "ttnn-linear"]], "ttnn.load_tensor": [[185, "ttnn-load-tensor"]], "ttnn.log": [[186, "ttnn-log"]], "ttnn.log10": [[187, "ttnn-log10"]], "ttnn.log10_bw": [[188, "ttnn-log10-bw"]], "ttnn.log1p": [[189, "ttnn-log1p"]], "ttnn.log1p_bw": [[190, "ttnn-log1p-bw"]], "ttnn.log2": [[191, "ttnn-log2"]], "ttnn.log2_bw": [[192, "ttnn-log2-bw"]], "ttnn.log_bw": [[193, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[194, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[195, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[196, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[197, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[198, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[199, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[200, "ttnn-logical-and"]], "ttnn.logical_and_": [[201, "ttnn-logical-and"]], "ttnn.logical_not": [[202, "ttnn-logical-not"]], "ttnn.logical_not_": [[203, "ttnn-logical-not"]], "ttnn.logical_or": [[204, "ttnn-logical-or"]], "ttnn.logical_or_": [[205, "ttnn-logical-or"]], "ttnn.logical_xor": [[206, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[207, "ttnn-logical-xor"]], "ttnn.logit": [[208, "ttnn-logit"]], "ttnn.logit_bw": [[209, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[210, "ttnn-logiteps-bw"]], "ttnn.lt": [[211, "ttnn-lt"]], "ttnn.lt_": [[212, "ttnn-lt"]], "ttnn.ltz": [[213, "ttnn-ltz"]], "ttnn.mac": [[214, "ttnn-mac"]], "ttnn.manage_device": [[215, "ttnn-manage-device"]], "ttnn.matmul": [[216, "ttnn-matmul"]], "ttnn.max": [[217, "ttnn-max"]], "ttnn.max_bw": [[218, "ttnn-max-bw"]], "ttnn.max_pool2d": [[219, "ttnn-max-pool2d"]], "ttnn.maximum": [[220, "ttnn-maximum"]], "ttnn.mean": [[221, "ttnn-mean"]], "ttnn.min": [[222, "ttnn-min"]], "ttnn.min_bw": [[223, "ttnn-min-bw"]], "ttnn.minimum": [[224, "ttnn-minimum"]], "ttnn.mish": [[225, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[226, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[227, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[228, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[229, "ttnn-mse-loss"]], "ttnn.mul_bw": [[230, "ttnn-mul-bw"]], "ttnn.multigammaln": [[231, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[232, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[233, "ttnn-multiply"]], "ttnn.ne": [[234, "ttnn-ne"]], "ttnn.ne_": [[235, "ttnn-ne"]], "ttnn.neg": [[236, "ttnn-neg"]], "ttnn.neg_bw": [[237, "ttnn-neg-bw"]], "ttnn.nextafter": [[238, "ttnn-nextafter"]], "ttnn.nez": [[239, "ttnn-nez"]], "ttnn.nonzero": [[240, "ttnn-nonzero"]], "ttnn.normalize_global": [[241, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[242, "ttnn-normalize-hw"]], "ttnn.ones": [[243, "ttnn-ones"]], "ttnn.ones_like": [[244, "ttnn-ones-like"]], "ttnn.open_device": [[245, "ttnn-open-device"]], "ttnn.outer": [[246, "ttnn-outer"]], "ttnn.pad": [[247, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[248, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[249, "ttnn-permute"]], "ttnn.polar": [[250, "ttnn-polar"]], "ttnn.polar_bw": [[251, "ttnn-polar-bw"]], "ttnn.polygamma": [[252, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[253, "ttnn-polygamma-bw"]], "ttnn.polyval": [[254, "ttnn-polyval"]], "ttnn.pow": [[255, "ttnn-pow"]], "ttnn.pow_bw": [[256, "ttnn-pow-bw"]], "ttnn.prelu": [[257, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[258, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[259, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[260, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[261, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[262, "ttnn-prod"]], "ttnn.prod_bw": [[263, "ttnn-prod-bw"]], "ttnn.rad2deg": [[264, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[265, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[266, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[267, "ttnn-rdiv-bw"]], "ttnn.real": [[268, "ttnn-real"]], "ttnn.real_bw": [[269, "ttnn-real-bw"]], "ttnn.reallocate": [[270, "ttnn-reallocate"]], "ttnn.reciprocal": [[271, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[272, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[273, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[274, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[275, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[276, "ttnn-reglu"]], "ttnn.relu": [[277, "ttnn-relu"]], "ttnn.relu6": [[278, "ttnn-relu6"]], "ttnn.relu6_bw": [[279, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[280, "ttnn-relu-bw"]], "ttnn.relu_max": [[281, "ttnn-relu-max"]], "ttnn.relu_min": [[282, "ttnn-relu-min"]], "ttnn.remainder": [[283, "ttnn-remainder"]], "ttnn.remainder_bw": [[284, "ttnn-remainder-bw"]], "ttnn.repeat": [[285, "ttnn-repeat"]], "ttnn.repeat_bw": [[286, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[287, "ttnn-repeat-interleave"]], "ttnn.reshape": [[288, "ttnn-reshape"]], "ttnn.rms_norm": [[289, "ttnn-rms-norm"]], "ttnn.round": [[290, "ttnn-round"]], "ttnn.round_bw": [[291, "ttnn-round-bw"]], "ttnn.rpow": [[292, "ttnn-rpow"]], "ttnn.rpow_bw": [[293, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[294, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[295, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[296, "ttnn-rsub"]], "ttnn.rsub_bw": [[297, "ttnn-rsub-bw"]], "ttnn.scatter": [[298, "ttnn-scatter"]], "ttnn.selu": [[299, "ttnn-selu"]], "ttnn.selu_bw": [[300, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[301, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[302, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[303, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[304, "ttnn-sigmoid-bw"]], "ttnn.sign": [[305, "ttnn-sign"]], "ttnn.sign_bw": [[306, "ttnn-sign-bw"]], "ttnn.signbit": [[307, "ttnn-signbit"]], "ttnn.silu": [[308, "ttnn-silu"]], "ttnn.silu_bw": [[309, "ttnn-silu-bw"]], "ttnn.sin": [[310, "ttnn-sin"]], "ttnn.sin_bw": [[311, "ttnn-sin-bw"]], "ttnn.sinh": [[312, "ttnn-sinh"]], "ttnn.sinh_bw": [[313, "ttnn-sinh-bw"]], "ttnn.slice": [[314, "ttnn-slice"]], "ttnn.softmax": [[315, "ttnn-softmax"]], "mask (optional)": [[315, "id3"]], "ttnn.softplus": [[316, "ttnn-softplus"]], "ttnn.softplus_bw": [[317, "ttnn-softplus-bw"]], "ttnn.softshrink": [[318, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[319, "ttnn-softshrink-bw"]], "ttnn.softsign": [[320, "ttnn-softsign"]], "ttnn.softsign_bw": [[321, "ttnn-softsign-bw"]], "ttnn.sort": [[322, "ttnn-sort"]], "ttnn.sqrt": [[323, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[324, "ttnn-sqrt-bw"]], "ttnn.square": [[325, "ttnn-square"]], "ttnn.square_bw": [[326, "ttnn-square-bw"]], "ttnn.squared_difference": [[327, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[328, "ttnn-squared-difference-bw"]], "ttnn.std": [[329, "ttnn-std"]], "ttnn.sub_bw": [[330, "ttnn-sub-bw"]], "ttnn.subalpha": [[331, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[332, "ttnn-subalpha-bw"]], "ttnn.subtract": [[333, "ttnn-subtract"]], "ttnn.sum": [[334, "ttnn-sum"]], "ttnn.swiglu": [[335, "ttnn-swiglu"]], "ttnn.swish": [[336, "ttnn-swish"]], "ttnn.synchronize_device": [[337, "ttnn-synchronize-device"]], "ttnn.tan": [[338, "ttnn-tan"]], "ttnn.tan_bw": [[339, "ttnn-tan-bw"]], "ttnn.tanh": [[340, "ttnn-tanh"]], "ttnn.tanh_bw": [[341, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[342, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[343, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[344, "ttnn-threshold"]], "ttnn.threshold_bw": [[345, "ttnn-threshold-bw"]], "ttnn.tilize": [[346, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[347, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[348, "ttnn-to-device"]], "ttnn.to_layout": [[349, "ttnn-to-layout"]], "ttnn.to_memory_config": [[350, "ttnn-to-memory-config"]], "ttnn.to_torch": [[351, "ttnn-to-torch"]], "ttnn.topk": [[352, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[353, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[354, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[355, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[356, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[357, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[358, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[359, "ttnn-tril"]], "ttnn.triu": [[360, "ttnn-triu"]], "ttnn.trunc": [[361, "ttnn-trunc"]], "ttnn.trunc_bw": [[362, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[363, "ttnn-unary-chain"]], "ttnn.untilize": [[364, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[365, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[366, "ttnn-upsample"]], "ttnn.var": [[367, "ttnn-var"]], "ttnn.where": [[368, "ttnn-where"]], "ttnn.where_bw": [[369, "ttnn-where-bw"]], "ttnn.xlogy": [[370, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[371, "ttnn-xlogy-bw"]], "ttnn.zeros": [[372, "ttnn-zeros"]], "ttnn.zeros_like": [[373, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[374, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[374, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[374, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[374, "step-3-optimizing-the-model"]], "More examples": [[374, "more-examples"]], "Building and Uplifting Demos": [[375, "building-and-uplifting-demos"]], "Getting Started": [[376, "getting-started"]], "1. Install and Build": [[376, "install-and-build"]], "2. Explore Our Model Demos": [[376, "explore-our-model-demos"]], "Where To Go From Here": [[376, "where-to-go-from-here"]], "Install": [[377, "install"]], "Prerequisites:": [[377, "prerequisites"]], "1: Set Up the Hardware": [[377, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[377, "install-driver-firmware"]], "Install System-level Dependencies": [[377, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[377, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[377, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[377, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[377, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[377, "tt-nn-tt-metalium-installation"]], "There are four options for installing TT-Metalium:": [[377, "there-are-four-options-for-installing-tt-metalium"]], "Binaries": [[377, "binaries"]], "Step 1. Install the Latest Wheel:": [[377, "step-1-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[377, "step-2-for-models-users-only-set-up-environment-for-models"]], "Docker Release Image": [[377, "docker-release-image"]], "Source": [[377, "source"]], "Step 1. Clone the Repository:": [[377, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[377, "step-2-build-the-library"]], "Step 3. Create a virtual environment and (optional) documentation.": [[377, "step-3-create-a-virtual-environment-and-optional-documentation"]], "Anaconda": [[377, "anaconda"]], "Step 1. Install the Latest Package:": [[377, "step-1-install-the-latest-package"]], "You are All Set!": [[377, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[377, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[377, "interested-in-contributing"]], "Virtual Machine Requirements": [[377, "virtual-machine-requirements"]], "Overview": [[377, "overview"]], "Why It Matters": [[377, "why-it-matters"]], "Requirements for VMs": [[377, "requirements-for-vms"]], "Onboarding New Functionality": [[378, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[379, "profiling-tt-nn-operations"]], "Perf Report Headers": [[379, "perf-report-headers"]], "profile_this description": [[379, "profile-this-description"]], "Using the Performance Report with TT-NN Visualizer": [[379, "using-the-performance-report-with-tt-nn-visualizer"]], "Tensor": [[380, "tensor"]], "Shape": [[380, "shape"]], "Layout": [[380, "layout"]], "Data Type": [[380, "data-type"]], "Required Width Multiples for Data Types": [[380, "id5"]], "Limitation of BFLOAT8_B": [[380, "limitation-of-bfloat8-b"]], "Storage": [[380, "storage"]], "Tensor Sharding": [[380, "tensor-sharding"]], "Tutorials": [[381, "tutorials"]], "Add Tensors": [[382, "Add-Tensors"]], "Import the necessary libraries": [[382, "Import-the-necessary-libraries"], [383, "Import-the-necessary-libraries"], [384, "Import-the-necessary-libraries"], [385, "Import-the-necessary-libraries"]], "Open Tenstorrent device": [[382, "Open-Tenstorrent-device"], [383, "Open-Tenstorrent-device"], [384, "Open-Tenstorrent-device"], [385, "Open-Tenstorrent-device"], [387, "Open-Tenstorrent-device"]], "Perform the addition operation and convert back": [[382, "Perform-the-addition-operation-and-convert-back"]], "Close The Device": [[382, "Close-The-Device"], [383, "Close-The-Device"], [384, "Close-The-Device"], [385, "Close-The-Device"], [387, "Close-The-Device"]], "Full example and output": [[382, "Full-example-and-output"], [383, "Full-example-and-output"], [384, "Full-example-and-output"], [385, "Full-example-and-output"], [386, "Full-example-and-output"], [387, "Full-example-and-output"]], "Basic Convolution": [[383, "Basic-Convolution"]], "Set manual seed for reproducibility": [[383, "Set-manual-seed-for-reproducibility"]], "Create forward method": [[383, "Create-forward-method"]], "Set input and convolution parameters": [[383, "Set-input-and-convolution-parameters"]], "Create tensors": [[383, "Create-tensors"]], "Run convolution operation": [[383, "Run-convolution-operation"]], "More Basic Tensor Operations": [[384, "More-Basic-Tensor-Operations"]], "Host Tensor Creation": [[384, "Host-Tensor-Creation"]], "Convert Host Tensors to TT-NN Tiled Tensors or Create Natively on Device": [[384, "Convert-Host-Tensors-to-TT-NN-Tiled-Tensors-or-Create-Natively-on-Device"]], "Tile-Based Arithmetic Operations": [[384, "Tile-Based-Arithmetic-Operations"]], "Simulated Broadcasting (Row Vector Expansion)": [[384, "Simulated-Broadcasting-(Row-Vector-Expansion)"]], "MLP Inference": [[385, "MLP-Inference"]], "Load MNIST Test Data": [[385, "Load-MNIST-Test-Data"]], "Load Pretrained MLP Weights": [[385, "Load-Pretrained-MLP-Weights"]], "Basic accuracy tracking, inference, loop, and image flattening": [[385, "Basic-accuracy-tracking,-inference,-loop,-and-image-flattening"]], "Multi-Head Attention": [[386, "Multi-Head-Attention"]], "Write Multi-Head Attention using ttnn": [[386, "Write-Multi-Head-Attention-using-ttnn"]], "Configuration": [[386, "Configuration"]], "Initialize activations and weights using torch": [[386, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[386, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[386, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[386, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[386, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[386, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[386, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[386, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[386, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Close the device": [[386, "Close-the-device"]], "Running a Simple CNN Inference on CIFAR-10": [[387, "Running-a-Simple-CNN-Inference-on-CIFAR-10"]], "Setup and Imports": [[387, "Setup-and-Imports"]], "Load CIFAR-10 Dataset": [[387, "Load-CIFAR-10-Dataset"]], "Load or Initialize Weights": [[387, "Load-or-Initialize-Weights"]], "Define Convolution + Pooling Stage": [[387, "Define-Convolution-+-Pooling-Stage"]], "Run Inference on Test Samples": [[387, "Run-Inference-on-Test-Samples"]], "TT-NN Visualizer": [[388, "tt-nn-visualizer"]], "Prerequisites": [[388, "prerequisites"]], "Running TTNN Visualizer": [[388, "running-ttnn-visualizer"]], "Model Profiling": [[388, "model-profiling"]], "Generating the Memory Report": [[388, "generating-the-memory-report"]], "Generating the Performance Report": [[388, "generating-the-performance-report"]], "Result Analysis": [[388, "result-analysis"]], "Uploading Reports": [[388, "uploading-reports"]], "Operations Tab": [[388, "operations-tab"]], "Tensors Tab": [[388, "tensors-tab"]], "Buffers Tab": [[388, "buffers-tab"]], "Graph Tab": [[388, "graph-tab"]], "Performance Tab": [[388, "performance-tab"]], "Recap": [[388, "recap"]], "Using TT-NN": [[389, "using-tt-nn"]], "Basic Examples": [[389, "basic-examples"]], "1. Converting from and to torch tensor": [[389, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[389, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[389, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[389, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[389, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[389, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[389, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[389, "enabling-logging"]], "9. Supported Python Operators": [[389, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[389, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[389, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[389, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[389, "query-all-operations"]], "14. Falling back to torch": [[389, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[389, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[6, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.activation"]], "core_grid (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.deallocate_activation"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "full_inner_dim (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.full_inner_dim"]], "in_place (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.override_sharding_config"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add (in module ttnn)": [[16, "ttnn.add"]], "add_bw (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "all_gather (in module ttnn)": [[24, "ttnn.all_gather"]], "alt_complex_rotate90 (in module ttnn)": [[25, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[26, "ttnn.angle"]], "angle_bw (in module ttnn)": [[27, "ttnn.angle_bw"]], "arange (in module ttnn)": [[28, "ttnn.arange"]], "argmax (in module ttnn)": [[29, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[30, "ttnn.as_tensor"]], "asin (in module ttnn)": [[31, "ttnn.asin"]], "asin_bw (in module ttnn)": [[32, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[33, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[34, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[35, "ttnn.assign_bw"]], "atan (in module ttnn)": [[36, "ttnn.atan"]], "atan2 (in module ttnn)": [[37, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[38, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[39, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[40, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[41, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[42, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[43, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[44, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[45, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[46, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[47, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[48, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[49, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[50, "ttnn.cbrt"]], "ceil (in module ttnn)": [[51, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[52, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[53, "ttnn.celu"]], "celu_bw (in module ttnn)": [[54, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[55, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[56, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[57, "ttnn.clip"]], "clip_bw (in module ttnn)": [[58, "ttnn.clip_bw"]], "clone (in module ttnn)": [[59, "ttnn.clone"]], "close_device() (in module ttnn)": [[60, "ttnn.close_device"]], "concat (in module ttnn)": [[61, "ttnn.concat"]], "concat_bw (in module ttnn)": [[62, "ttnn.concat_bw"]], "conj (in module ttnn)": [[63, "ttnn.conj"]], "conj_bw (in module ttnn)": [[64, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[65, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[66, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[67, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[68, "ttnn.cos"]], "cos_bw (in module ttnn)": [[69, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[70, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[71, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[72, "ttnn.create_sharded_memory_config"]], "cumprod (in module ttnn)": [[73, "ttnn.cumprod"]], "cumsum (in module ttnn)": [[74, "ttnn.cumsum"]], "deallocate (in module ttnn)": [[75, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[76, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[77, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[78, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[79, "ttnn.digamma_bw"]], "div (in module ttnn)": [[80, "ttnn.div"]], "div_bw (in module ttnn)": [[81, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[82, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[83, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[84, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[85, "ttnn.elu"]], "elu_bw (in module ttnn)": [[86, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[87, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[88, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[89, "ttnn.empty"]], "empty_like (in module ttnn)": [[90, "ttnn.empty_like"]], "eq (in module ttnn)": [[91, "ttnn.eq"]], "eq_ (in module ttnn)": [[92, "ttnn.eq_"]], "eqz (in module ttnn)": [[93, "ttnn.eqz"]], "erf (in module ttnn)": [[94, "ttnn.erf"]], "erf_bw (in module ttnn)": [[95, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[96, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[97, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[98, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[99, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[100, "ttnn.exp"]], "exp2 (in module ttnn)": [[101, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[102, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[103, "ttnn.exp_bw"]], "all_reduce (in module ttnn.experimental)": [[104, "ttnn.experimental.all_reduce"]], "conv3d (in module ttnn.experimental)": [[105, "ttnn.experimental.conv3d"]], "dropout (in module ttnn.experimental)": [[106, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[107, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[108, "ttnn.experimental.rotary_embedding"]], "expm1 (in module ttnn)": [[109, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[110, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[111, "ttnn.fill"]], "fill_bw (in module ttnn)": [[112, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[113, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[114, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[115, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[116, "ttnn.floor"]], "floor_bw (in module ttnn)": [[117, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[118, "ttnn.floor_div"]], "fmod (in module ttnn)": [[119, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[120, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[121, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[122, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[123, "ttnn.frac"]], "frac_bw (in module ttnn)": [[124, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[125, "ttnn.from_device"]], "from_torch (in module ttnn)": [[126, "ttnn.from_torch"]], "full (in module ttnn)": [[127, "ttnn.full"]], "full_like (in module ttnn)": [[128, "ttnn.full_like"]], "gather (in module ttnn)": [[129, "ttnn.gather"]], "gcd (in module ttnn)": [[130, "ttnn.gcd"]], "ge (in module ttnn)": [[131, "ttnn.ge"]], "ge_ (in module ttnn)": [[132, "ttnn.ge_"]], "geglu (in module ttnn)": [[133, "ttnn.geglu"]], "gelu (in module ttnn)": [[134, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[135, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[136, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[137, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[138, "ttnn.glu"]], "group_norm (in module ttnn)": [[139, "ttnn.group_norm"]], "gt (in module ttnn)": [[140, "ttnn.gt"]], "gt_ (in module ttnn)": [[141, "ttnn.gt_"]], "gtz (in module ttnn)": [[142, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[143, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[144, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[145, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[146, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[147, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[148, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[149, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[150, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[151, "ttnn.heaviside"]], "hypot (in module ttnn)": [[152, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[153, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[154, "ttnn.i0"]], "i0_bw (in module ttnn)": [[155, "ttnn.i0_bw"]], "identity (in module ttnn)": [[156, "ttnn.identity"]], "imag (in module ttnn)": [[157, "ttnn.imag"]], "imag_bw (in module ttnn)": [[158, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[159, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[160, "ttnn.is_imag"]], "is_real (in module ttnn)": [[161, "ttnn.is_real"]], "isclose (in module ttnn)": [[162, "ttnn.isclose"]], "isfinite (in module ttnn)": [[163, "ttnn.isfinite"]], "isinf (in module ttnn)": [[164, "ttnn.isinf"]], "isnan (in module ttnn)": [[165, "ttnn.isnan"]], "isneginf (in module ttnn)": [[166, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[167, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[168, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[169, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[170, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[171, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[172, "ttnn.lcm"]], "ldexp (in module ttnn)": [[173, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[174, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[175, "ttnn.le"]], "le_ (in module ttnn)": [[176, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[177, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[178, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[179, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[180, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[181, "ttnn.lez"]], "lgamma (in module ttnn)": [[182, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[183, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[184, "ttnn.linear"]], "load_tensor (in module ttnn)": [[185, "ttnn.load_tensor"]], "log (in module ttnn)": [[186, "ttnn.log"]], "log10 (in module ttnn)": [[187, "ttnn.log10"]], "log10_bw (in module ttnn)": [[188, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[189, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[190, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[191, "ttnn.log2"]], "log2_bw (in module ttnn)": [[192, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[193, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[194, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[195, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[196, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[197, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[198, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[199, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[200, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[201, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[202, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[203, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[204, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[205, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[206, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[207, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[208, "ttnn.logit"]], "logit_bw (in module ttnn)": [[209, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[210, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[211, "ttnn.lt"]], "lt_ (in module ttnn)": [[212, "ttnn.lt_"]], "ltz (in module ttnn)": [[213, "ttnn.ltz"]], "mac (in module ttnn)": [[214, "ttnn.mac"]], "manage_device() (in module ttnn)": [[215, "ttnn.manage_device"]], "matmul (in module ttnn)": [[216, "ttnn.matmul"]], "max (in module ttnn)": [[217, "ttnn.max"]], "max_bw (in module ttnn)": [[218, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[219, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[220, "ttnn.maximum"]], "mean (in module ttnn)": [[221, "ttnn.mean"]], "min (in module ttnn)": [[222, "ttnn.min"]], "min_bw (in module ttnn)": [[223, "ttnn.min_bw"]], "minimum (in module ttnn)": [[224, "ttnn.minimum"]], "mish (in module ttnn)": [[225, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[226, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[227, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[228, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[229, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[230, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[231, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[232, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[233, "ttnn.multiply"]], "ne (in module ttnn)": [[234, "ttnn.ne"]], "ne_ (in module ttnn)": [[235, "ttnn.ne_"]], "neg (in module ttnn)": [[236, "ttnn.neg"]], "neg_bw (in module ttnn)": [[237, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[238, "ttnn.nextafter"]], "nez (in module ttnn)": [[239, "ttnn.nez"]], "nonzero (in module ttnn)": [[240, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[241, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[242, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[243, "ttnn.ones"]], "ones_like (in module ttnn)": [[244, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[245, "ttnn.open_device"]], "outer (in module ttnn)": [[246, "ttnn.outer"]], "pad (in module ttnn)": [[247, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[248, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[249, "ttnn.permute"]], "polar (in module ttnn)": [[250, "ttnn.polar"]], "polar_bw (in module ttnn)": [[251, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[252, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[253, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[254, "ttnn.polyval"]], "pow (in module ttnn)": [[255, "ttnn.pow"]], "pow_bw (in module ttnn)": [[256, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[257, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[258, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[259, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[260, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[261, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[262, "ttnn.prod"]], "prod_bw (in module ttnn)": [[263, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[264, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[265, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[266, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[267, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[268, "ttnn.real"]], "real_bw (in module ttnn)": [[269, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[270, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[271, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[272, "ttnn.reciprocal_bw"]], "reduce_scatter (in module ttnn)": [[273, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[274, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[275, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[276, "ttnn.reglu"]], "relu (in module ttnn)": [[277, "ttnn.relu"]], "relu6 (in module ttnn)": [[278, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[279, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[280, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[281, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[282, "ttnn.relu_min"]], "remainder (in module ttnn)": [[283, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[284, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[285, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[286, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[287, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[288, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[289, "ttnn.rms_norm"]], "round (in module ttnn)": [[290, "ttnn.round"]], "round_bw (in module ttnn)": [[291, "ttnn.round_bw"]], "rpow (in module ttnn)": [[292, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[293, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[294, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[295, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[296, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[297, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[298, "ttnn.scatter"]], "selu (in module ttnn)": [[299, "ttnn.selu"]], "selu_bw (in module ttnn)": [[300, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[301, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[302, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[303, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[304, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[305, "ttnn.sign"]], "sign_bw (in module ttnn)": [[306, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[307, "ttnn.signbit"]], "silu (in module ttnn)": [[308, "ttnn.silu"]], "silu_bw (in module ttnn)": [[309, "ttnn.silu_bw"]], "sin (in module ttnn)": [[310, "ttnn.sin"]], "sin_bw (in module ttnn)": [[311, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[312, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[313, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[314, "ttnn.slice"]], "softmax (in module ttnn)": [[315, "ttnn.softmax"]], "softplus (in module ttnn)": [[316, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[317, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[318, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[319, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[320, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[321, "ttnn.softsign_bw"]], "sort (in module ttnn)": [[322, "ttnn.sort"]], "sqrt (in module ttnn)": [[323, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[324, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[325, "ttnn.square"]], "square_bw (in module ttnn)": [[326, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[327, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[328, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[329, "ttnn.std"]], "sub_bw (in module ttnn)": [[330, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[331, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[332, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[333, "ttnn.subtract"]], "sum (in module ttnn)": [[334, "ttnn.sum"]], "swiglu (in module ttnn)": [[335, "ttnn.swiglu"]], "swish (in module ttnn)": [[336, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[337, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[338, "ttnn.tan"]], "tan_bw (in module ttnn)": [[339, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[340, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[341, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[342, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[343, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[344, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[345, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[346, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[347, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[348, "ttnn.to_device"]], "to_layout (in module ttnn)": [[349, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[350, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[351, "ttnn.to_torch"]], "topk (in module ttnn)": [[352, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[353, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[354, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[355, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[356, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[357, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[358, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[359, "ttnn.tril"]], "triu (in module ttnn)": [[360, "ttnn.triu"]], "trunc (in module ttnn)": [[361, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[362, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[363, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[364, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[365, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[366, "ttnn.upsample"]], "var (in module ttnn)": [[367, "ttnn.var"]], "where (in module ttnn)": [[368, "ttnn.where"]], "where_bw (in module ttnn)": [[369, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[370, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[371, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[372, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[373, "ttnn.zeros_like"]], "shape (class in ttnn)": [[380, "ttnn.Shape"]], "rank (ttnn.shape property)": [[380, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[380, "ttnn.Shape.to_rank"]]}})