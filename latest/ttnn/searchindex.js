Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.cumprod", "ttnn/api/ttnn.cumsum", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gather", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sort", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.cumprod.rst", "ttnn/api/ttnn.cumsum.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gather.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sort.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer.md", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.cumprod", "ttnn.cumsum", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.conv3d", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gather", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sort", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Add Tensors", "Basic Convolution", "More Basic Tensor Operations", "MLP Inference", "Multi-Head Attention", "Running a Simple CNN Inference on CIFAR-10", "TT-NN Visualizer", "Using TT-NN"], "terms": {"what": [0, 372, 376, 385], "i": [0, 6, 7, 8, 9, 17, 19, 28, 37, 41, 42, 45, 59, 60, 61, 66, 71, 79, 80, 86, 87, 90, 106, 109, 111, 112, 119, 120, 122, 124, 127, 129, 131, 135, 136, 137, 138, 151, 153, 158, 159, 169, 172, 173, 178, 182, 196, 197, 198, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 230, 232, 243, 245, 246, 248, 250, 252, 253, 255, 260, 261, 264, 269, 271, 272, 273, 278, 279, 284, 285, 286, 289, 294, 295, 311, 312, 319, 325, 326, 327, 329, 331, 332, 334, 335, 336, 337, 339, 346, 348, 349, 350, 351, 353, 354, 355, 363, 364, 368, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386], "get": [0, 6, 8, 299, 352, 371, 374, 378, 380, 385], "start": [0, 27, 177, 311, 371, 374, 376, 378, 383, 385], "1": [0, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 70, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 263, 264, 265, 266, 267, 269, 270, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 353, 354, 355, 359, 364, 365, 366, 367, 368, 369, 370, 375, 377, 379, 380, 381, 382, 383, 384, 385], "instal": [0, 372, 376, 378, 385, 386], "build": [0, 380, 385], "2": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 260, 262, 263, 264, 265, 267, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 348, 353, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 382, 383, 384], "explor": [0, 385], "our": [0, 372, 374, 375, 377, 379, 380, 381, 382, 384], "model": [0, 3, 224, 225, 372, 375, 376, 378, 379, 380, 382, 384], "demo": [0, 374, 376, 385], "where": [0, 2, 6, 27, 41, 66, 71, 88, 89, 119, 120, 137, 169, 182, 214, 238, 255, 295, 346, 366, 372, 376, 377, 384, 385], "To": [0, 6, 349, 375, 377, 378, 381, 385, 386], "go": [0, 295], "from": [0, 2, 4, 6, 27, 29, 59, 60, 64, 65, 66, 72, 73, 87, 124, 127, 166, 167, 183, 256, 257, 258, 259, 293, 294, 295, 330, 362, 371, 372, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385], "here": [0, 2, 4, 374, 376, 379, 380, 381, 382, 384, 385], "prerequisit": [0, 378], "set": [0, 6, 9, 60, 66, 111, 214, 230, 247, 256, 257, 260, 298, 334, 349, 352, 355, 371, 376, 378, 382, 384, 385, 386], "up": [0, 3, 112, 295, 376, 378, 380, 384], "hardwar": [0, 2, 4, 243, 371, 372, 373, 377, 379, 382, 384, 385, 386], "softwar": [0, 380, 381, 382, 383, 384], "depend": [0, 256, 257, 258, 259, 346, 372, 376, 377, 378], "option": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 380, 384, 385, 386], "script": [0, 372, 376, 378, 379, 380, 381, 382, 383, 384], "recommend": [0, 6, 172, 371, 378, 385, 386], "manual": [0, 4, 371, 378, 386], "metalium": [0, 4], "There": [0, 4, 214, 371, 377], "ar": [0, 6, 7, 9, 17, 36, 41, 44, 47, 58, 60, 72, 73, 80, 112, 127, 137, 169, 182, 214, 217, 238, 247, 253, 271, 272, 289, 311, 312, 334, 349, 355, 363, 371, 372, 373, 376, 377, 378, 380, 382, 383, 384, 385, 386], "four": 0, "binari": [0, 16, 18, 36, 43, 44, 46, 47, 48, 79, 81, 90, 91, 116, 117, 128, 129, 130, 138, 139, 150, 160, 170, 171, 173, 174, 194, 195, 198, 199, 202, 203, 204, 205, 209, 210, 218, 222, 231, 232, 233, 236, 244, 252, 253, 255, 280, 293, 324, 328, 330, 367], "step": [0, 27, 311, 372, 375, 385], "latest": [0, 376], "wheel": [0, 386], "For": [0, 4, 6, 11, 21, 29, 42, 65, 72, 73, 80, 118, 124, 127, 133, 151, 178, 186, 188, 190, 191, 193, 196, 197, 207, 208, 214, 254, 261, 265, 270, 281, 314, 319, 321, 349, 355, 368, 371, 372, 375, 376, 377, 380, 382, 384, 385], "user": [0, 4, 6, 154, 182, 214, 224, 225, 243, 344, 372, 373, 375, 380, 381, 382, 383, 384, 385], "onli": [0, 4, 6, 7, 17, 19, 20, 22, 28, 37, 42, 54, 55, 56, 57, 60, 61, 71, 79, 80, 87, 112, 124, 129, 131, 136, 137, 138, 151, 172, 173, 177, 178, 196, 197, 198, 209, 212, 214, 215, 216, 219, 220, 221, 228, 245, 250, 258, 259, 269, 273, 281, 294, 325, 326, 327, 329, 331, 332, 334, 337, 339, 354, 355, 364, 365, 368, 371, 372, 376, 377, 384, 385, 386], "environ": [0, 6, 373, 378, 385, 386], "docker": [0, 386], "releas": [0, 74, 386], "imag": [0, 66, 158, 248, 372, 376, 377, 378, 380, 384, 386], "sourc": [0, 3, 127, 166, 295, 385], "clone": [0, 154, 355, 385], "repositori": [0, 1, 373, 378, 385], "librari": [0, 3, 378, 384], "3": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 247, 249, 250, 251, 252, 253, 254, 255, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 348, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 377, 378, 379, 380, 382, 383, 384], "virtual": [0, 378], "setup": [0, 372, 373, 378, 385], "anaconda": 0, "packag": 0, "you": [0, 1, 2, 4, 313, 372, 373, 376, 377, 378, 382, 384, 385, 386], "all": [0, 4, 6, 28, 41, 127, 135, 169, 214, 215, 219, 220, 224, 225, 245, 252, 260, 261, 286, 312, 326, 331, 334, 349, 364, 371, 372, 375, 376, 377, 382, 383, 384, 385], "verifi": [0, 375, 384], "your": [0, 372, 373, 376, 378, 385], "try": [0, 6, 372, 380], "execut": [0, 6, 271, 272, 349, 372, 376, 382, 383, 384, 385, 386], "program": [0, 3, 4, 182, 214, 350, 351, 376, 379, 380, 381, 382, 383, 384], "exampl": [0, 73, 123, 127, 215, 219, 220, 247, 260, 284, 295, 319, 326, 331, 334, 345, 364, 372, 373, 375, 376, 377, 378, 385], "interest": 0, "contribut": [0, 2, 373], "multi": [0, 29, 363, 377, 378, 382], "card": [0, 372], "configur": [0, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 378, 380, 384, 385], "topologi": 0, "machin": [0, 376, 385], "requir": [0, 4, 17, 19, 34, 41, 61, 71, 80, 111, 112, 125, 224, 225, 228, 241, 294, 312, 327, 329, 366, 369, 372, 376, 381, 385], "overview": [0, 385], "why": 0, "It": [0, 3, 4, 6, 7, 64, 65, 66, 224, 225, 348, 382, 384, 385], "matter": 0, "vm": 0, "us": [0, 3, 4, 6, 7, 8, 9, 42, 60, 64, 65, 66, 71, 80, 86, 87, 89, 93, 95, 99, 104, 105, 106, 112, 124, 126, 132, 133, 137, 151, 154, 182, 184, 185, 187, 189, 214, 217, 224, 225, 242, 243, 245, 256, 257, 258, 259, 264, 265, 271, 272, 283, 291, 298, 299, 312, 313, 319, 343, 344, 347, 348, 349, 354, 355, 361, 362, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "basic": [0, 374, 378], "convert": [0, 3, 4, 6, 29, 58, 124, 127, 224, 225, 256, 257, 258, 259, 319, 347, 348, 377, 378, 380, 382, 384], "torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 370, 371, 377, 378, 380, 381, 382, 384], "tensor": [0, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 376, 378, 382, 383, 384], "run": [0, 3, 4, 41, 124, 224, 271, 272, 312, 337, 339, 349, 372, 373, 374, 375, 376, 378, 379, 381, 382], "an": [0, 2, 3, 4, 60, 64, 65, 66, 86, 103, 112, 113, 117, 135, 213, 214, 248, 255, 260, 280, 345, 348, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385], "oper": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 377, 378, 382, 383, 384], "devic": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 385], "__getitem__": 0, "slice": [0, 6, 7], "4": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 374, 377, 380, 381, 382, 383, 384, 385], "enabl": [0, 3, 6, 337, 339, 349, 374, 375, 376, 380, 381, 382, 383, 384, 385], "cach": [0, 3, 29, 59, 106, 166, 167, 224, 225, 376, 377, 380, 381, 382, 383, 384, 385], "5": [0, 6, 27, 41, 55, 57, 71, 72, 73, 77, 86, 88, 126, 141, 142, 160, 206, 229, 255, 265, 295, 315, 316, 319, 381, 382, 383, 384], "debug": [0, 3, 4, 375, 384, 385], "intermedi": 0, "6": [0, 27, 229, 287, 319, 377, 380, 381, 382, 383, 384], "trace": [0, 3, 243, 376], "graph": [0, 3, 224, 378], "7": [0, 86, 125, 287, 380, 381, 382, 383, 384], "tt_lib": [0, 111, 112, 345], "8": [0, 27, 71, 86, 245, 376, 377, 380, 381, 384], "log": [0, 6, 193, 367, 376, 379, 382, 384, 385], "9": [0, 54, 56, 69, 86, 88, 309, 382, 383], "support": [0, 1, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 245, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 349, 354, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 374, 377, 384, 385], "python": [0, 3, 374, 375, 376, 377, 378, 379, 381, 385], "10": [0, 27, 74, 86, 123, 127, 135, 153, 182, 214, 250, 268, 295, 341, 345, 346, 347, 374, 378, 380, 382, 385], "chang": [0, 6, 285, 343, 344, 361, 362, 377], "string": [0, 6, 42, 79, 133, 224, 225, 264, 265, 298], "represent": [0, 313, 377, 385], "11": [0, 88, 374], "visual": [0, 3, 378], "web": 0, "browser": [0, 385], "12": [0, 61, 137, 169, 245, 286, 371, 374, 378, 383], "regist": [0, 3, 4, 271, 272], "pre": [0, 4, 217, 272, 374, 378, 384], "post": [0, 271, 376], "hook": [0, 271, 272], "13": [0, 380, 381, 382, 383, 384], "queri": [0, 355, 383], "14": [0, 61, 380, 381, 382, 383, 384], "fall": [0, 172], "back": [0, 4, 352, 376, 378, 380, 382, 384], "15": [0, 380, 381, 384], "captur": 0, "c": [0, 3, 7, 41, 64, 65, 66, 103, 111, 112, 217, 299, 349, 363, 374, 376, 377, 380, 384], "function": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 380, 381, 382, 384], "buffer": [0, 4, 6, 74, 243, 376, 377, 378], "alloc": [0, 4, 27, 88, 89, 125, 126, 241, 242, 369, 370, 377, 385], "etc": [0, 3, 4, 295, 377, 384], "shape": [0, 27, 28, 41, 60, 66, 71, 72, 73, 88, 89, 109, 119, 120, 125, 126, 127, 135, 169, 182, 214, 217, 238, 241, 242, 245, 246, 247, 282, 283, 284, 285, 286, 311, 312, 344, 349, 352, 355, 362, 369, 370, 371, 376, 379, 380, 381, 382, 383, 384, 385], "layout": [0, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 376, 379, 380, 381, 382, 383, 384, 385, 386], "data": [0, 3, 6, 16, 27, 28, 29, 58, 64, 65, 66, 86, 87, 88, 89, 90, 111, 112, 124, 125, 126, 128, 129, 135, 138, 169, 170, 171, 173, 182, 194, 195, 198, 202, 204, 209, 214, 215, 218, 219, 220, 222, 231, 232, 241, 242, 256, 257, 258, 259, 260, 264, 286, 293, 312, 324, 326, 330, 331, 343, 344, 346, 347, 348, 349, 361, 362, 363, 364, 367, 369, 370, 371, 376, 378, 381, 384, 385, 386], "type": [0, 3, 4, 6, 7, 16, 27, 28, 29, 42, 58, 64, 65, 66, 72, 73, 80, 86, 87, 88, 89, 90, 103, 111, 112, 119, 124, 125, 126, 127, 128, 129, 133, 135, 138, 169, 170, 171, 173, 182, 194, 195, 198, 202, 204, 209, 214, 215, 218, 219, 220, 222, 231, 232, 241, 242, 243, 247, 256, 257, 258, 259, 260, 264, 268, 285, 286, 293, 312, 319, 324, 326, 330, 331, 334, 343, 344, 346, 347, 348, 349, 361, 362, 364, 367, 369, 370, 371, 376, 382, 384, 385], "limit": [0, 11, 21, 28, 41, 42, 80, 118, 133, 151, 169, 182, 186, 188, 190, 191, 193, 196, 197, 207, 208, 254, 260, 261, 265, 270, 281, 286, 312, 314, 321, 349, 368, 372], "bfloat8_b": [0, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 33, 34, 35, 36, 37, 38, 42, 50, 52, 61, 67, 68, 69, 75, 76, 77, 78, 80, 82, 84, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 107, 108, 109, 114, 118, 121, 122, 124, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 219, 220, 221, 223, 228, 231, 232, 233, 234, 235, 236, 237, 252, 253, 254, 255, 261, 262, 263, 265, 269, 270, 273, 274, 275, 277, 278, 281, 286, 287, 290, 291, 292, 293, 294, 296, 297, 300, 301, 302, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 348, 356, 357, 358, 360, 364, 365, 366, 368, 371, 376, 383], "storag": 0, "shard": [0, 6, 17, 60, 71, 137, 169, 182, 214, 217, 256, 257, 258, 259, 286, 312, 345, 347, 355, 385], "memori": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 378, 380, 383, 384], "config": [0, 6, 62, 86, 87, 103, 119, 120, 169, 214, 248, 256, 257, 285, 311, 350, 351, 352, 371, 380, 384, 385, 386], "api": [0, 4, 353, 371, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 245, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 348, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 377], "to_rank": [0, 377], "open_devic": [0, 9, 59, 74, 86, 87, 123, 183, 268, 295, 334, 345, 346, 347, 379, 380, 381, 382, 383, 384, 386], "close_devic": [0, 379, 380, 381, 382, 383, 384, 386], "manage_devic": [0, 386], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 377], "core": [0, 4, 6, 71, 182, 214, 243, 346, 347, 349, 361, 371, 376, 377, 380, 381, 382, 383, 384, 385], "as_tensor": 0, "from_torch": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 356, 357, 358, 359, 360, 365, 366, 367, 368, 370, 371, 377, 381, 382, 383, 384, 386], "to_torch": [0, 4, 245, 371, 380, 381, 382, 383, 384, 386], "to_devic": [0, 25, 26, 62, 63, 74, 82, 86, 123, 155, 156, 157, 158, 159, 168, 182, 214, 217, 227, 238, 247, 248, 249, 251, 266, 267, 268, 290, 346, 347, 383], "from_devic": 0, "to_layout": [0, 74, 124, 348, 377, 383, 384], "dump_tensor": 0, "load_tensor": 0, "dealloc": [0, 6, 217, 268, 377, 383, 386], "realloc": [0, 217], "to_memory_config": [0, 377], "creation": [0, 27, 88, 89, 124, 125, 126, 241, 242, 369, 370, 377, 378, 382], "arang": [0, 381], "empti": [0, 4, 6, 386], "empty_lik": 0, "zero": [0, 6, 60, 64, 65, 66, 79, 104, 113, 126, 213, 238, 247, 256, 257, 258, 259, 264, 269, 311, 312, 377, 380, 381, 386], "zeros_lik": 0, "ones": [0, 83, 119, 377, 381], "ones_lik": 0, "full": [0, 6, 260, 372, 376, 377, 378, 385, 386], "full_lik": 0, "matrix": [0, 3, 6, 86, 182, 214, 377, 381, 385, 386], "multipl": [0, 3, 4, 6, 58, 74, 112, 125, 131, 136, 170, 214, 224, 241, 256, 257, 258, 259, 273, 332, 346, 349, 369, 374, 376, 381, 385], "matmul": [0, 182, 381, 383, 385], "linear": [0, 313, 371, 382, 383, 384], "pointwis": 0, "unari": [0, 4, 10, 12, 14, 24, 30, 32, 35, 39, 45, 49, 50, 52, 54, 56, 67, 69, 75, 77, 84, 92, 93, 95, 97, 99, 100, 107, 109, 114, 121, 131, 132, 134, 136, 140, 141, 143, 145, 147, 149, 152, 154, 161, 162, 163, 164, 165, 175, 179, 180, 184, 185, 187, 189, 192, 200, 201, 206, 211, 223, 229, 234, 237, 239, 240, 250, 262, 264, 265, 269, 273, 274, 275, 278, 279, 287, 289, 291, 296, 299, 300, 302, 304, 305, 307, 309, 313, 315, 317, 320, 322, 332, 333, 335, 337, 339, 341, 356, 357, 358, 360], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 31], "asinh": [0, 33], "atan": [0, 38], "atanh": [0, 40], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 51, 217], "celu": [0, 53], "clamp": [0, 55], "clip": [0, 57], "co": 0, "cosh": [0, 70], "deg2rad": [0, 76], "digamma": [0, 78], "experiment": [0, 6, 372], "dropout": 0, "gelu_bw": 0, "elu": [0, 85], "eqz": 0, "erf": [0, 94], "erfc": [0, 96], "erfinv": [0, 98], "exp": [0, 360, 386], "exp2": [0, 101], "expm1": [0, 108], "fill": [0, 110, 112, 113, 125, 126, 241, 242, 282, 311, 369, 370, 376, 379, 381], "floor": [0, 79, 80, 115, 116, 264, 265], "frac": [0, 36, 41, 79, 122, 137, 169, 312], "geglu": 0, "gelu": [0, 6, 105, 131, 133, 371], "glu": 0, "gez": 0, "gtz": 0, "hardshrink": [0, 142, 176], "hardsigmoid": [0, 144], "hardswish": [0, 146], "hardtanh": [0, 148], "heavisid": 0, "i0": [0, 153], "ident": [0, 169, 312], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 176], "lez": 0, "lgamma": [0, 181], "log10": [0, 186], "log1p": [0, 188], "log2": [0, 190], "log_sigmoid": 0, "logical_not": [0, 201], "logical_not_": 0, "logit": [0, 207, 382, 384], "ltz": 0, "mish": [0, 6], "multigammaln": 0, "neg": [0, 235, 254], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 251], "prelu": 0, "rad2deg": [0, 263], "rdiv": [0, 265], "reciproc": [0, 270, 292, 377], "reglu": 0, "relu": [0, 6, 16, 175, 231, 273, 277, 278, 279, 313, 330, 360, 382, 384], "relu_max": 0, "relu_min": 0, "relu6": [0, 276], "remaind": [0, 281], "round": [0, 34, 79, 80, 264, 265, 288, 377], "rsqrt": 0, "selu": [0, 297], "sigmoid": [0, 6, 193, 301], "sigmoid_accur": 0, "sign": [0, 303], "signbit": 0, "silu": [0, 6, 306, 332, 386], "sin": [0, 308], "sinh": [0, 310], "softmax": [0, 350, 351, 383], "softplu": [0, 6, 314], "softshrink": [0, 316], "softsign": [0, 318], "sqrt": [0, 6, 41, 137, 150, 169], "squar": [0, 6, 227, 286, 292, 321, 323, 324, 350, 351, 377], "swiglu": 0, "swish": 0, "tan": [0, 336], "tanh": [0, 6, 42, 105, 133, 338], "tanhshrink": [0, 340], "threshold": [0, 313, 314, 342], "tril": 0, "triu": 0, "trunc": [0, 79, 80, 264, 265], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 159, 248, 267, 372], "angl": [0, 26], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 63], "polar": [0, 249], "alt_complex_rotate90": 0, "add": [0, 17, 245, 350, 351, 372, 375, 378, 381, 383, 386], "addalpha": [0, 19], "subalpha": [0, 329], "multipli": [0, 6, 18, 20, 22, 182, 214, 228, 328, 363, 377, 386], "subtract": [0, 293, 294, 327, 355, 386], "div": 0, "div_no_nan": [0, 82], "floor_div": 0, "fmod": [0, 118], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 290], "rsub": 0, "ldexp": [0, 172], "logical_and": 0, "logical_or": 0, "logical_xor": 0, "bitwise_and": [0, 44, 47], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 197], "logaddexp2": [0, 196], "hypot": [0, 151], "xlogi": [0, 368], "squared_differ": [0, 325], "gt": 0, "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": 0, "le": 0, "eq": 0, "ne": 0, "isclos": 0, "nextaft": 0, "maximum": [0, 6, 28, 54, 55, 56, 57, 148, 216, 217], "minimum": [0, 4, 54, 55, 56, 57, 148, 221, 377], "outer": 0, "pow": 0, "polyv": 0, "scatter": 0, "atan2": [0, 37], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 20, 22, 177, 212, 365], "addcdiv": [0, 21], "addcmul": [0, 23], "mac": 0, "lerp": [0, 178], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 168, 227], "l1_loss": 0, "mse_loss": 0, "reduct": [0, 3, 6, 28, 72, 73, 168, 215, 219, 220, 227, 260, 295, 326, 331, 349, 364], "cumprod": 0, "max": [0, 54, 55, 56, 57, 147, 148, 217, 278, 384], "mean": [0, 6, 41, 137, 168, 169, 227, 286, 377, 383], "min": [0, 54, 55, 56, 57, 147, 148, 278, 279], "std": [0, 4, 215, 219, 220, 247, 298, 331, 349, 364, 384], "sum": [0, 73, 226, 295], "var": 0, "argmax": [0, 382, 384], "prod": [0, 71, 261], "topk": 0, "cumsum": 0, "movement": [0, 385], "concat": [0, 61, 375], "nonzero": 0, "pad": [0, 6, 58, 64, 65, 66, 86, 112, 119, 120, 124, 169, 217, 246, 247, 256, 257, 258, 259, 285, 286, 311, 312, 344, 346, 349, 377, 380, 384], "permut": [0, 217, 355, 380, 383, 384], "reshap": [0, 6, 217, 355, 380, 382, 383, 384], "repeat": [0, 3, 283, 284, 381], "repeat_interleav": 0, "tiliz": [0, 29, 41, 137, 383], "tilize_with_val_pad": 0, "fill_rm": [0, 111], "fill_ones_rm": 0, "until": [0, 295, 348, 362], "untilize_with_unpad": 0, "indexed_fil": 0, "gather": 0, "sort": [0, 349], "normal": [0, 41, 137, 154, 169, 286, 312, 382, 384], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "moreh": [0, 226], "moreh_sum": 0, "transform": [0, 3, 182, 248, 371, 382, 383, 384], "split_query_key_value_and_split_head": [0, 383], "concatenate_head": [0, 383], "attention_softmax": 0, "attention_softmax_": [0, 383], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 3], "embed": [0, 87, 106], "convolut": [0, 3, 60, 64, 65, 66, 103, 217, 256, 257, 258, 259, 378], "conv1d": [0, 6], "conv2d": [0, 6, 7, 66, 256, 257, 258, 259, 380, 384], "conv3d": 0, "conv_transpose2d": [0, 6], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 64, 65, 66, 256, 257, 258, 259, 380, 384], "act_block_h_overrid": [0, 6, 384], "act_block_w_div": [0, 6, 384], "activ": [0, 6, 16, 90, 128, 129, 138, 148, 170, 171, 173, 182, 194, 195, 198, 202, 204, 209, 214, 218, 222, 231, 232, 293, 324, 330, 367, 371, 374, 378, 382, 384, 385], "core_grid": [0, 6, 71, 137, 182, 214, 371, 383, 384], "deallocate_activ": [0, 6, 217, 384], "enable_act_double_buff": [0, 6, 384], "enable_kernel_stride_fold": [0, 6, 384], "enable_split_read": [0, 6, 384], "enable_weights_double_buff": [0, 6, 384], "full_inner_dim": [0, 6], "in_plac": [0, 6, 217, 384], "output_layout": [0, 6, 137, 384], "override_sharding_config": [0, 6, 384], "reallocate_halo_output": [0, 6, 217, 384], "reshard_if_not_optim": [0, 6, 384], "shard_layout": [0, 6, 384], "transpose_shard": [0, 6, 384], "weights_dtyp": [0, 6, 256, 257, 380, 384], "conv2dsliceconfig": 0, "slicetypeenum": [0, 7], "sliceheight": [0, 7], "slicewidth": [0, 7], "name": [0, 4, 7, 29, 83, 183, 224, 225, 353, 371, 375, 376, 382, 384, 385, 386], "valu": [0, 6, 7, 18, 19, 20, 21, 22, 23, 27, 28, 41, 53, 54, 55, 56, 57, 60, 62, 72, 73, 77, 82, 85, 88, 89, 109, 111, 112, 119, 124, 125, 126, 127, 135, 141, 142, 147, 148, 149, 157, 158, 159, 160, 166, 167, 176, 180, 208, 215, 217, 219, 220, 230, 241, 242, 243, 245, 247, 250, 253, 254, 264, 278, 279, 285, 289, 290, 295, 296, 311, 313, 314, 315, 316, 319, 326, 328, 329, 331, 341, 342, 344, 355, 356, 357, 364, 369, 370, 372, 377, 379, 381, 382, 383, 384, 385, 386], "num_slic": [0, 7], "slice_typ": [0, 7], "pool": [0, 135, 217, 363, 378], "global_avg_pool2d": 0, "max_pool2d": [0, 384], "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 76, 263, 378, 382, 384], "model_preprocess": [0, 371, 383], "preprocess_model": 0, "preprocess_model_paramet": [0, 371], "report": [0, 65, 214, 372, 378, 382, 386], "set_printopt": [0, 386], "register_pre_operation_hook": [0, 386], "register_post_operation_hook": [0, 386], "tutori": [0, 373, 379, 380, 381, 382, 383, 384, 385], "import": [0, 4, 72, 73, 127, 217, 295, 319, 371, 372, 374, 376, 377, 378, 383, 386], "necessari": [0, 58, 372, 378, 384], "open": [0, 3, 213, 243, 378, 383, 385, 386], "tenstorr": [0, 2, 4, 6, 371, 372, 373, 374, 378, 385, 386], "perform": [0, 6, 11, 13, 15, 17, 19, 21, 23, 25, 26, 31, 33, 34, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 63, 68, 69, 70, 72, 73, 76, 77, 78, 80, 82, 85, 91, 94, 96, 98, 101, 102, 108, 110, 113, 115, 117, 118, 122, 127, 130, 131, 133, 135, 136, 139, 141, 142, 144, 146, 147, 148, 151, 153, 154, 155, 156, 172, 174, 176, 178, 180, 181, 186, 188, 190, 191, 193, 196, 197, 201, 206, 207, 208, 210, 213, 214, 216, 217, 221, 228, 229, 230, 233, 235, 239, 240, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 273, 276, 277, 280, 281, 283, 288, 289, 290, 292, 294, 296, 297, 299, 301, 303, 306, 308, 309, 310, 311, 314, 315, 316, 318, 321, 323, 325, 327, 329, 332, 333, 336, 337, 338, 339, 340, 341, 342, 349, 356, 357, 359, 366, 368, 371, 372, 374, 375, 378, 380, 381, 382, 383, 384], "addit": [0, 127, 169, 214, 295, 319, 371, 374, 378, 381, 384], "close": [0, 59, 213, 374, 378], "The": [0, 3, 4, 6, 7, 8, 9, 24, 27, 28, 29, 52, 58, 59, 64, 65, 66, 74, 83, 84, 86, 87, 88, 89, 105, 109, 112, 124, 125, 126, 127, 135, 137, 149, 175, 182, 213, 214, 215, 217, 219, 220, 230, 241, 242, 243, 246, 256, 257, 258, 259, 260, 271, 272, 278, 279, 282, 295, 312, 319, 326, 331, 334, 345, 348, 349, 353, 354, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 385, 386], "output": [0, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 376, 377, 378, 385, 386], "more": [0, 1, 3, 4, 6, 11, 21, 41, 42, 65, 80, 118, 133, 137, 151, 169, 186, 188, 190, 191, 193, 196, 197, 207, 208, 254, 261, 265, 269, 270, 281, 286, 314, 321, 368, 373, 374, 376, 377, 378, 379, 380, 383, 384, 385], "host": [0, 64, 65, 123, 245, 311, 334, 374, 376, 377, 378, 380], "tile": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 376, 377, 378, 379, 382, 384, 385], "creat": [0, 4, 6, 27, 58, 71, 72, 73, 88, 89, 109, 125, 126, 127, 241, 242, 319, 369, 370, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385], "nativ": [0, 3, 377, 378], "base": [0, 4, 6, 7, 41, 60, 71, 127, 214, 246, 377, 378, 383], "arithmet": [0, 378], "simul": [0, 378, 380, 382, 383, 384, 385], "broadcast": [0, 16, 17, 18, 80, 90, 127, 129, 138, 171, 173, 182, 194, 195, 198, 202, 204, 209, 214, 231, 232, 284, 312, 324, 327, 328, 330, 353, 367, 378, 380, 382, 384, 386], "row": [0, 6, 51, 103, 110, 112, 113, 115, 122, 137, 238, 288, 303, 359, 376, 377, 378, 385], "vector": [0, 4, 214, 252, 299, 378, 382], "expans": [0, 378], "mlp": [0, 378], "infer": [0, 41, 65, 372, 376, 378], "load": [0, 3, 183, 378, 385], "mnist": [0, 378], "test": [0, 4, 371, 372, 375, 376, 378, 381, 383, 385, 386], "pretrain": [0, 378, 384], "weight": [0, 6, 41, 64, 65, 66, 86, 87, 103, 137, 177, 182, 255, 256, 257, 258, 259, 371, 378, 380], "accuraci": [0, 372, 378, 384], "track": [0, 378, 384], "loop": [0, 378], "flatten": [0, 378, 380, 384], "head": [0, 350, 351, 352, 353, 355, 378], "attent": [0, 350, 351, 353, 354, 355, 378], "write": [0, 1, 4, 71, 182, 214, 371, 377, 378], "initi": [0, 89, 224, 225, 371, 378, 379, 380, 381, 382, 385], "first": [0, 124, 131, 136, 182, 214, 238, 245, 273, 332, 371, 374, 376, 378, 382, 384, 385, 386], "iter": [0, 378, 382], "subsequ": [0, 378, 382, 386], "optim": [0, 6, 337, 339, 377, 378, 384, 385], "version": [0, 7, 137, 224, 225, 354, 374, 376, 378, 380, 381, 382, 384, 385], "process": [0, 60, 72, 73, 137, 256, 257, 376, 378, 382, 384], "paramet": [0, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 374, 378, 384], "check": [0, 2, 4, 214, 372, 374, 378, 382, 384], "match": [0, 6, 58, 72, 73, 169, 214, 215, 219, 220, 224, 225, 285, 286, 312, 326, 331, 364, 377, 378, 379, 381, 382], "origin": [0, 215, 219, 220, 224, 225, 246, 260, 319, 326, 331, 364, 372, 375, 378], "implement": [0, 6, 64, 214, 245, 295, 353, 354, 355, 371, 375, 376, 378, 385], "seed": [0, 104, 378], "reproduc": [0, 378], "forward": [0, 371, 378], "method": [0, 4, 268, 337, 339, 378], "input": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 372, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386], "simpl": [0, 374, 378, 379, 380, 381, 382], "cnn": [0, 378, 380], "cifar": [0, 378], "dataset": [0, 377, 378, 382, 385], "defin": [0, 4, 29, 375, 377, 378], "stage": [0, 378, 385], "sampl": [0, 378, 382], "profil": [0, 154, 298, 378, 386], "gener": [0, 6, 86, 104, 112, 214, 248, 372, 376, 378, 380, 381, 382, 383, 384], "result": [0, 27, 29, 41, 112, 124, 126, 127, 154, 182, 214, 217, 242, 256, 257, 258, 259, 260, 264, 269, 337, 339, 370, 376, 377, 378, 379, 380, 381, 382, 384], "analysi": [0, 376, 378], "upload": [0, 376, 378], "tab": [0, 376, 378], "recap": [0, 378], "onboard": 0, "new": [0, 89, 126, 242, 282, 285, 370, 372, 374, 376], "pytorch": [0, 3, 64, 65, 66, 214, 256, 257, 258, 259, 319, 349, 353, 355, 380, 381, 382, 384, 386], "rewrit": 0, "switch": [0, 245, 313], "ad": [0, 64, 65, 66, 182, 256, 257, 258, 259, 375], "faq": 0, "need": [0, 1, 2, 7, 182, 214, 372, 376, 377, 380, 383, 384, 385, 386], "bind": [0, 380, 381, 382, 383, 384], "golden": [0, 371, 385, 386], "perf": [0, 6, 372, 385], "header": 0, "profile_thi": 0, "descript": [0, 111, 112, 375], "uplift": 0, "bug": 0, "featur": [0, 3, 6, 374, 375, 385, 386], "propos": [0, 375], "request": [0, 346, 375], "troubleshoot": [0, 372], "tip": 0, "commun": [0, 374], "develop": [0, 3, 6, 373, 374, 375, 376, 378, 379, 385], "index": [0, 127, 166, 167, 295, 319, 354, 376, 384], "modul": [0, 4, 66, 224, 225, 371, 382, 384, 385], "search": [0, 385], "page": [0, 374, 385], "If": [1, 2, 4, 6, 7, 28, 58, 64, 65, 66, 71, 72, 73, 127, 169, 182, 214, 215, 219, 220, 224, 225, 243, 245, 247, 260, 261, 286, 311, 312, 319, 326, 331, 334, 348, 349, 354, 355, 364, 373, 374, 375, 376, 377, 384, 385, 386], "would": [1, 375, 376, 377, 384], "like": [1, 113, 295, 313, 371, 376, 377, 379, 380, 384, 385, 386], "thi": [1, 4, 6, 7, 8, 9, 28, 41, 58, 60, 64, 65, 66, 87, 105, 106, 109, 119, 120, 135, 154, 172, 217, 246, 256, 257, 258, 259, 260, 278, 279, 295, 313, 319, 353, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "project": [1, 2, 3, 373, 385], "pleas": [1, 2, 214, 372, 373, 375, 386], "review": [1, 373, 375, 379, 381], "standard": [1, 2, 279, 372, 373, 374, 384], "gain": 1, "access": [1, 2, 3, 374], "read": [1, 71, 373, 377], "section": [1, 2, 372, 377, 378, 385], "detail": [1, 4, 11, 21, 41, 42, 80, 118, 133, 137, 151, 169, 186, 188, 190, 191, 193, 196, 197, 207, 208, 254, 261, 265, 270, 281, 286, 314, 321, 368, 373, 384, 385, 386], "contact": 1, "u": [1, 375, 382], "have": [2, 4, 72, 73, 74, 87, 120, 127, 169, 177, 214, 256, 257, 260, 264, 295, 312, 343, 344, 349, 361, 362, 372, 374, 376, 377, 384, 385], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 6, 214, 313, 372, 375, 376, 380], "file": [2, 4, 29, 83, 183, 372, 374, 376, 379, 380, 381, 382, 384, 385, 386], "github": [2, 372, 373, 374, 385], "can": [2, 3, 4, 6, 7, 27, 42, 54, 55, 56, 57, 64, 65, 66, 79, 80, 89, 126, 133, 137, 214, 242, 245, 256, 257, 258, 259, 264, 265, 271, 272, 313, 334, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "out": [2, 4, 6, 72, 73, 104, 127, 279, 311, 319, 349, 379, 380, 383, 384], "relev": [2, 372], "ever": 2, "help": [2, 375, 378, 385], "we": [2, 6, 120, 124, 214, 348, 372, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386], "offici": [2, 385], "discord": 2, "channel": [2, 6, 41, 64, 65, 66, 111, 112, 135, 217, 256, 257, 258, 259, 363, 376, 380, 384], "repres": [2, 3, 376, 377, 384], "both": [2, 6, 17, 64, 65, 66, 72, 73, 214, 253, 256, 257, 258, 259, 371, 372, 376, 377, 383, 385], "metal": [2, 3, 373, 374, 378, 380, 381, 382, 383, 384, 385], "join": 2, "discuss": [2, 372], "board": 2, "member": [2, 7], "bounc": 2, "idea": [2, 372], "off": [2, 278, 287, 371, 377], "each": [2, 7, 41, 60, 112, 127, 135, 217, 245, 282, 284, 311, 374, 376, 377, 378, 382, 384, 385], "other": [2, 4, 6, 127, 214, 371, 372, 373, 377, 380, 381, 384, 385, 386], "refer": [2, 3, 11, 21, 42, 65, 74, 80, 89, 109, 118, 133, 151, 186, 188, 190, 191, 193, 196, 197, 207, 208, 214, 230, 254, 261, 265, 270, 281, 314, 321, 368, 374, 375, 377, 384, 385, 386], "code": [2, 4, 271, 272, 319, 349, 355, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 386], "conduct": 2, "when": [2, 4, 6, 7, 8, 9, 41, 60, 64, 65, 66, 71, 80, 106, 137, 151, 198, 213, 214, 218, 224, 247, 253, 260, 265, 337, 339, 346, 372, 375, 377, 383, 386], "interact": [2, 385], "neural": [3, 380, 382, 384, 385], "network": [3, 382, 384, 385], "built": [3, 268, 374, 384], "design": [3, 378, 379, 385], "feel": [3, 385], "familiar": 3, "experienc": 3, "kei": [3, 355, 371, 377, 383, 384], "includ": [3, 4, 41, 58, 372, 377, 381, 382, 384, 385], "than": [3, 6, 7, 60, 77, 111, 112, 129, 130, 138, 139, 173, 174, 180, 209, 210, 230, 260, 376, 383, 386], "200": 3, "fuse": [3, 6, 371, 383], "A": [3, 4, 6, 27, 125, 126, 127, 214, 215, 219, 220, 241, 242, 313, 326, 331, 354, 364, 369, 370, 372, 374, 375, 377, 385], "differ": [3, 6, 66, 214, 299, 324, 337, 339, 374, 377, 381, 382, 384, 386], "wai": [3, 224, 225, 371, 374, 378], "distribut": [3, 71, 169, 182, 214, 377, 385], "abil": [3, 385], "custom": [3, 4, 271, 272, 374, 380, 382, 383, 384, 385], "mesh": [3, 124, 348, 380, 381, 382, 383, 384], "tool": [3, 374, 376, 385], "comput": [3, 4, 18, 20, 22, 36, 41, 58, 64, 65, 66, 72, 73, 79, 81, 103, 116, 127, 128, 135, 137, 150, 160, 169, 170, 171, 177, 182, 194, 195, 198, 199, 202, 203, 204, 205, 212, 214, 215, 218, 219, 220, 222, 236, 244, 252, 256, 257, 258, 259, 260, 286, 312, 324, 326, 328, 331, 350, 351, 354, 355, 364, 365, 367, 376, 381, 382, 384, 385], "util": [3, 377, 382, 384, 385], "significantli": [3, 6, 383], "speed": 3, "comparison": [3, 160, 375], "mode": [3, 34, 41, 42, 80, 93, 95, 99, 132, 133, 168, 184, 185, 187, 189, 217, 227, 265, 291, 299, 337, 339, 380, 381, 382, 383, 384, 385], "long": [3, 375], "sequenc": [3, 4, 353, 354], "against": [3, 127, 372, 385, 386], "known": [3, 66], "document": [4, 372, 374, 375, 385], "meant": 4, "contributor": 4, "Not": [4, 233, 371, 386], "mai": [4, 6, 74, 80, 151, 172, 214, 265, 269, 337, 339, 345, 371, 377, 380, 381, 382, 383, 384, 386], "grayskul": [4, 29, 371, 386], "wormhol": [4, 29, 371, 386], "take": [4, 6, 352, 372, 373, 377, 380, 383, 384], "one": [4, 54, 55, 56, 57, 127, 260, 373, 377, 378, 381], "produc": [4, 169, 269, 337, 339, 372, 382], "call": [4, 6, 124, 271, 272, 348, 375, 376, 377, 383, 385, 386], "optiona": 4, "b": [4, 106, 284, 353, 354, 374, 380, 384], "composit": 4, "struct": 4, "specifi": [4, 6, 27, 58, 72, 73, 83, 88, 89, 125, 126, 127, 182, 214, 215, 219, 220, 224, 225, 241, 242, 245, 246, 247, 260, 282, 295, 319, 326, 331, 334, 344, 353, 354, 364, 369, 370, 371, 374, 376, 377, 383], "how": [4, 7, 372, 376, 377, 379, 381, 382, 383, 384, 385, 386], "simpli": [4, 346, 385], "ttnn": [4, 374, 375, 377, 378, 379, 380, 381, 382, 384, 386], "register_oper": 4, "exist": [4, 243, 374, 376, 382, 384], "bind_registered_oper": 4, "auto": 4, "attach": [4, 224, 225], "attach_golden_funct": 4, "let": [4, 377, 379, 380, 381, 382, 383, 384], "": [4, 6, 58, 64, 65, 66, 137, 169, 215, 219, 220, 224, 225, 286, 295, 312, 326, 331, 353, 354, 364, 372, 374, 377, 379, 381, 382, 383, 384, 385], "just": [4, 256, 257, 258, 259, 383, 384], "copi": [4, 58, 123, 154, 345, 385], "In": [4, 104, 214, 285, 346, 351, 371, 376, 377, 380, 382, 384, 385], "order": [4, 71, 214, 251, 294, 319, 349, 376, 377, 383, 385, 386], "follow": [4, 6, 28, 66, 112, 214, 215, 219, 220, 260, 285, 319, 326, 331, 349, 364, 371, 373, 374, 375, 376, 377, 378, 382, 384, 385, 386], "directori": [4, 374, 378, 385], "structur": [4, 6, 7, 371, 382, 385], "shown": [4, 377, 379, 380, 381, 382, 383, 384], "below": [4, 214, 372, 376, 377, 379, 380, 381, 382, 383, 384], "cpp": [4, 380, 381, 382, 383, 384, 385], "categori": [4, 385], "operation_nam": 4, "_device_oper": 4, "hpp": 4, "program_factory_0": 4, "_program_factori": 4, "mani": [4, 371], "factori": 4, "But": 4, "concret": [4, 214], "found": [4, 371, 382, 384, 385], "example_device_oper": 4, "spdx": [4, 386], "filecopyrighttext": [4, 386], "2023": 4, "inc": [4, 386], "licens": [4, 386], "identifi": [4, 385, 386], "apach": [4, 386], "0": [4, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 72, 73, 74, 75, 77, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 110, 111, 112, 114, 119, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 140, 141, 142, 143, 145, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 176, 177, 179, 180, 183, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 206, 208, 209, 211, 213, 215, 217, 218, 219, 220, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 241, 242, 243, 245, 247, 248, 252, 253, 254, 260, 261, 262, 264, 265, 266, 268, 269, 274, 275, 278, 279, 284, 285, 287, 291, 292, 293, 294, 295, 299, 300, 302, 304, 305, 306, 307, 311, 313, 315, 316, 317, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386], "pragma": 4, "onc": [4, 256, 257, 258, 259, 382, 385], "variant": [4, 137], "device_oper": 4, "decor": [4, 375], "namespac": 4, "exampledeviceoper": 4, "attribut": [4, 371, 376, 377], "store": [4, 6, 41, 127, 376, 377, 383], "variabl": [4, 374, 385, 386], "aren": [4, 8], "t": [4, 8, 154, 214, 224, 225, 376, 377, 383], "operation_attributes_t": 4, "bool": [4, 17, 19, 28, 34, 41, 61, 64, 65, 66, 71, 72, 73, 74, 79, 80, 93, 95, 99, 127, 132, 137, 160, 168, 182, 184, 185, 187, 189, 214, 215, 217, 219, 220, 224, 225, 227, 228, 245, 258, 259, 260, 291, 294, 299, 319, 326, 327, 329, 331, 343, 344, 349, 350, 351, 353, 354, 355, 361, 362, 364, 366, 384], "int": [4, 10, 12, 14, 16, 17, 18, 19, 24, 27, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 64, 65, 66, 67, 71, 72, 73, 75, 79, 80, 84, 86, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 121, 124, 125, 126, 127, 128, 129, 131, 132, 134, 136, 137, 138, 140, 143, 145, 149, 152, 154, 157, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 179, 182, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 213, 214, 217, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 242, 243, 245, 246, 247, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 269, 273, 274, 275, 278, 279, 283, 287, 291, 293, 294, 299, 300, 302, 304, 305, 306, 307, 311, 312, 313, 317, 319, 320, 321, 322, 324, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 343, 344, 348, 349, 350, 351, 353, 354, 355, 358, 360, 361, 362, 363, 365, 366, 367, 370, 377, 380, 384], "some_other_attribut": 4, "argument": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 377], "pass": [4, 6, 64, 65, 105, 106, 112, 271, 272, 355, 371, 375, 377, 380, 382, 384], "don": [4, 214], "thei": [4, 7, 214, 372, 377, 383], "tensor_args_t": 4, "const": [4, 298], "input_tensor": [4, 10, 11, 12, 13, 14, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 119, 121, 122, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 174, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 206, 207, 208, 210, 211, 217, 223, 229, 230, 233, 234, 235, 237, 238, 239, 240, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 380, 384, 386], "howev": [4, 245], "show": [4, 214, 377, 383, 385], "els": [4, 79, 382, 384], "done": [4, 6, 372, 374, 376], "io_tensor": 4, "optional_output_tensor": [4, 182, 214], "vector_of_tensor": 4, "tupl": [4, 64, 65, 66, 71, 245, 256, 257, 258, 259, 319, 349, 355, 380, 384], "tuple_of_tensor": 4, "vector_of_optional_tensor": 4, "some_crazy_tuple_of_tensor": 4, "return": [4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 380, 381, 383, 384], "spec": [4, 71, 124, 169], "singl": [4, 215, 219, 220, 326, 331, 354, 364, 371, 372, 375, 376, 377], "tensorspec": [4, 124], "spec_return_value_t": 4, "tensor_return_value_t": 4, "note": [4, 6, 63, 127, 156, 214, 215, 219, 220, 241, 242, 267, 285, 326, 331, 364, 374, 376, 377, 383, 385, 386], "should": [4, 6, 66, 131, 136, 154, 160, 177, 214, 217, 238, 245, 253, 264, 273, 332, 372, 375, 376, 379, 383, 384, 385], "same": [4, 6, 16, 18, 20, 22, 36, 43, 44, 46, 47, 48, 64, 65, 66, 72, 73, 79, 81, 87, 89, 90, 91, 109, 111, 116, 126, 127, 128, 129, 130, 138, 139, 150, 154, 160, 170, 171, 173, 174, 177, 182, 194, 195, 198, 199, 202, 203, 204, 205, 209, 210, 212, 214, 218, 222, 224, 225, 231, 232, 233, 236, 238, 242, 244, 252, 253, 256, 257, 258, 259, 260, 293, 295, 324, 328, 330, 346, 349, 353, 365, 367, 370, 374, 376, 377, 381, 382, 383, 385], "pattern": [4, 60, 224, 375, 382, 384], "e": [4, 28, 169, 214, 215, 219, 220, 260, 312, 326, 331, 364, 374, 376, 377, 382, 384, 385, 386], "singlecor": 4, "share": [4, 377], "between": [4, 27, 41, 64, 65, 66, 214, 256, 257, 258, 259, 347, 384, 385], "override_runtime_argu": 4, "shared_variables_t": 4, "tt_metal": [4, 334, 363, 374, 376, 385], "kernelhandl": 4, "unary_reader_kernel_id": 4, "unary_writer_kernel_id": 4, "cached_program_t": 4, "cachedprogram": 4, "static": 4, "operation_attribut": 4, "tensor_arg": 4, "tensor_return_valu": 4, "void": 4, "cached_program": 4, "multicor": [4, 245, 343, 344, 349, 361, 362], "size_t": 4, "num_cor": [4, 6], "num_cores_i": 4, "program_factory_t": 4, "mandatori": 4, "select": [4, 6, 41, 375, 382], "arg": [4, 112, 137, 215, 219, 220, 247, 256, 257, 258, 259, 271, 272, 326, 331, 334, 364, 384, 386], "select_program_factori": 4, "valid": [4, 6, 111, 112, 214, 224, 225, 349, 371, 372, 376, 377], "usual": 4, "validate_on_program_cache_miss": 4, "reus": [4, 256, 257, 258, 259, 385], "less": [4, 6, 173, 174, 209, 210, 260, 376, 386], "validate_on_program_cache_hit": 4, "compute_output_spec": 4, "create_output_tensor": 4, "map": [4, 29], "abl": 4, "prim": 4, "after": [4, 6, 103, 217, 245, 271, 375, 376, 377, 380, 382, 384, 385, 386], "op": [4, 6, 7, 8, 28, 64, 65, 66, 71, 87, 137, 217, 312, 334, 353, 354, 360, 375, 376, 380, 385, 386], "keep": [4, 28, 215, 219, 220, 260, 326, 331, 364, 371, 377], "mind": [4, 383], "overload": [4, 334], "queue_id": [4, 10, 12, 14, 16, 17, 18, 19, 24, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 66, 67, 75, 79, 80, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 121, 125, 126, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 157, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 217, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 242, 245, 247, 253, 254, 262, 264, 269, 274, 275, 278, 279, 285, 287, 291, 292, 293, 294, 299, 300, 302, 304, 305, 306, 307, 311, 313, 317, 320, 321, 322, 324, 327, 328, 329, 330, 335, 337, 338, 339, 343, 344, 349, 353, 354, 358, 360, 361, 362, 365, 366, 367, 370], "automat": [4, 213, 346, 372, 376, 377], "primit": 4, "so": [4, 6, 112, 371], "also": [4, 6, 64, 65, 66, 72, 73, 230, 372, 376, 377, 378, 385], "invok": 4, "case": [4, 79, 124, 160, 214, 236, 255, 346, 371, 372, 377, 384, 385, 386], "hash": [4, 224, 225, 376], "stl": 4, "hash_t": 4, "compute_program_hash": 4, "create_op_performance_model": 4, "opperformancemodel": 4, "make": [4, 224, 225, 313, 349, 355, 371, 377, 385, 386], "avail": [4, 6, 363, 378, 385, 386], "constexpr": 4, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 4, "true": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 377, 382, 384, 385, 386], "logical_shap": 4, "tensorlayout": 4, "dtype": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 377, 379, 380, 381, 382, 383, 384, 386], "pageconfig": 4, "memoryconfig": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "output_spec": 4, "create_device_tensor": 4, "42": [4, 382], "single_core_program_factori": 4, "work_split": 4, "tensor_accessor_arg": 4, "output_tensor": [4, 10, 12, 14, 16, 18, 24, 28, 30, 32, 35, 39, 43, 44, 45, 46, 47, 48, 50, 52, 60, 67, 72, 75, 79, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 104, 107, 109, 110, 114, 120, 121, 125, 126, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 218, 222, 223, 227, 231, 232, 234, 235, 237, 242, 253, 254, 262, 264, 269, 274, 275, 278, 279, 287, 291, 292, 293, 299, 300, 302, 304, 305, 306, 307, 313, 317, 320, 321, 322, 324, 328, 330, 335, 337, 338, 339, 349, 358, 360, 365, 366, 367, 370, 386], "src_buffer": 4, "dst_buffer": 4, "dataformat": 4, "cb_data_format": 4, "datatype_to_dataformat_convert": 4, "uint32_t": [4, 104], "single_tile_s": 4, "tiles": 4, "cb_data_format_output": 4, "single_tile_size_output": 4, "num_til": 4, "physical_volum": 4, "constant": [4, 41, 137, 169, 377], "tile_hw": 4, "corecoord": 4, "compute_with_storage_grid_s": 4, "y": [4, 36, 248, 376, 377, 383], "all_cor": 4, "core_group_1": 4, "core_group_2": 4, "num_tiles_per_core_group_1": 4, "num_tiles_per_core_group_2": 4, "split_work_to_cor": 4, "src0_cb_index": 4, "cbindex": 4, "c_0": 4, "num_input_til": 4, "circularbufferconfig": 4, "cb_src0_config": 4, "set_page_s": 4, "createcircularbuff": 4, "output_cb_index": 4, "c_2": 4, "num_output_til": 4, "cb_output_config": 4, "reader_compile_time_arg": 4, "tensoraccessorarg": 4, "append_to": 4, "writer_compile_time_arg": 4, "createkernel": 4, "eltwis": [4, 117, 255, 280, 379], "kernel": [4, 6, 41, 58, 64, 65, 66, 103, 105, 137, 182, 214, 215, 217, 219, 220, 256, 257, 258, 259, 312, 326, 331, 364, 374, 376, 380, 384, 385], "dataflow": 4, "reader_unary_interleaved_start_id": 4, "readerdatamovementconfig": 4, "writer_unary_interleaved_start_id": 4, "writerdatamovementconfig": 4, "compute_kernel_args_group_1": 4, "per_core_block_cnt": 4, "per_core_block_s": 4, "math_approx_mod": 4, "fals": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 382, 384, 385, 386], "eltwise_sfpu": 4, "computeconfig": 4, "math_fidel": 4, "mathfidel": 4, "hifi4": [4, 376], "compile_arg": 4, "rang": [4, 16, 27, 43, 44, 45, 46, 47, 48, 69, 111, 112, 128, 153, 170, 172, 187, 218, 223, 229, 231, 250, 287, 289, 309, 330, 335, 336, 349, 377], "compute_kernel_args_group_2": 4, "num_tiles_written": 4, "num_tiles_per_cor": 4, "contain": [4, 6, 27, 28, 72, 73, 86, 127, 217, 269, 295, 374, 377, 381, 384, 385], "tt_assert": 4, "setruntimearg": 4, "address": [4, 385], "move": [4, 6, 119, 120, 372, 380, 383, 384], "shared_vari": 4, "runtime_arg": 4, "getruntimearg": 4, "multi_core_program_factori": 4, "idevic": [4, 256, 257, 334], "written": [4, 166, 167, 182, 214, 383], "compositeexampleoper": 4, "composite_exampl": 4, "another_copi": 4, "_pybind": 4, "example_pybind": 4, "pybind": 4, "pybind_fwd": 4, "py": [4, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "pybind11": 4, "bind_example_oper": 4, "r": [4, 248, 374, 385], "doc": [4, 385], "expos": 4, "logic": [4, 198, 199, 202, 203, 205, 214, 224, 225], "self": [4, 371, 377], "correct": [4, 215, 219, 220, 326, 331, 364, 382, 384], "specif": [4, 6, 28, 214, 243, 319, 354, 372, 377, 378, 384, 385], "pybind_overload_t": 4, "decltyp": 4, "examples_pybind": 4, "py_modul": 4, "final": [4, 214, 371, 372, 375, 382, 384, 385], "wherev": 4, "want": [4, 374, 386], "compar": [4, 90, 129, 138, 173, 209, 214, 232, 382, 384], "its": [4, 58, 66, 89, 218, 245, 311, 371, 372, 375, 376, 377, 382, 384, 386], "equival": [4, 319, 349, 355, 377, 378], "signatur": 4, "And": [4, 371, 377], "ignor": 4, "kwarg": [4, 256, 257, 258, 259, 271, 272, 334, 386], "def": [4, 371, 380, 381, 383, 384, 386], "golden_funct": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "befor": [4, 6, 29, 72, 73, 245, 256, 257, 258, 259, 272, 313, 372, 377], "some": [4, 334, 374, 381, 386], "preprocess": [4, 6, 29, 64, 65, 66, 224, 225, 256, 257, 258, 259, 377, 384], "postprocess": 4, "pack": [4, 361, 362], "preprocess_golden_function_input": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "ttnn_input_tensor": 4, "postprocess_golden_function_output": [4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "torch_output_tensor": [4, 386], "becaus": [4, 377, 383], "wa": [4, 372, 376, 377], "class": [6, 7, 371, 372, 376, 377, 382], "pybind11_object": [6, 7, 377], "flag": 6, "properti": [6, 7, 377], "control": [6, 374], "size": [6, 7, 27, 64, 65, 66, 72, 73, 86, 87, 127, 214, 215, 217, 219, 220, 243, 255, 256, 257, 258, 259, 260, 311, 326, 331, 353, 354, 355, 363, 364, 377, 379, 384, 386], "block": [6, 64, 65, 66, 71, 213, 214, 217, 256, 257, 258, 259, 269, 377], "height": [6, 7, 58, 60, 64, 65, 66, 71, 111, 112, 125, 135, 169, 214, 217, 241, 256, 257, 258, 259, 286, 346, 369, 376, 377, 380, 384], "chunk": [6, 353, 354], "l1": [6, 7, 71, 182, 214, 243, 345, 347, 377, 380, 383, 384, 385], "divid": [6, 7, 80, 350, 351, 385], "among": 6, "further": 6, "subdivid": 6, "within": [6, 27, 44, 47, 217, 372, 377, 385], "possibl": [6, 214, 348, 371], "which": [6, 44, 47, 71, 72, 73, 125, 126, 127, 182, 214, 217, 224, 225, 241, 242, 264, 311, 312, 319, 353, 354, 369, 370, 371, 376, 377, 379, 380, 381, 382, 384, 385], "equal": [6, 90, 91, 129, 130, 160, 169, 173, 174, 232, 233, 319, 386], "output_matrix_height_per_cor": 6, "lead": 6, "larg": [6, 7, 313, 371, 377, 381], "temporari": 6, "circular": [6, 385], "oom": 6, "must": [6, 24, 41, 64, 65, 72, 73, 87, 103, 127, 169, 230, 254, 256, 257, 260, 264, 285, 286, 295, 311, 312, 319, 343, 344, 345, 349, 361, 362, 374, 377, 385], "32": [6, 28, 58, 60, 61, 74, 103, 112, 123, 125, 131, 135, 136, 169, 182, 214, 238, 239, 240, 241, 244, 245, 247, 255, 261, 268, 273, 283, 284, 286, 311, 312, 332, 345, 346, 347, 349, 360, 369, 377, 379, 380, 381, 382, 384, 386], "evenli": [6, 27], "reduc": [6, 7, 28, 137, 215, 219, 220, 260, 295, 326, 331, 349, 364], "width": [6, 7, 58, 64, 65, 66, 71, 111, 112, 125, 135, 169, 214, 217, 241, 256, 257, 258, 259, 312, 346, 349, 352, 369, 376, 380, 384], "prevent": [6, 374], "greater": [6, 60, 77, 111, 112, 129, 130, 138, 139, 180, 230, 386], "n150": 6, "thats": 6, "64": [6, 28, 60, 71, 74, 123, 131, 136, 169, 182, 214, 247, 268, 273, 286, 311, 312, 332, 345, 346, 347, 349, 377, 382, 383, 384, 386], "2048": [6, 384, 386], "divisor": [6, 128, 265], "halv": 6, "appli": [6, 7, 10, 12, 14, 16, 24, 30, 32, 35, 41, 45, 50, 52, 58, 64, 65, 66, 67, 72, 73, 75, 84, 90, 92, 93, 95, 97, 99, 100, 103, 104, 105, 106, 107, 109, 114, 121, 128, 129, 131, 132, 134, 135, 136, 138, 140, 143, 145, 149, 152, 161, 162, 163, 164, 165, 170, 171, 173, 175, 179, 182, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 214, 215, 217, 218, 219, 220, 222, 223, 231, 232, 234, 237, 245, 256, 257, 258, 259, 262, 269, 273, 274, 275, 278, 279, 287, 291, 293, 299, 300, 302, 304, 305, 307, 313, 317, 320, 322, 324, 326, 330, 331, 332, 335, 337, 339, 358, 360, 364, 367, 372, 382, 384], "sigmoid_approx": 6, "grid": [6, 182, 214, 353, 354, 361, 371, 377, 384], "boolean": [6, 158, 159, 337, 339, 349], "indic": [6, 28, 86, 87, 127, 238, 295, 311, 319, 349, 362, 385], "whether": [6, 28, 72, 73, 74, 182, 214, 215, 217, 219, 220, 224, 225, 258, 259, 326, 331, 343, 344, 349, 354, 355, 361, 362, 364, 384], "conv": [6, 64, 65, 66, 380, 384], "halo": [6, 7, 217], "micro": 6, "anoth": [6, 374, 377], "doubl": 6, "allow": [6, 214, 372, 375, 381, 382], "stall": 6, "reader": [6, 224], "improv": [6, 313, 372, 385], "increas": [6, 385], "usag": [6, 372, 374, 385], "fold": 6, "stride": [6, 64, 65, 66, 217, 256, 257, 258, 259, 380, 384], "dimens": [6, 7, 24, 28, 58, 60, 61, 72, 73, 125, 127, 131, 135, 136, 157, 214, 215, 219, 220, 241, 245, 247, 255, 260, 261, 273, 282, 284, 285, 295, 311, 312, 319, 326, 331, 332, 346, 348, 349, 352, 353, 354, 355, 364, 369, 377, 380, 381, 382], "under": [6, 372, 375, 376, 385, 386], "without": [6, 89], "notic": 6, "caution": 6, "product": [6, 72, 214, 260, 353, 354], "22378": 6, "nhwc": [6, 380, 384], "format": [6, 7, 29, 36, 64, 65, 66, 103, 119, 120, 124, 127, 217, 256, 257, 258, 259, 269, 319, 375, 377, 380, 382, 384], "n": [6, 7, 41, 60, 64, 65, 66, 72, 73, 103, 111, 112, 215, 217, 219, 220, 238, 251, 252, 326, 331, 349, 363, 364, 374, 376, 381, 384], "h": [6, 7, 41, 64, 65, 66, 103, 111, 112, 217, 286, 349, 363, 377, 380, 384], "w": [6, 7, 41, 64, 65, 66, 103, 111, 112, 217, 286, 349, 363, 376, 380, 384], "ic": 6, "oc": 6, "pad_h": [6, 217], "pad_w": [6, 217], "implicit": 6, "via": [6, 374, 382, 384, 385], "current": [6, 28, 58, 60, 71, 127, 137, 224, 225, 258, 259, 295, 345, 354, 377, 386], "condit": [6, 285, 372], "met": [6, 285], "dram": [6, 7, 345, 347, 377, 385], "divis": [6, 7, 116, 131, 136, 264, 273, 312, 332, 377], "writer": 6, "carri": [6, 279], "bottleneck": [6, 385], "By": [6, 313, 375, 377], "default": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 376, 377, 384, 386], "inner": 6, "dim": [6, 28, 60, 61, 71, 72, 73, 127, 131, 136, 157, 169, 215, 219, 220, 247, 260, 261, 273, 284, 286, 295, 311, 312, 319, 326, 331, 332, 349, 355, 364, 377, 382, 383, 384], "kernel_h": [6, 217], "constraint": [6, 169, 214, 377], "space": [6, 27, 64, 65, 66, 256, 257, 258, 259, 377], "re": [6, 371, 373, 385], "overwrit": 6, "ani": [6, 111, 112, 245, 372, 377, 385], "either": [6, 7, 71, 214, 346, 374, 377, 385], "row_major": [6, 27, 28, 71, 88, 89, 124, 125, 126, 169, 215, 219, 220, 239, 240, 241, 260, 286, 312, 326, 331, 343, 344, 361, 362, 364, 369, 370, 376, 377], "expect": [6, 66, 103, 112, 217, 355, 372, 375, 380, 382, 385], "next": [6, 236, 374, 377, 384], "fragment": 6, "ideal": [6, 217, 377], "face": [6, 377], "determin": [6, 7, 66, 214, 224, 225, 377, 384], "reshard": 6, "alreadi": [6, 66, 224, 225, 243, 384], "anywai": 6, "previou": [6, 87, 382, 385], "due": [6, 269, 376, 377], "v": [6, 112, 354, 384, 385], "dilat": [6, 64, 65, 66, 217, 256, 257, 258, 259, 384], "tensormemorylayout": [6, 217], "own": [6, 377], "heurist": 6, "height_shard": 6, "block_shard": [6, 217], "width_shard": 6, "orient": [6, 71, 377], "major": [6, 51, 103, 110, 112, 113, 115, 122, 137, 238, 288, 303, 359, 377, 385], "column": [6, 376, 377, 381], "bia": [6, 41, 42, 64, 65, 66, 103, 137, 182, 256, 257, 258, 259, 371, 380, 382, 383, 384], "respons": [6, 384], "prepar": [6, 372, 380, 384], "bfloat16": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 380, 381, 382, 383, 384, 386], "unspecifi": 6, "float32": [6, 14, 24, 27, 28, 32, 39, 41, 52, 72, 73, 75, 88, 89, 90, 109, 117, 121, 128, 129, 138, 141, 143, 145, 147, 154, 169, 170, 173, 184, 185, 187, 189, 209, 215, 218, 219, 220, 222, 232, 253, 262, 286, 287, 295, 304, 312, 315, 317, 326, 331, 337, 339, 358, 364, 369, 370, 371, 376, 377, 379, 381, 382, 386], "place": [7, 41, 91, 130, 139, 166, 167, 174, 210, 217, 233, 287, 345, 351, 377], "too": [7, 386], "fit": [7, 284], "conv2d_dram": 7, "happen": 7, "number": [7, 16, 17, 20, 22, 42, 60, 64, 65, 66, 79, 80, 81, 90, 91, 111, 112, 116, 117, 118, 127, 129, 130, 137, 138, 139, 171, 173, 174, 178, 194, 195, 198, 202, 204, 209, 210, 212, 214, 215, 217, 218, 219, 220, 222, 228, 231, 232, 233, 238, 245, 247, 254, 255, 256, 257, 258, 259, 280, 281, 282, 284, 285, 293, 295, 324, 326, 327, 330, 331, 344, 349, 350, 351, 364, 365, 367, 375, 376, 377, 380, 382, 383, 384, 385], "along": [7, 72, 73, 127, 215, 219, 220, 261, 295, 311, 312, 319, 326, 331, 349, 352, 364, 377, 384], "correspond": [7, 86, 87, 354, 385], "calcul": [7, 71, 376], "last": [7, 24, 28, 58, 125, 131, 136, 169, 241, 273, 285, 286, 312, 319, 332, 346, 349, 355, 369, 376, 377], "smaller": [7, 377, 381], "rest": [7, 112], "prefer": [7, 374, 379, 385], "much": [7, 376], "larger": [7, 381], "_ttnn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377], "multi_devic": [8, 9, 119, 120, 243, 334], "meshdevic": [8, 9, 29, 59, 64, 65, 66, 88, 89, 119, 120, 124, 125, 126, 183, 213, 241, 242, 243, 334, 345, 348, 369, 370, 384], "plan": [8, 9, 119, 120, 246, 385], "deprec": [8, 9, 119, 120, 246], "futur": [8, 9, 119, 120, 246], "arg0": [9, 377], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "tt": [9, 334, 343, 344, 361, 362, 363, 373, 378, 379, 382, 384], "device_id": [9, 59, 74, 86, 87, 123, 213, 243, 268, 295, 334, 345, 346, 347, 379, 380, 381, 382, 383, 384, 386], "python_fully_qualified_nam": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "abs_t": 10, "object": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375], "default_preprocess_golden_function_input": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "_golden_funct": [10, 13, 16, 21, 23, 25, 26, 27, 32, 35, 49, 50, 58, 60, 62, 63, 65, 67, 69, 75, 77, 80, 86, 88, 89, 90, 92, 93, 95, 97, 99, 100, 106, 107, 110, 114, 123, 124, 126, 129, 132, 134, 137, 138, 140, 143, 145, 148, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 169, 171, 173, 178, 179, 180, 182, 184, 185, 187, 189, 192, 194, 195, 199, 200, 203, 205, 209, 211, 214, 216, 223, 228, 229, 231, 232, 234, 237, 241, 242, 245, 247, 248, 249, 251, 254, 262, 266, 267, 268, 269, 274, 275, 282, 283, 284, 285, 286, 291, 299, 300, 302, 304, 305, 307, 309, 312, 313, 314, 317, 320, 322, 330, 333, 335, 337, 345, 346, 347, 348, 350, 351, 352, 355, 356, 357, 363, 366, 369, 370], "default_postprocess_golden_function_output": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "is_cpp_oper": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "is_experiment": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "element": [10, 12, 14, 24, 28, 30, 32, 35, 45, 50, 52, 60, 64, 65, 66, 67, 72, 73, 75, 84, 92, 93, 95, 97, 99, 100, 104, 107, 109, 114, 121, 127, 131, 132, 134, 135, 136, 137, 140, 143, 145, 149, 152, 161, 162, 163, 164, 165, 175, 179, 184, 185, 187, 189, 192, 200, 211, 223, 234, 237, 238, 245, 252, 253, 256, 257, 258, 259, 260, 262, 264, 269, 273, 274, 275, 278, 279, 284, 287, 291, 299, 300, 302, 304, 305, 307, 313, 317, 319, 320, 322, 332, 335, 337, 339, 349, 358, 360, 362, 377, 381], "wise": [10, 12, 14, 24, 30, 32, 35, 45, 50, 52, 67, 75, 84, 92, 93, 95, 97, 99, 100, 104, 107, 109, 114, 121, 131, 132, 134, 136, 140, 143, 145, 149, 152, 161, 162, 163, 164, 165, 175, 179, 184, 185, 187, 189, 192, 200, 211, 223, 234, 237, 253, 262, 264, 269, 273, 274, 275, 278, 279, 287, 291, 299, 300, 302, 304, 305, 307, 313, 317, 320, 322, 332, 335, 337, 339, 358, 360, 381], "mathrm": [10, 12, 14, 16, 18, 24, 30, 32, 35, 36, 39, 43, 44, 45, 46, 47, 48, 50, 52, 67, 72, 73, 75, 79, 81, 84, 90, 91, 92, 93, 95, 97, 99, 100, 104, 107, 109, 114, 116, 117, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 143, 145, 149, 150, 152, 154, 160, 161, 162, 163, 164, 165, 170, 171, 173, 174, 175, 177, 179, 184, 185, 187, 189, 192, 194, 195, 198, 199, 200, 202, 203, 204, 205, 209, 210, 211, 223, 231, 232, 233, 234, 236, 237, 244, 252, 253, 255, 262, 269, 273, 274, 275, 278, 279, 280, 287, 291, 293, 299, 300, 302, 304, 305, 307, 313, 317, 320, 322, 324, 328, 330, 332, 335, 337, 339, 358, 360, 367], "_tensor": [10, 12, 14, 16, 18, 24, 30, 32, 35, 36, 43, 44, 45, 46, 47, 48, 50, 52, 67, 75, 79, 81, 84, 90, 91, 92, 93, 95, 97, 99, 100, 104, 107, 109, 114, 116, 117, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 143, 145, 149, 150, 152, 154, 160, 161, 162, 163, 164, 165, 170, 171, 173, 174, 175, 177, 179, 184, 185, 187, 189, 192, 194, 195, 198, 199, 200, 202, 203, 204, 205, 209, 210, 211, 223, 231, 232, 233, 234, 236, 237, 244, 252, 253, 255, 262, 269, 273, 274, 275, 278, 279, 280, 287, 291, 293, 299, 300, 302, 304, 305, 307, 313, 317, 320, 322, 324, 328, 330, 332, 335, 337, 339, 358, 360, 367], "_i": [10, 12, 14, 16, 30, 32, 35, 36, 39, 43, 44, 45, 46, 47, 48, 50, 52, 67, 72, 73, 75, 79, 84, 90, 92, 93, 95, 97, 99, 100, 104, 107, 109, 114, 121, 128, 129, 131, 132, 134, 135, 136, 138, 140, 143, 145, 149, 150, 152, 154, 161, 162, 163, 164, 165, 170, 173, 175, 179, 184, 185, 187, 189, 192, 198, 199, 200, 202, 203, 204, 205, 209, 211, 223, 231, 232, 234, 236, 237, 252, 253, 262, 269, 273, 274, 275, 278, 279, 287, 291, 293, 299, 300, 302, 304, 305, 307, 313, 317, 320, 322, 330, 332, 335, 337, 339, 358, 360, 367], "verb": [10, 12, 14, 30, 32, 35, 39, 43, 44, 45, 46, 47, 48, 50, 52, 67, 75, 81, 84, 97, 100, 104, 107, 109, 114, 116, 117, 121, 128, 131, 136, 143, 145, 149, 152, 154, 161, 162, 163, 164, 165, 170, 171, 175, 177, 192, 194, 195, 223, 234, 255, 262, 269, 273, 274, 275, 278, 279, 280, 287, 299, 300, 302, 304, 305, 307, 317, 320, 322, 324, 332, 335, 358, 360], "complextensor": [10, 11, 17, 25, 26, 62, 63, 79, 80, 155, 156, 158, 159, 228, 248, 249, 266, 267, 269, 270, 327], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 381, 383, 386], "prealloc": [10, 12, 14, 16, 17, 18, 19, 24, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 67, 72, 73, 75, 79, 80, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 110, 114, 121, 125, 126, 127, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 242, 253, 254, 262, 264, 269, 274, 275, 278, 279, 287, 291, 292, 293, 294, 299, 300, 302, 304, 305, 306, 307, 313, 317, 319, 320, 321, 322, 324, 327, 328, 329, 330, 335, 337, 338, 339, 349, 358, 360, 365, 366, 367, 370], "command": [10, 12, 14, 16, 17, 18, 19, 24, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 67, 75, 79, 80, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 110, 111, 112, 114, 121, 124, 125, 126, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 157, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 242, 245, 247, 253, 254, 262, 264, 269, 274, 275, 278, 279, 285, 287, 291, 292, 293, 294, 299, 300, 302, 304, 305, 306, 307, 313, 317, 320, 321, 322, 324, 327, 328, 329, 330, 334, 335, 337, 338, 339, 343, 344, 348, 349, 353, 354, 358, 360, 361, 362, 365, 366, 367, 370, 376, 386], "queue": [10, 12, 14, 16, 17, 18, 19, 24, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 66, 67, 75, 79, 80, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 121, 124, 125, 126, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 157, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 217, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 242, 245, 247, 253, 254, 262, 264, 269, 274, 275, 278, 279, 285, 287, 291, 292, 293, 294, 299, 300, 302, 304, 305, 306, 307, 313, 317, 320, 321, 322, 324, 327, 328, 329, 330, 334, 335, 337, 338, 339, 343, 344, 348, 349, 353, 354, 358, 360, 361, 362, 365, 366, 367, 370], "id": [10, 12, 14, 16, 17, 18, 19, 24, 28, 30, 32, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 52, 60, 61, 66, 67, 75, 79, 80, 84, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 121, 124, 125, 126, 128, 129, 132, 133, 134, 138, 140, 143, 145, 149, 152, 154, 157, 161, 162, 163, 164, 165, 168, 170, 171, 173, 175, 179, 184, 185, 187, 189, 192, 194, 195, 198, 200, 202, 204, 209, 211, 213, 217, 218, 222, 223, 227, 228, 231, 232, 234, 235, 237, 238, 242, 243, 245, 247, 253, 254, 262, 264, 269, 274, 275, 278, 279, 285, 287, 291, 292, 293, 294, 299, 300, 302, 304, 305, 306, 307, 313, 317, 320, 321, 322, 324, 327, 328, 329, 330, 334, 335, 337, 338, 339, 343, 344, 348, 349, 353, 354, 358, 360, 361, 362, 365, 366, 367, 370, 376, 380, 381, 382, 383, 384, 385], "tile_layout": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 250, 252, 253, 254, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 377, 379, 381, 382, 383, 384, 386], "unary_backward": [11, 13, 15, 31, 33, 38, 40, 51, 53, 55, 57, 68, 70, 76, 78, 82, 85, 94, 96, 98, 101, 102, 108, 110, 113, 115, 122, 133, 142, 144, 146, 148, 153, 176, 181, 186, 188, 190, 191, 193, 207, 208, 230, 235, 251, 254, 261, 263, 265, 270, 276, 277, 283, 288, 290, 292, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 336, 338, 340, 342, 359], "abs_bw_t": 11, "_golden_function_ab": 11, "backward": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 68, 70, 76, 78, 80, 82, 85, 87, 94, 96, 98, 101, 102, 105, 108, 110, 113, 115, 118, 122, 133, 142, 144, 146, 148, 151, 153, 156, 172, 176, 178, 181, 186, 188, 190, 191, 193, 196, 197, 207, 208, 216, 221, 228, 230, 235, 249, 251, 254, 261, 263, 265, 267, 270, 276, 277, 281, 283, 288, 290, 292, 294, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 325, 327, 329, 336, 338, 340, 342, 359, 366, 368], "given": [11, 13, 15, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 66, 68, 70, 72, 73, 76, 78, 80, 82, 85, 89, 94, 96, 98, 101, 102, 108, 110, 113, 115, 118, 122, 133, 142, 144, 146, 148, 151, 153, 156, 172, 176, 178, 181, 186, 188, 190, 191, 193, 196, 197, 207, 208, 216, 221, 224, 225, 228, 230, 235, 243, 246, 249, 251, 254, 261, 263, 265, 267, 270, 276, 277, 281, 283, 284, 288, 290, 292, 294, 295, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 325, 327, 329, 336, 338, 340, 342, 349, 354, 359, 363, 366, 368, 371, 381, 384], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 68, 70, 76, 78, 80, 82, 85, 87, 94, 96, 98, 101, 102, 105, 108, 110, 113, 115, 118, 122, 133, 142, 144, 146, 148, 151, 153, 156, 172, 176, 178, 181, 186, 188, 190, 191, 193, 196, 197, 207, 208, 216, 221, 228, 230, 235, 249, 251, 254, 261, 263, 265, 267, 270, 276, 277, 281, 283, 288, 290, 292, 294, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 325, 327, 329, 336, 338, 340, 342, 359, 366, 368], "gradient": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 66, 68, 70, 76, 78, 80, 82, 85, 87, 94, 96, 98, 101, 102, 105, 108, 110, 113, 115, 118, 122, 127, 133, 142, 144, 146, 148, 151, 153, 172, 176, 178, 181, 186, 188, 190, 191, 193, 196, 197, 207, 208, 216, 221, 228, 230, 235, 251, 254, 261, 263, 265, 270, 276, 277, 281, 283, 288, 290, 292, 294, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 325, 327, 329, 336, 338, 340, 342, 359, 366, 368], "list": [11, 13, 15, 16, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 60, 61, 63, 68, 70, 71, 76, 78, 80, 82, 85, 86, 88, 90, 94, 96, 98, 101, 102, 108, 110, 113, 115, 118, 120, 122, 128, 129, 133, 138, 142, 144, 146, 148, 151, 153, 156, 170, 171, 172, 173, 176, 178, 181, 182, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 202, 204, 207, 208, 209, 214, 216, 217, 218, 221, 222, 228, 230, 231, 232, 235, 238, 245, 246, 247, 249, 251, 254, 255, 260, 261, 263, 265, 267, 270, 276, 277, 281, 283, 288, 290, 292, 293, 294, 297, 301, 303, 306, 308, 310, 311, 314, 316, 318, 321, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 342, 349, 354, 359, 360, 361, 362, 366, 367, 368, 373, 385], "about": [11, 21, 42, 118, 133, 186, 188, 190, 191, 193, 196, 197, 207, 208, 254, 261, 269, 270, 281, 314, 321, 368, 377, 379, 380, 381, 385], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 68, 70, 76, 78, 80, 85, 87, 94, 96, 98, 101, 102, 105, 108, 110, 113, 115, 118, 122, 133, 142, 144, 146, 148, 151, 153, 172, 176, 178, 181, 186, 188, 190, 191, 193, 196, 197, 207, 208, 216, 221, 228, 230, 235, 254, 261, 263, 265, 270, 276, 277, 281, 283, 288, 292, 294, 297, 301, 303, 306, 308, 310, 314, 316, 318, 321, 323, 325, 327, 329, 336, 338, 340, 342, 359, 366, 368], "acos_t": 12, "_golden_function_aco": 12, "rand": [12, 14, 24, 28, 30, 32, 35, 39, 41, 45, 49, 50, 61, 67, 69, 72, 73, 75, 86, 92, 97, 100, 107, 114, 121, 131, 134, 136, 140, 143, 145, 152, 161, 162, 163, 164, 165, 169, 179, 180, 192, 200, 201, 211, 215, 219, 220, 223, 234, 237, 239, 240, 244, 255, 260, 261, 262, 273, 274, 275, 283, 284, 286, 302, 304, 305, 307, 309, 317, 320, 322, 326, 331, 332, 333, 335, 349, 356, 357, 358, 364, 380, 381, 382, 384, 386], "acos_bw_t": 13, "invers": [13, 15, 31, 33, 38, 40], "cosin": [13, 15, 68, 70, 106], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 34, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 51, 53, 61, 68, 70, 76, 78, 79, 80, 81, 85, 90, 91, 94, 96, 98, 101, 108, 113, 115, 116, 117, 118, 122, 128, 129, 130, 138, 139, 142, 144, 146, 150, 151, 153, 157, 160, 170, 171, 172, 173, 174, 176, 178, 181, 182, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 212, 214, 216, 217, 218, 221, 222, 228, 230, 231, 232, 233, 236, 244, 252, 254, 255, 263, 265, 270, 276, 277, 280, 281, 288, 293, 294, 297, 301, 303, 308, 310, 316, 318, 323, 324, 325, 327, 328, 329, 330, 336, 340, 359, 365, 366, 367, 368, 386], "acosh_t": 14, "_golden_function_acosh": [14, 15], "acosh_bw_t": 15, "hyperbol": [15, 33, 40, 70, 310, 338], "add_t": 16, "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 61, 79, 80, 81, 90, 91, 116, 117, 118, 128, 129, 130, 138, 139, 150, 151, 157, 160, 170, 171, 172, 173, 174, 178, 182, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 209, 210, 212, 214, 216, 218, 221, 222, 228, 231, 232, 233, 236, 244, 255, 280, 281, 293, 294, 324, 325, 327, 328, 329, 330, 365, 366, 367, 368, 386], "_a": [16, 18, 36, 43, 44, 46, 47, 48, 79, 81, 90, 91, 116, 117, 128, 129, 130, 138, 139, 150, 160, 170, 171, 173, 174, 194, 195, 198, 199, 202, 203, 204, 205, 209, 210, 231, 232, 233, 236, 244, 255, 280, 293, 324, 328, 330, 367], "_b": [16, 18, 36, 43, 44, 46, 47, 48, 79, 81, 90, 91, 116, 117, 128, 129, 130, 138, 139, 150, 160, 170, 171, 173, 174, 194, 195, 198, 199, 202, 203, 204, 205, 209, 210, 231, 232, 233, 236, 244, 255, 280, 293, 324, 328, 330, 367], "datatyp": [16, 27, 29, 41, 58, 64, 65, 66, 72, 73, 86, 87, 88, 89, 90, 124, 125, 126, 128, 129, 135, 137, 138, 169, 170, 171, 173, 182, 194, 195, 198, 202, 204, 209, 214, 218, 222, 231, 232, 241, 242, 256, 257, 258, 259, 286, 293, 312, 324, 330, 346, 347, 367, 369, 370, 379, 381, 384, 385], "str": [16, 29, 34, 80, 83, 90, 105, 128, 129, 138, 170, 171, 173, 182, 183, 194, 195, 198, 202, 204, 209, 214, 218, 222, 224, 225, 231, 232, 293, 298, 324, 330, 367, 384], "int32": [16, 28, 43, 44, 45, 46, 47, 48, 72, 73, 90, 92, 128, 129, 134, 138, 140, 170, 173, 179, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 215, 218, 219, 220, 222, 231, 232, 237, 295, 304, 322, 324, 326, 330, 331, 364], "uint32": [16, 28, 44, 47, 72, 73, 86, 87, 127, 154, 157, 200, 201, 215, 219, 220, 319, 326, 330, 331, 349, 364, 376, 377], "4294967295": [16, 330], "uint16": [16, 28, 43, 46, 48, 90, 92, 125, 127, 154, 198, 199, 202, 203, 204, 205, 231, 232, 237, 241, 319, 322, 324, 330, 349, 369, 377], "65535": [16, 43, 46, 48, 231, 330], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 79, 80, 81, 90, 91, 116, 117, 118, 128, 129, 130, 138, 139, 150, 151, 157, 160, 170, 171, 172, 173, 174, 177, 178, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 209, 210, 212, 214, 216, 218, 221, 222, 228, 231, 232, 233, 236, 244, 255, 280, 281, 293, 294, 324, 325, 327, 328, 329, 330, 365, 366, 367, 368], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 79, 80, 81, 90, 91, 116, 117, 118, 128, 129, 130, 138, 139, 150, 151, 157, 160, 170, 171, 172, 173, 174, 177, 178, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 209, 210, 212, 214, 216, 218, 221, 222, 228, 231, 232, 233, 236, 244, 255, 280, 281, 293, 294, 324, 325, 327, 328, 329, 330, 365, 366, 367, 368], "scalar": [16, 17, 20, 22, 43, 44, 46, 47, 48, 79, 80, 81, 82, 90, 91, 116, 117, 118, 125, 126, 129, 130, 138, 139, 171, 173, 174, 177, 178, 194, 195, 198, 202, 204, 209, 210, 212, 215, 218, 219, 220, 222, 228, 231, 232, 233, 251, 255, 260, 264, 265, 280, 281, 293, 324, 326, 327, 330, 331, 364, 367, 386], "binary_backward": [17, 19, 34, 37, 42, 61, 80, 118, 151, 172, 196, 197, 216, 221, 228, 281, 294, 325, 327, 329, 368], "add_bw_t": 17, "_golden_function_bw": [17, 19, 34, 37, 42, 61, 118, 151, 172, 196, 197, 221, 281, 294, 325, 327, 329, 368], "are_required_output": [17, 19, 34, 61, 80, 228, 294, 327, 329, 366], "input_grad": [17, 19, 34, 61, 80, 105, 228, 294, 327, 329], "other_grad": [17, 19, 34, 61, 80, 228, 294, 327, 329], "bfloat4_b": [17, 19, 20, 22, 24, 37, 42, 61, 80, 124, 151, 172, 177, 178, 196, 197, 212, 216, 221, 228, 294, 325, 327, 329, 337, 339, 348, 365, 368], "addalpha_t": 18, "_golden_function_addalpha": 18, "alpha": [18, 19, 21, 23, 52, 53, 80, 84, 85, 296, 328, 329], "float": [18, 19, 20, 21, 22, 23, 41, 52, 53, 54, 55, 56, 57, 82, 84, 85, 104, 109, 112, 119, 124, 125, 126, 137, 141, 142, 147, 148, 149, 160, 169, 175, 176, 177, 206, 208, 215, 219, 220, 245, 247, 251, 252, 253, 255, 264, 265, 278, 279, 286, 289, 290, 296, 313, 314, 315, 316, 326, 328, 329, 331, 341, 342, 353, 354, 356, 357, 364, 377], "addalpha_bw_t": 19, "addcdiv_t": 20, "_golden_function_addcdiv": 20, "input_tensor_c": [20, 21, 22, 23, 178, 212, 365, 366], "tensor3": [20, 21, 22, 23, 177, 178, 212, 365, 366], "ternary_backward": [21, 23, 178, 366], "addcdiv_bw_t": 21, "addcmul_t": 22, "_golden_function_addcmul": 22, "addcmul_bw_t": 23, "alt_complex_rotate90_t": 24, "_golden_function_alt_complex_rotate90": 24, "_": [24, 371, 376, 383], "2i": 24, "even": [24, 74, 213, 214], "complex_unari": [25, 62, 155, 158, 159, 248, 266], "angle_t": 25, "complex": [25, 26, 62, 63, 155, 156, 248, 249, 266, 267, 380, 384], "complex_unary_backward": [26, 63, 156, 249, 267], "angle_bw_t": 26, "arange_t": 27, "inclus": [27, 377], "end": [27, 72, 73, 79, 160, 177, 236, 311, 362, 372, 376, 381, 383, 385], "exclus": [27, 245], "consecut": [27, 377], "dram_memory_config": [27, 58, 88, 89, 182, 214, 345, 377, 381], "print": [27, 29, 60, 88, 89, 123, 124, 125, 126, 182, 213, 214, 241, 242, 243, 247, 282, 284, 298, 311, 345, 346, 348, 369, 370, 376, 377, 380, 384, 386], "00000": [27, 379], "argmax_t": 28, "_create_golden_funct": [28, 215, 219, 220, 326, 331, 364], "local": [28, 32, 35, 49, 50, 67, 69, 75, 77, 92, 93, 95, 97, 99, 100, 107, 114, 132, 134, 140, 143, 145, 152, 154, 161, 162, 163, 164, 165, 179, 180, 184, 185, 187, 189, 192, 200, 211, 215, 219, 220, 223, 229, 234, 237, 262, 274, 275, 291, 299, 300, 302, 304, 305, 307, 309, 313, 317, 320, 322, 326, 331, 333, 335, 337, 349, 356, 357, 364, 371, 372, 377, 378, 380, 381, 382, 383, 384, 385], "provid": [28, 41, 109, 127, 169, 182, 214, 215, 219, 220, 224, 225, 260, 261, 286, 312, 326, 331, 334, 344, 349, 364, 372, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386], "keepdim": [28, 215, 219, 220, 260, 326, 331, 364], "row_major_layout": [28, 29, 58, 83, 86, 119, 120, 124, 125, 241, 346, 369, 377, 380, 383, 384], "yield": [28, 215, 219, 220, 326, 331, 364, 384], "output_onedim": 28, "output_alldim": 28, "cache_file_nam": 29, "pathlib": [29, 83, 183], "path": [29, 83, 183, 374, 376, 382, 384, 385, 386], "callabl": [29, 224, 225], "serial": 29, "mesh_mapp": [29, 124], "cpptensortomesh": 29, "tensortomesh": [29, 124], "truncat": [29, 359], "mantissa": 29, "bit": 29, "bfp": [29, 377], "rais": [29, 348], "runtim": [29, 385], "error": [29, 168, 213, 214, 227, 348, 372, 380, 381, 382, 383, 384], "rte": 29, "bfp8": 29, "bfp4": 29, "randn": [29, 74, 87, 89, 123, 124, 135, 182, 214, 217, 242, 268, 295, 345, 346, 347, 348, 360, 370, 383], "375": [29, 124], "30469": [29, 124], "714844": [29, 124], "761719": [29, 124], "53125": [29, 124], "652344": [29, 124], "asin_t": 30, "_golden_function_asin": 30, "asin_bw_t": 31, "lambda": [31, 33, 40, 51, 53, 55, 57, 70, 82, 85, 96, 142, 176, 186, 188, 190, 208, 265, 290, 303, 308, 310, 316, 318, 371], "sine": [31, 33, 106, 310], "asinh_t": 32, "register_ttnn_cpp_unary_funct": [32, 35, 49, 50, 67, 69, 75, 77, 92, 93, 95, 97, 99, 100, 107, 114, 132, 134, 140, 143, 145, 152, 154, 161, 162, 163, 164, 165, 179, 180, 184, 185, 187, 189, 192, 200, 211, 223, 229, 234, 237, 262, 274, 275, 291, 299, 300, 302, 304, 305, 307, 309, 313, 317, 320, 322, 333, 335, 337, 356, 357], "asinh_bw_t": 33, "assign_bw_t": 34, "assign": 34, "other_tensor": [34, 80], "round_mod": [34, 79, 80, 264, 265], "atan_t": 35, "atan2_t": 36, "_golden_function_atan2": 36, "arctan": 36, "left": [36, 79, 128, 170, 375], "right": [36, 79, 128, 170], "x": [36, 41, 66, 137, 169, 182, 214, 248, 353, 354, 374, 376, 377, 380, 383], "atan2_bw_t": 37, "atan_bw_t": 38, "_golden_function_atan": 38, "tangenr": 38, "atanh_t": 39, "_golden_function_atanh": 39, "bflaot8_b": 39, "atanh_bw_t": 40, "tangent": [40, 338], "batch_norm_t": 41, "batch": [41, 64, 65, 66, 111, 112, 157, 182, 214, 217, 256, 257, 258, 259, 354, 376, 380, 384], "norm": [41, 169, 286], "over": [41, 64, 65, 66, 103, 135, 137, 169, 215, 219, 220, 261, 286, 312, 326, 331, 353, 354, 364, 374, 385], "see": [41, 137, 169, 286, 372, 373, 375, 376, 380, 381, 382, 383, 384, 385], "spatial": [41, 135, 363, 380], "text": [41, 79, 137, 160, 169, 236, 244, 372], "gamma": [41, 137, 230], "beta": [41, 137, 313, 314], "epsilon": [41, 137, 169, 286], "mu": [41, 137, 169], "sigma": [41, 137, 169, 312], "cdot": [41, 72, 73, 137, 169, 367, 381], "varianc": [41, 137, 169, 377], "respect": [41, 66, 87, 137, 169, 214, 377, 379], "learnabl": [41, 137, 169], "scale": [41, 104, 137, 169, 215, 219, 220, 296, 313, 326, 331, 353, 354, 364, 384], "shift": [41, 137, 169], "small": [41, 137, 169, 243, 380], "ep": [41, 206, 208], "1e": [41, 137, 160, 169, 286], "05": [41, 381], "momentum": 41, "running_mean": 41, "train": [41, 382, 384, 385], "updat": [41, 167, 372, 375, 382, 384, 386], "running_var": 41, "evalu": 41, "compute_kernel_config": [41, 58, 103, 106, 137, 169, 182, 214, 215, 219, 220, 286, 312, 326, 331, 353, 354, 364], "devicecomputekernelconfig": [41, 64, 65, 66, 103, 106, 137, 169, 182, 214, 256, 257, 258, 259, 286, 312, 353, 354], "These": [41, 214, 372, 376, 378, 381, 382, 385, 386], "interleav": [41, 60, 103, 169, 286, 295, 312, 345, 347, 355, 377], "bias_gelu_bw_t": 42, "bias_gelu": 42, "approxim": [42, 93, 95, 99, 105, 132, 133, 184, 185, 187, 189, 291, 299, 337, 339], "bitwise_and_t": 43, "_golden_function_bitwise_and": 43, "integ": [43, 44, 46, 47, 48, 245, 354], "bitwise_left_shift_t": 44, "_golden_function_bitwise_left_shift": 44, "ha": [44, 47, 66, 214, 224, 225, 258, 259, 334, 355, 371, 372, 376, 377, 378, 386], "shift_bit": [44, 47], "31": [44, 47, 379, 381], "bitwise_not_t": 45, "_golden_function_bitwise_not": 45, "2147483647": [45, 128], "bitwise_or_t": 46, "_golden_function_bitwise_or": 46, "bitwise_right_shift_t": 47, "_golden_function_bitwise_right_shift": 47, "bitwise_xor_t": 48, "_golden_function_bitwise_xor": 48, "cbrt_t": 49, "ceil_t": 50, "ceil_bw_t": 51, "celu_t": 52, "_golden_function_celu": 52, "celu_bw_t": 53, "formula": [53, 85, 142, 176, 177, 208, 314, 316], "clamp_t": 54, "_golden_function_clamp": 54, "min_tensor": [54, 56], "max_tensor": [54, 56], "clamp_bw_t": 55, "clip_t": 56, "_golden_function_clip": 56, "clip_bw_t": 57, "data_mov": [58, 60, 111, 112, 127, 157, 238, 245, 247, 282, 284, 285, 295, 311, 319, 343, 344, 361, 362], "clone_t": 58, "doe": [58, 124, 348, 372, 376, 385], "alter": 58, "unpad": [58, 120, 346, 362], "two": [58, 60, 131, 136, 214, 273, 285, 312, 332, 346, 355, 371, 374, 377, 378, 379, 382, 383, 384, 385], "ensur": [58, 319, 334, 372, 374, 377, 380, 384, 385], "adjust": [58, 313, 385], "target": [58, 119, 120, 260, 372, 384], "l1_memory_config": [58, 345, 371, 377, 383, 386], "remov": [59, 348, 362], "success": [59, 380], "concat_t": 60, "concaten": [60, 61, 352, 355], "group": [60, 64, 65, 66, 137, 256, 257, 258, 259, 377, 380, 384], "split": [60, 131, 136, 273, 332, 355, 377], "partit": 60, "independ": 60, "altern": [60, 214, 381, 382, 386], "recombin": 60, "dure": [60, 124, 160, 348, 377, 385], "residu": 60, "concat_bw_t": 61, "30": [61, 88, 127, 295, 379, 381, 384], "conj_t": 62, "conjug": 62, "conj_bw_t": 63, "conv1d_t": 64, "1d": [64, 214, 238, 255, 382], "signal": [64, 65, 103, 135], "compos": [64, 65, 66, 103, 135, 348, 382, 384], "sever": [64, 65, 66, 103, 135, 383, 384], "plane": [64, 65, 66, 103, 135], "2d": [64, 65, 66, 127, 135, 214, 363, 377, 380, 384], "input_length": 64, "weight_tensor": [64, 65, 66, 103, 258, 259, 380, 384], "out_channel": [64, 65, 66, 256, 257, 258, 259, 380, 384], "in_channel": [64, 65, 66, 256, 257, 258, 259, 380, 384], "kernel_height": [64, 65, 258, 259], "kernel_width": [64, 65, 258, 259], "bias_tensor": [64, 65, 66, 103, 380, 384], "batch_siz": [64, 65, 66, 87, 135, 217, 256, 257, 258, 259, 286, 352, 355, 371, 380, 382, 383, 384], "length": [64, 255, 353, 354], "kernel_s": [64, 65, 66, 217, 256, 257, 258, 259, 380, 384], "convolv": [64, 65, 66, 217, 256, 257, 258, 259], "cross": [64, 65, 66, 256, 257, 258, 259], "correl": [64, 65, 66, 256, 257, 258, 259, 372, 385], "side": [64, 65, 66, 256, 257, 258, 259, 376], "pad_length": 64, "pad_left": [64, 65, 66, 256, 257, 258, 259], "pad_right": [64, 65, 66, 256, 257, 258, 259], "connect": [64, 65, 66, 256, 257, 258, 259, 382, 384, 385], "conv_config": [64, 65, 66, 256, 257, 258, 259, 380, 384], "compute_config": [64, 65, 66, 256, 257, 258, 259], "return_output_dim": [64, 65, 66], "return_weights_and_bia": [64, 65, 66], "bias": [64, 371, 382, 383, 384], "conv2d_t": 65, "inform": [65, 127, 269, 374, 385], "tech": 65, "input_height": [65, 66, 256, 257, 258, 259, 380, 384], "input_width": [65, 66, 256, 257, 258, 259, 380, 384], "pad_height": [65, 66, 256, 257, 258, 259], "pad_width": [65, 66, 256, 257, 258, 259], "pad_top": [65, 66, 256, 257, 258, 259], "pad_bottom": [65, 66, 256, 257, 258, 259], "conv_transpose2d_t": 66, "transpos": [66, 106, 182, 214, 247, 355, 377, 382, 384], "seen": [66, 71], "fraction": 66, "deconvolut": 66, "o": [66, 374, 376, 382, 383, 384], "g": [66, 214, 374, 376, 377, 382, 384, 385], "k_h": 66, "k_w": 66, "equat": 66, "h_out": 66, "h_in": 66, "output_pad": 66, "w_out": 66, "w_in": 66, "mirror_kernel": 66, "mirror": 66, "intern": [66, 137, 373], "been": [66, 224, 225, 295, 334, 372, 385], "cos_t": 67, "cos_bw_t": 68, "_golden_function_co": 68, "cosh_t": 69, "cosh_bw_t": 70, "coregrid": [71, 137, 182, 214, 383], "corerangeset": [71, 349, 361], "strategi": [71, 214, 376, 377, 384], "shardstrategi": 71, "shardorient": 71, "use_height_and_width_as_shard_shap": 71, "travers": 71, "math": [71, 376], "320": 71, "cumprod_t": 72, "cumul": [72, 73], "_1": [72, 73], "time": [72, 160, 224, 282, 295, 372, 376, 383, 385, 386], "_2": [72, 73], "desir": [72, 73, 89, 111, 112, 119, 120, 124, 346, 347, 348], "cast": [72, 73], "reverse_ord": [72, 73], "accumul": [72, 73], "begin": [72, 73, 79, 160, 236, 376, 381], "axi": [72, 73, 284, 381], "tensor_input": [72, 73], "tensor_output": [72, 73], "With": [72, 73, 378], "preallocated_output": [72, 73], "cumsum_t": 73, "pycapsul": [74, 123, 268, 345], "resourc": [74, 385], "explicitli": 74, "whose": [74, 89], "forc": 74, "deg2rad_t": 75, "deg2rad_bw_t": 76, "_golden_function_deg2rad": 76, "degre": [76, 263], "radian": [76, 263], "digamma_t": 77, "digamma_bw_t": 78, "_golden_function_digamma": 78, "div_t": 79, "_golden_function_div": 79, "_mode": 79, "accurate_mod": 79, "non": [79, 214, 217, 238, 254, 264, 269, 289], "div_bw_t": 80, "pcc": [80, 151, 172, 265, 372, 375, 385], "degrad": [80, 151, 172, 265, 380, 381, 382, 383, 384], "div_no_nan_t": 81, "_golden_function_div_no_nan": 81, "div_no_nan_bw_t": 82, "denomin": [82, 264], "dump": [83, 224, 385, 386], "file_nam": [83, 183, 386], "save": 83, "tensorbin": [83, 183], "elu_t": 84, "_golden_function_elu": 84, "elu_bw_t": 85, "embedding_t": 86, "retriev": 86, "word": 86, "padding_idx": 86, "token": [86, 167, 354], "embeddings_typ": 86, "embeddingstyp": 86, "106445": 86, "988281": 86, "59375": [86, 381], "212891": 86, "964844": 86, "199219": 86, "996094": 86, "78362e": 86, "38": [86, 377, 379, 383], "89785e": 86, "39": [86, 383], "04479e": 86, "25815e": 86, "71833e": 86, "59995e": 86, "60398e": 86, "83671e": 86, "22242e": 86, "88263e": 86, "35917e": 86, "49994e": 86, "embedding_backward": 87, "embedding_bw_t": 87, "extract": [87, 127, 384], "vocabulari": 87, "output_gradient_tensor": 87, "seq_len": [87, 106], "embedding_dim": 87, "num_embed": 87, "1024": [87, 384], "4096": 87, "3200": 87, "input_shap": [87, 217], "input_index": 87, "randint": [87, 295], "weights_shap": 87, "weights_ttnn": 87, "grad_shap": 87, "grad_data": 87, "empty_t": 88, "uniniti": [88, 89], "bfloat_8": 88, "21": [88, 384], "67": 88, "empty_like_t": 89, "87": [89, 382, 384], "45": [89, 335, 336], "22": [89, 374, 380, 381, 382, 383, 384], "60": [89, 127], "75": [89, 123], "25": [89, 346, 376, 384], "eq_t": 90, "eq__t": 91, "_golden_function_eq_": 91, "input_a": [91, 130, 139, 157, 174, 210, 215, 219, 220, 233, 326, 331, 364], "input_b": [91, 130, 139, 157, 174, 210, 233], "eqz_t": 92, "_tensor_i": [92, 134, 140, 179, 200, 211, 237], "erf_t": 93, "fast_and_approximate_mod": [93, 95, 99, 132, 184, 185, 187, 189, 291, 299, 337, 339], "fast": [93, 95, 99, 132, 184, 185, 187, 189, 291, 299], "erf_bw_t": 94, "_golden_function_erf": 94, "erfc_t": 95, "erfc_bw_t": 96, "erfinv_t": 97, "erfinv_bw_t": 98, "_golden_function_erfinv": 98, "exp_t": 99, "exp2_t": 100, "exp2_bw_t": 101, "_golden_function_exp2": 101, "exp_bw_t": 102, "_golden_function_exp": 102, "exponenti": 102, "conv3d_t": 103, "3d": 103, "d": [103, 374], "kd": 103, "kh": [103, 380], "kw": [103, 380], "c_in": 103, "c_out": 103, "conv3dconfig": 103, "dropout_t": 104, "rng": 104, "probabl": 104, "averag": [104, 135, 376], "total_elem": 104, "124": 104, "prob": 104, "gelu_bw_t": [105, 133], "_golden_function_gelu": [105, 133], "algorithm": [105, 363], "rotary_embedding_t": 106, "rotari": 106, "cos_cach": 106, "sin_cach": 106, "token_idx": 106, "assum": [106, 120, 334, 363], "head_dim": 106, "cod_cach": 106, "token_index": 106, "expm1_t": 107, "expm1_bw_t": 108, "_golden_function_expm1": 108, "fill_t": 109, "_golden_function_fil": 109, "fill_valu": [109, 125, 126, 377, 379, 381], "wormhole_b0": 109, "system": [109, 131, 136, 264, 273, 278, 279, 289, 332, 374, 376, 385], "fill_bw_t": 110, "fill_ones_rm_t": 111, "val_hi": [111, 112], "val_lo": [111, 112], "count": [111, 112, 169, 376], "ye": [111, 112], "hone": [111, 112], "high": [111, 112, 374, 377, 379, 381, 385, 386], "region": [111, 112, 243], "wone": [111, 112], "fill_rm_t": 112, "nchw": [112, 384], "hw": 112, "hfill": 112, "wfill": 112, "hi": 112, "lo": 112, "low": 112, "fill_zero_bw_t": 113, "_golden_function_fill_zero": 113, "floor_t": 114, "floor_bw_t": 115, "_golden_function_floor": 115, "floor_div_t": 116, "_golden_function_floor_div": 116, "fmod_t": 117, "_golden_function_fmod": 117, "fmod_bw_t": 118, "padded_shap": [119, 246], "pad_valu": [119, 124, 247, 285, 311, 344], "target_layout": [119, 120], "target_mem_config": [119, 120], "padded_tensor": 119, "output_mem_config": [119, 120], "unpadded_tensor": 120, "frac_t": 121, "_golden_function_frac": [121, 122], "frac_bw_t": 122, "param": [123, 245, 345], "tensor_on_devic": [123, 345], "tensor_on_host": [123, 345], "365234": 123, "130859": 123, "itself": 124, "twice": [124, 376], "purpos": [124, 372, 375, 377], "second": [124, 131, 136, 182, 214, 245, 255, 273, 285, 332, 376, 383, 384, 386], "now": [124, 319, 348, 363, 377, 379, 383, 385], "mapper": 124, "cq_id": [124, 334, 348], "full_t": 125, "_golden_function_ful": 125, "filled_tensor": [125, 126], "full_like_t": 126, "templat": [126, 242, 370, 376], "gather_t": 127, "except": [127, 214, 312, 383], "exce": 127, "do": [127, 372, 385], "sparse_grad": 127, "spars": 127, "20": [127, 223, 245, 295, 313, 314, 376, 384, 385], "40": [127, 217], "50": 127, "70": 127, "80": [127, 172, 384], "index_tensor": 127, "input_tensor_ttnn": [127, 319], "index_tensor_ttnn": 127, "gathered_tensor": 127, "gcd_t": 128, "_golden_function_gcd": 128, "greatest": 128, "common": [128, 170, 372, 384], "2147483648": 128, "tensorint32default": [128, 170], "ge_t": 129, "ge__t": 130, "_golden_function_ge_": 130, "geglu_t": 131, "_golden_function_geglu": 131, "part": [131, 136, 273, 332, 372, 376, 383], "gelu_t": 132, "uint8": [133, 154, 292, 311], "gez_t": 134, "global_avg_pool2d_t": 135, "golden_global_avg_pool2d": 135, "adapt": 135, "across": [135, 376, 377, 381], "entir": [135, 334, 385], "typic": [135, 169, 377, 384], "glu_t": 136, "_golden_function_glu": 136, "group_norm_t": 137, "_postprocess_golden_function_output": [137, 245], "num_group": 137, "input_mask": 137, "mask": [137, 350, 351, 354, 380, 381, 382, 383, 384, 385], "look": [137, 214, 349, 372, 373, 376, 377, 385], "inplac": [137, 199, 201, 203, 205], "num_out_block": 137, "negative_mask": 137, "cb": [137, 376], "overlap": 137, "fact": 137, "rm": [137, 286, 374], "gt_t": 138, "gt__t": 139, "_golden_function_gt_": 139, "gtz_t": 140, "hardshrink_t": 141, "_golden_function_hardshrink": 141, "lambd": [141, 142, 315, 316], "hardshrink_bw_t": 142, "hardsigmoid_t": 143, "hardsigmoid_bw_t": 144, "_golden_function_hardsigmoid": 144, "hardswish_t": 145, "hardswish_bw_t": 146, "_golden_function_hardswish": 146, "hardtanh_t": 147, "_golden_function_hardtanh": 147, "min_val": 147, "max_val": 147, "hardtanh_bw_t": 148, "heaviside_t": 149, "_golden_function_heavisid": 149, "hypot_t": 150, "_golden_function_hypot": 150, "hypot_bw_t": 151, "i0_t": 152, "i0_bw_t": 153, "_golden_function_i0": 153, "identity_t": 154, "sfpu": 154, "shouldn": 154, "instead": [154, 279, 383], "sinc": 154, "lower": [154, 245], "float16": 154, "imag_t": 155, "imag_bw_t": 156, "imaginari": 156, "indexed_fill_t": 157, "replac": [157, 341], "denot": 157, "batch_id": 157, "is_imag_t": 158, "is_real_t": 159, "isclose_t": 160, "_golden_function_isclos": 160, "leq": 160, "atol": 160, "rtol": 160, "otherwis": [160, 260, 334, 349, 383, 386], "rel": 160, "toler": 160, "05f": 160, "absolut": [160, 168], "08f": 160, "equal_nan": 160, "nan": 160, "treat": [160, 214], "isfinite_t": 161, "isinf_t": 162, "isnan_t": 163, "isneginf_t": 164, "isposinf_t": 165, "fill_cache_for_user__t": 166, "popul": [166, 224, 376], "batch_index": 166, "update_cache_for_token__t": 167, "update_index": 167, "batch_offset": 167, "l1_loss_t": 168, "_golden_function_l1_loss": 168, "input_refer": [168, 227], "input_predict": [168, 227], "layer_norm_t": 169, "layer": [169, 286, 376, 380, 382, 384], "program_config": [169, 182, 214, 286, 350, 351, 353, 354], "programconfig": [169, 286], "pre_all_gath": 169, "bf16": 169, "unshard": [169, 286, 312, 377], "cannot": [169, 286], "tile_height": 169, "tile_width": [169, 286, 312], "stick": 169, "align": [169, 214, 312, 376], "lcm_t": 170, "_golden_function_lcm": 170, "least": [170, 214, 376], "32767": 170, "32768": 170, "ldexp_t": 171, "ldexp_bw_t": 172, "outsid": 172, "le_t": 173, "le__t": 174, "_golden_function_le_": 174, "leaky_relu_t": 175, "_golden_function_leaky_relu": 175, "negative_slop": [175, 176], "slope": 175, "leaki": 175, "leaky_relu_bw_t": 176, "01": [176, 385], "lerp_t": 177, "_golden_function_lerp": 177, "point": [177, 313, 376, 377], "interpol": 177, "lerp_bw_t": 178, "lez_t": 179, "lgamma_t": 180, "lgamma_bw_t": 181, "_golden_function_lgamma": 181, "linear_t": 182, "behaviour": [182, 214], "transpose_a": [182, 214], "transpose_b": [182, 214], "matmulprogramconfig": [182, 214], "output_til": [182, 214], "128": [182, 214, 380, 381, 382, 383, 384, 386], "log_t": 184, "log10_t": 185, "log10_bw_t": 186, "log1p_t": 187, "1e7": 187, "log1p_bw_t": 188, "log2_t": 189, "log2_bw_t": 190, "log_bw_t": 191, "_golden_function_log": 191, "logarithm": [191, 230], "log_sigmoid_t": 192, "log_sigmoid_bw_t": 193, "_golden_function_log_sigmoid": 193, "logaddexp_t": 194, "logaddexp2_t": 195, "logaddexp2_bw_t": 196, "logaddexp_bw_t": 197, "logical_and_t": 198, "_golden_function_logical_and": 198, "AND": [198, 199], "use_legaci": 198, "logical_and__t": 199, "logical_not_t": 200, "logical_not__t": 201, "_golden_function_logical_not_": 201, "logical_or_t": 202, "_golden_function_logical_or": 202, "OR": [202, 203, 285], "logical_or__t": 203, "logical_xor_t": 204, "_golden_function_logical_xor": 204, "land": [204, 205], "lnot": [204, 205], "lor": [204, 205], "logical_xor__t": 205, "xor": 205, "logit_t": 206, "_golden_function_logit": [206, 207], "logit_bw_t": 207, "logiteps_bw_t": 208, "logitep": 208, "lt_t": 209, "lt__t": 210, "_golden_function_lt_": 210, "ltz_t": 211, "mac_t": 212, "_golden_function_mac": 212, "context": [213, 271, 272], "manag": [213, 271, 272, 372, 374, 384], "exit": 213, "occur": 213, "matmul_t": 214, "dimension": [214, 230, 377], "dot": [214, 312, 353, 354], "although": 214, "combin": [214, 382], "work": [214, 311, 371, 372, 374, 386], "most": [214, 377, 381, 383, 384], "variou": [214, 381], "appropri": [214, 372, 374, 384], "abov": [214, 377], "criteria": 214, "messag": [214, 376, 384, 385], "unexpect": 214, "obviou": 214, "scenario": [214, 377], "relat": 214, "swap": 214, "j": [214, 312], "implicitli": 214, "extend": 214, "patch": 214, "leverag": 214, "accord": [214, 247, 282, 295, 385], "n_size": 214, "m_size": 214, "k_size": 214, "p": [214, 377, 385], "though": 214, "chosen": [214, 376], "carefulli": 214, "fix": [214, 380, 385], "problem": 214, "max_t": 215, "computekernelconfig": [215, 219, 220, 312, 326, 331, 364], "factor": [215, 219, 220, 326, 331, 364], "bessel": [215, 219, 220, 326, 331, 364], "max_bw_t": 216, "max_pool2d_t": 217, "golden_maxpool2d": 217, "window": [217, 380, 384], "nhw": 217, "scheme": [217, 256, 257, 258, 259], "input_h": [217, 384], "input_w": [217, 384], "ceil_mod": [217, 384], "applied_shard_schem": 217, "deallocate_input": 217, "createdevic": 217, "l1_small_siz": [217, 243, 380, 384], "8192": [217, 349, 380, 384], "kernel_w": 217, "stride_h": 217, "stride_w": 217, "dilation_h": 217, "dilation_w": 217, "nchw_shape": 217, "256": [217, 384], "in_n": 217, "in_c": 217, "in_h": 217, "in_w": 217, "input_perm": 217, "input_reshap": 217, "tt_input": 217, "tt_input_dev": 217, "tt_output": 217, "in_place_halo": 217, "maximum_t": 218, "_golden_function_maximum": 218, "tensorsupport": 218, "16777216": 218, "mean_t": 219, "min_t": 220, "min_bw_t": 221, "minimum_t": 222, "_golden_function_minimum": 222, "mish_t": 223, "inf": [223, 229], "initialize_model": [224, 225, 371], "nn": [224, 225, 373, 378, 379, 382, 384], "model_nam": [224, 225, 371], "convert_to_ttnn": [224, 225, 371], "custom_preprocessor": [224, 225, 371], "dict": [224, 225, 384], "parameterdict": [224, 225], "prefix": [224, 225], "run_model": 224, "reader_patterns_cach": 224, "disabl": [224, 225, 380, 381, 382, 383, 384, 385, 386], "git": [224, 225, 374], "doesn": [224, 225], "invalid": [224, 225], "preprocessor": [224, 225], "put": [224, 225, 371, 379, 380, 381, 382, 383, 384], "submodul": [224, 225, 374, 382, 384], "appear": [224, 225], "ttnn_module_arg": 224, "tmp": [224, 385], "model_graph": 224, "svg": [224, 386], "avoid": [224, 313, 376, 377, 380, 381, 385], "recomput": 224, "moreh_sum_t": 226, "mse_loss_t": 227, "_golden_function_mse_loss": 227, "mul_bw_t": 228, "multigammaln_t": 229, "multigammaln_bw_t": 230, "_golden_function_mvlgamma": 230, "multivari": 230, "mvlgamma": 230, "5f": 230, "multiply_t": 231, "ne_t": 232, "ne__t": 233, "_golden_function_ne_": 233, "neg_t": 234, "neg_bw_t": 235, "_golden_function_neg": 235, "nextafter_t": 236, "_golden_function_nextaft": 236, "_float": 236, "neq": 236, "nez_t": 237, "nonzero_t": 238, "well": [238, 374, 375, 381], "normalize_global_t": 239, "_golden_function_normalize_glob": 239, "normalize_hw_t": 240, "_golden_function_normalize_hw": 240, "ones_t": 241, "ones_like_t": 242, "trace_region_s": 243, "dispatch_core_config": 243, "dispatchcoreconfig": 243, "0x7f9aef1e15f0": 243, "worker_l1_s": 243, "default_l1_small_s": 243, "default_trace_region_s": 243, "allocat": 243, "dispatch_core_typ": 243, "dispatchcoretyp": 243, "dispatch": [243, 376], "worker": [243, 380, 381, 382, 383, 384], "0x7fbac5bfc1b0": 243, "outer_t": 244, "_golden_function_out": 244, "otim": 244, "pad_t": 245, "_preprocess_golden_function_input": 245, "locat": [245, 373, 376, 378, 385, 386], "mutual": 245, "output_tensor_shap": [245, 344], "input_tensor_start": 245, "union": 245, "use_multicor": [245, 343, 344, 361, 362], "pad_input": 245, "assert": [245, 383, 386], "unpadded_shap": 246, "annot": [246, 372], "fixeds": 246, "permute_t": 247, "nullopt": [247, 349, 384], "tthe": 247, "broken": 247, "random": [247, 380, 382, 384], "garbag": 247, "polar_t": 248, "cartesian": 248, "theta": 248, "polar_bw_t": 249, "polygamma_t": 250, "_golden_function_polygamma": 250, "decim": [250, 287], "k": [250, 312, 349, 353, 354, 384], "polygamma_bw_t": 251, "polyval_t": 252, "_golden_function_polyv": 252, "coeffici": [252, 372], "coeff": 252, "sum_": [252, 312], "polynomi": 252, "pow_t": 253, "_golden_function_pow": 253, "expon": [253, 254, 289, 290, 377], "pow_bw_t": 254, "power": [254, 360, 385], "prelu_t": 255, "_golden_function_prelu": 255, "arrai": [255, 381], "suitabl": [256, 257, 258, 259], "invoc": [256, 257, 258, 259], "exact": [256, 257, 258, 259, 377], "input_memory_config": [256, 257, 258, 259], "input_layout": [256, 257, 258, 259], "input_dtyp": [256, 257, 258, 259], "output_dtyp": [256, 257, 258, 259], "convtranspose2d": [257, 258], "conv_tranpose2d": 258, "weights_format": [258, 259], "iohw": 258, "has_bia": [258, 259], "term": [258, 259, 375], "oihw": 259, "prod_t": 260, "everi": [260, 372, 376, 381, 383, 385, 386], "squeez": [260, 348], "output_all_dim": 260, "prod_bw_t": 261, "particular": [261, 371, 386], "taken": 261, "all_dims_output": 261, "rad2deg_t": 262, "rad2deg_bw_t": 263, "_golden_function_rad2deg": 263, "rdiv_t": 264, "_golden_function_rdiv": 264, "consid": 264, "numer": [264, 313, 373, 377], "rounding_mod": 264, "rdiv_bw_t": 265, "real_t": 266, "real_bw_t": 267, "new_tensor": 268, "my_memory_config": 268, "reciprocal_t": 269, "inaccur": [269, 377], "characterist": [269, 385], "fp": 269, "reciprocal_bw_t": 270, "_golden_function_reciproc": 270, "being": [271, 272, 376, 377], "reglu_t": 273, "_golden_function_reglu": 273, "relu_t": 274, "relu6_t": 275, "relu6_bw_t": 276, "_golden_function_relu6": 276, "relu_bw_t": 277, "_golden_function_relu": 277, "relu_max_t": 278, "_golden_function_relu_max": 278, "upper_limit": 278, "cap": 278, "relu_min_t": 279, "_golden_function_relu_min": 279, "lower_limit": 279, "remainder_t": 280, "_golden_function_remaind": 280, "modulu": 280, "remainder_bw_t": 281, "whb0": 281, "repeat_t": 282, "repetit": [282, 284], "repetition_vector": 282, "smallvector": 282, "repeat_bw_t": 283, "repeat_interleave_t": 284, "he": 284, "expand": [284, 377, 381], "torch_input_tensor": [284, 386], "torch_result": 284, "reshape_t": 285, "cost": 285, "view": [285, 376, 382, 384, 385, 386], "new_shap": 285, "kwtype": 285, "rms_norm_t": 286, "root": [286, 292, 321, 350, 351, 382, 384, 385], "round_t": 287, "_golden_function_round": [287, 288], "No": [287, 380, 382], "round_bw_t": 288, "rpow_t": 289, "_golden_function_rpow": 289, "upto": 289, "28": [289, 382], "posit": [289, 354], "rpow_bw_t": 290, "rsqrt_t": 291, "rsqrt_bw_t": 292, "_golden_function_rsqrt": 292, "rsub_t": 293, "_golden_function_rsub": 293, "rsub_bw_t": 294, "subract": 294, "revers": 294, "scatter_t": 295, "onto": 295, "src": 295, "destin": 295, "amax": 295, "amin": 295, "info": [295, 319, 379, 380, 381, 382, 383, 384, 385], "input_torch": 295, "index_torch": 295, "int64": 295, "source_torch": 295, "input_ttnn": 295, "index_ttnn": 295, "source_ttnn": 295, "selu_t": 296, "_golden_function_selu": [296, 297], "0507": 296, "67326": 296, "selu_bw_t": 297, "modifi": [298, 313], "short": [298, 386], "sigmoid_t": 299, "vector_mod": 299, "better": [299, 385], "rc": [299, 374], "sigmoid_accurate_t": 300, "sigmoid_bw_t": 301, "_golden_function_sigmoid": 301, "sign_t": 302, "sign_bw_t": 303, "signbit_t": 304, "silu_t": 305, "silu_bw_t": 306, "_golden_function_silu": 306, "sin_t": 307, "sin_bw_t": 308, "sinh_t": 309, "sinh_bw_t": 310, "slice_t": 311, "slice_start": 311, "input_tensor_shap": 311, "slice_end": 311, "slice_step": 311, "unmodifi": 311, "undefin": 311, "16": [311, 377, 381, 383, 384], "softmax_t": 312, "z_i": 312, "z_": 312, "m": [312, 374, 385], "softplus_t": 313, "steep": 313, "higher": [313, 376, 377], "steeper": 313, "approach": [313, 371, 375, 386], "hard": 313, "stabil": [313, 375], "veri": [313, 376], "softplus_bw_t": 314, "softshrink_t": 315, "_golden_function_softshrink": 315, "softshrink_bw_t": 316, "softsign_t": 317, "softsign_bw_t": 318, "sort_t": 319, "ascend": 319, "descend": 319, "stabl": [319, 379], "preserv": 319, "sorted_tensor": 319, "sorted_tensor_desc": 319, "indices_desc": 319, "input_tensor_tnn": 319, "input_tensor_2d": 319, "input_tensor_2d_ttnn": 319, "sorted_tensor_dim": 319, "indices_dim": 319, "sqrt_t": 320, "sqrt_bw_t": 321, "_golden_function_sqrt": 321, "square_t": 322, "255": 322, "square_bw_t": 323, "_golden_function_squar": 323, "squared_difference_t": 324, "_golden_function_squared_differ": 324, "squared_difference_bw_t": 325, "std_t": 326, "sub_bw_t": 327, "subalpha_t": 328, "_golden_function_subalpha": 328, "subalpha_bw_t": 329, "subtract_t": 330, "sum_t": 331, "swiglu_t": 332, "_golden_function_swiglu": 332, "swish_t": 333, "queueid": 334, "sub_device_id": 334, "subdeviceid": 334, "synchron": [334, 385, 386], "wait": [334, 376], "complet": [334, 378, 379, 380, 381, 382, 383, 384, 385], "associ": [334, 385], "sub": [334, 361, 377], "ran": [334, 376, 383], "chip": [334, 380, 381, 382, 383, 384, 385], "set_sub_device_stall_group": 334, "queu": 334, "tan_t": 335, "tan_bw_t": 336, "_golden_function_tan": 336, "tanh_t": 337, "faster": [337, 339, 376, 383], "minor": [337, 339], "precis": [337, 339, 377, 382], "approx": [337, 339], "tanh_bw_t": 338, "_golden_function_tanh": 338, "tanhshrink_t": 339, "_golden_function_tanhshrink": [339, 340], "tanhshrink_bw_t": 340, "threshold_t": 341, "_golden_function_threshold": [341, 342], "threshold_bw_t": 342, "tilize_t": 343, "_nop_golden_funct": 343, "acceler": [343, 344, 361, 362, 374, 382], "tilize_with_val_padding_t": 344, "800781": 345, "455078": 345, "585938": 345, "to_layout_t": 346, "organ": [346, 372, 377], "becom": [346, 385], "42188": 346, "398438": 346, "to_memory_config_t": 347, "torch_rank": [348, 386], "Will": 348, "reach": 348, "mesh_compos": 348, "cppmeshtotensor": 348, "ttnn_tensor": 348, "torch_tensor": [348, 381], "3008": 348, "8438": [348, 381], "3242": 348, "9023": 348, "5820": 348, "5312": 348, "topk_t": 349, "_create_golden_function_topk": 349, "largest": [349, 377], "smallest": 349, "sure": [349, 386], "top": 349, "sub_core_grid": [349, 361], "indices_tensor": 349, "bfloat8": 349, "output_value_tensor": 349, "output_index_tensor": 349, "4d": 349, "65536": 349, "topk_valu": 349, "topk_indic": 349, "attention_softmax_t": 350, "head_siz": [350, 351, 352, 355, 383], "attention_mask": [350, 351, 383], "softmaxprogramconfig": [350, 351], "softmaxdefaultprogramconfig": [350, 351], "causal_mask": [350, 351], "causal": [350, 351, 353], "attention_softmax__t": 351, "concatenate_heads_t": 352, "num_head": [352, 355, 383], "sequence_s": [352, 355, 371, 383], "scaled_dot_product_attention_t": 353, "mimick": 353, "flashattent": 353, "accept": [353, 354, 372, 375, 384], "sdpaprogramconfig": [353, 354], "q": [353, 354], "parallel": [353, 354, 376, 381, 385], "nqh": 353, "input_tensor_q": [353, 354], "dh": [353, 354], "input_tensor_k": [353, 354], "nkv": [353, 354], "input_tensor_v": [353, 354], "attn_mask": [353, 354], "impli": 353, "is_caus": [353, 354], "scaled_dot_product_attention_decode_t": 354, "decod": 354, "flash": 354, "mqa": 354, "sdpamulticoreprogramconfig": 354, "nh": 354, "cur_po": 354, "cur_pos_tensor": 354, "pnh": 354, "skip": 354, "split_query_key_value_and_split_heads_t": 355, "hidden_s": [355, 371, 383], "Then": [355, 371, 374, 385], "them": [355, 374, 376, 379, 381, 382], "readi": [355, 372], "score": 355, "kv_input_tensor": 355, "q1": 355, "k1": 355, "v1": 355, "qn": 355, "kn": 355, "vn": 355, "cat": [355, 383], "num_kv_head": 355, "contigu": [355, 377, 384], "transpose_kei": 355, "num": 355, "tril_t": 356, "diagon": [356, 357], "triu_t": 357, "trunc_t": 358, "_golden_function_trunc": [358, 359], "trunc_bw_t": 359, "unary_chain_t": 360, "ops_chain": 360, "unarywithparam": 360, "chain": 360, "unaryoptyp": 360, "untilize_t": 361, "use_pack_until": [361, 362], "untilize_with_unpadding_t": 362, "output_tensor_end": 362, "upsample_t": 363, "form": 363, "nearest": 363, "scale_factor": 363, "array2d": 363, "var_t": 364, "where_t": 365, "_golden_function_wher": 365, "where_bw_t": 366, "xlogy_t": 367, "_golden_function_xlogi": 367, "xlogy_bw_t": 368, "zeros_t": 369, "zeros_like_t": 370, "basi": 371, "rewritten": 371, "bert": 371, "modeling_bert": 371, "bertintermedi": 371, "__init__": 371, "super": 371, "dens": 371, "intermediate_s": 371, "hidden_st": [371, 383], "tdd": 371, "pytest": [371, 372, 376, 385, 386], "torch_bert": 371, "utility_funct": 371, "torch_random": 371, "utils_for_test": 371, "assert_with_pcc": 371, "mark": [371, 372], "parametr": 371, "phiyodr": 371, "finetun": 371, "squad2": 371, "384": [371, 383], "test_bert_intermedi": 371, "manual_se": [371, 380, 383, 384, 386], "bertconfig": 371, "from_pretrain": 371, "eval": 371, "torch_hidden_st": [371, 383], "torch_output": [371, 383], "bert_intermedi": 371, "9999": [371, 385, 386], "dictionari": [371, 384], "turn": 371, "ttnn_bert": 371, "999": [371, 382], "someth": 371, "ttnn_optimized_bert": 371, "isinst": 371, "preprocess_linear_weight": [371, 383], "preprocess_linear_bia": [371, 383], "num_cores_x": [371, 383], "ff1_weight": 371, "ff1_bia": 371, "best": 371, "integr": [371, 372], "incredibli": 372, "excit": 372, "exploratori": 372, "folder": [372, 376], "freedom": 372, "showcas": 372, "few": [372, 377, 384], "question": 372, "answer": 372, "highlight": [372, 377], "successfulli": [372, 379], "migrat": [372, 386], "good": 372, "readm": [372, 374], "md": [372, 374], "describ": [372, 384], "credit": 372, "author": 372, "might": 372, "encount": 372, "demonstr": [372, 376, 379, 381, 382, 384], "adequ": 372, "achiev": [372, 375], "pearson": 372, "ci": 372, "pipelin": [372, 376, 382], "unit": [372, 374], "metric": 372, "meet": 372, "continu": [372, 374, 375], "upon": 372, "commit": 372, "ongo": 372, "complianc": 372, "catch": 372, "regress": 372, "earli": 372, "collect": [372, 376, 378, 382, 385], "varieti": 372, "instruct": [372, 373, 374, 376, 378, 386], "measur": 372, "special": [372, 377], "run_device_perf_model": 372, "run_perform": 372, "sh": [372, 374, 376, 385, 386], "models_device_performance_bare_met": 372, "schedul": 372, "clear": [372, 375, 380, 381, 382, 383, 384], "incorpor": 372, "autom": 372, "extern": [372, 375, 377], "servic": 372, "impact": 372, "workflow": [372, 374, 385], "impl": 372, "yaml": 372, "models_performance_bare_met": 372, "run_demos_single_card_n150_test": 372, "run_demos_single_card_n300_test": 372, "run_t3000_demo_test": 372, "test_ttnn_functional_resnet50": 372, "resnet50testinfra": 372, "friendli": 373, "ml": [373, 374], "workload": 373, "http": [373, 374, 385], "com": [373, 374], "guid": [373, 374, 378, 385], "choic": 373, "jupyt": 373, "notebook": 373, "advanc": [374, 385], "comprehens": [374, 385], "stack": 374, "deploy": 374, "find": [374, 385], "asset": 374, "tag": 374, "quick": [374, 380, 384], "download": [374, 382, 384], "curl": 374, "fssl": 374, "chmod": 374, "podman": 374, "visit": [374, 385], "compon": 374, "immedi": 374, "ai": [374, 380, 381, 382, 383, 384], "closer": 374, "conveni": 374, "who": [374, 377], "linux": 374, "distro": 374, "glibc": 374, "34": [374, 380, 381, 382, 383, 384, 385], "newer": 374, "pip": [374, 385, 386], "cpu": [374, 376, 380, 381, 382, 383, 384], "governor": 374, "export": [374, 385, 386], "pythonpath": 374, "pwd": 374, "python_env": [374, 385], "dev": 374, "txt": [374, 385], "sudo": [374, 376], "apt": 374, "cpufrequtil": 374, "cpupow": 374, "frequenc": 374, "registri": 374, "pull": [374, 375, 380], "ghcr": 374, "io": [374, 376], "ubuntu": 374, "04": [374, 381], "amd64": 374, "bash": 374, "recurs": 374, "simplest": 374, "install_depend": 374, "build_met": [374, 376, 385], "cmake": 374, "mkdir": 374, "cd": [374, 376], "ninja": 374, "dcmake_build_typ": 374, "relwithdebuginfo": 374, "dcmake_cxx_compil": 374, "compil": [374, 382, 383, 386], "envirion": 374, "python_env_dir": 374, "path_to_your_env_directori": 374, "create_venv": 374, "bin": 374, "driven": [374, 375], "recip": 374, "conda": 374, "forg": 374, "tt_metal_hom": [374, 376, 379, 380, 381, 382, 383, 384], "python3": [374, 378, 379, 380, 381, 382, 383, 384], "run_op_on_devic": 374, "eth": 374, "rout": 374, "loudbox": 374, "quietbox": 374, "iommu": [374, 380, 381, 382, 383, 384, 385], "level": [374, 376, 379, 381, 385], "proper": 374, "isol": 374, "passthrough": 374, "On": 374, "translat": 374, "viommu": 374, "hypervisor": 374, "secur": 374, "effici": [374, 381, 382], "dma": 374, "pcie": 374, "guest": 374, "corrupt": 374, "restrict": 374, "reliabl": [374, 375], "intel_iommu": 374, "amd_iommu": 374, "provis": 374, "remap": 374, "intel": 374, "vt": 374, "amd": 374, "vi": [374, 385], "intend": 375, "maintain": 375, "while": [375, 382], "simultan": [375, 385], "fine": 375, "tune": 375, "themselv": [375, 377], "goal": 375, "ask": 375, "popular": 375, "kent": 375, "beck": 375, "benefit": 375, "submit": 375, "label": [375, 377, 382, 384], "fulli": [375, 376, 382, 384], "fallback": 375, "branch": 375, "brief": 375, "4730": 375, "rst": 375, "referenc": 375, "sweep": 375, "codeown": 375, "pr": 375, "reflect": 375, "merg": 375, "main": [375, 379, 380, 381, 382, 383, 384, 385, 386], "comment": 375, "resnet": 376, "test_perf_resnet": 376, "test_perf_bare_met": 376, "0185": 376, "finish": 376, "csv": [376, 385], "consol": 376, "similar": [376, 383, 385], "give": [376, 385], "shorter": 376, "append": 376, "cli": 376, "explain": 376, "reset": 376, "tt_smi": 376, "tensix_reset": 376, "tensix": [376, 381], "skew": 376, "timer": 376, "reboot": 376, "wh": 376, "analyz": [376, 385], "1000": [376, 380, 381, 382, 383, 384], "fixtur": 376, "ttl": 376, "readdeviceprofil": 376, "total": [376, 382, 384], "drop": 376, "around": [376, 383], "120": [376, 384], "eighth": 376, "receiv": 376, "warn": [376, 380, 381, 382, 383, 384], "mention": 376, "risc": 376, "those": [376, 384], "affect": 376, "flow": [376, 385], "come": 376, "python_fallback": 376, "tt_dnn_cpu": 376, "tt_dnn_devic": 376, "global": [376, 385], "fidel": 376, "field": 376, "lofi": 376, "hifi2": 376, "hifi3": 376, "clock": 376, "stamp": 376, "durat": [376, 383, 386], "nanosecond": 376, "end_t": 376, "start_t": 376, "fw": [376, 380, 381, 382, 383, 384], "cycl": 376, "earliest": 376, "core_frequ": 376, "marker": 376, "brisc": 376, "ncrisc": 376, "trisc0": 376, "trisc1": 376, "trisc2": 376, "front": 376, "spent": [376, 383], "cb_wait_front": 376, "reserv": 376, "cb_reserve_back": 376, "datamov": 376, "input_0_memori": 376, "z": 376, "channels_last": 376, "dev_0_dram": 376, "dec_0_l1": 376, "noc": 376, "timelin": 376, "npe": 376, "subdirectori": 376, "npe_viz": 376, "traffic": 376, "congest": 376, "properli": [376, 380], "item": [376, 382, 384], "aggreg": 376, "timestamp": [376, 385], "ops_perf_results_2025_06_25_14_04_34": 376, "2025_06_25_14_04_34": 376, "actual": [377, 382, 384], "4x4": 377, "32x32": [377, 381], "still": 377, "transit": 377, "2x2": 377, "illustr": 377, "insid": [377, 386], "isn": 377, "16x16": 377, "per": [377, 385], "li": 377, "fashion": [377, 383], "face0": 377, "face1": 377, "face2": 377, "face3": 377, "pictur": 377, "reason": 377, "engin": 377, "matric": 377, "decompos": 377, "transpose_til": 377, "col": 377, "torch_t": 377, "byte": 377, "That": 377, "sizeof": 377, "introduc": [377, 381], "behavior": 377, "observ": [377, 384], "magnitud": [377, 383], "flush": 377, "instabl": 377, "extrem": 377, "infin": 377, "domin": 377, "caus": 377, "lose": 377, "7014118346046923e": 377, "frequent": 377, "occurr": 377, "uniform": 377, "deal": 377, "critic": 377, "applic": [377, 385], "homogen": 377, "unsuit": 377, "inher": 377, "owned_host_storag": 377, "borrowed_host_storag": 377, "borrow": 377, "numpi": [377, 381, 382], "device_storag": 377, "abstract": 377, "awai": 377, "compress": 377, "upper": 377, "learn": [377, 379, 380, 381], "remain": 377, "128x128": 377, "subset": 377, "know": 377, "understand": [377, 385], "coordin": 377, "physic": 377, "task": [378, 382], "smoothli": 378, "lightweight": 378, "minim": 378, "standalon": 378, "basic_python": [378, 379, 380, 381, 382, 383, 384], "directli": [378, 379, 380, 381, 382, 383, 384], "togeth": [379, 380, 381, 382, 383, 384], "llama": 379, "mistral": 379, "diffus": 379, "ttnn_add_tensor": 379, "loguru": [379, 380, 381, 382, 383, 384], "logger": [379, 380, 381, 382, 383, 384], "tt_tensor1": 379, "tt_tensor2": 379, "tt_result": 379, "everyth": [379, 380, 381, 382, 383, 384, 385], "As": [379, 383], "2025": [379, 380, 381, 382, 383, 384, 385], "06": [379, 383], "23": 379, "09": [379, 380, 385], "36": 379, "58": 379, "211": 379, "__main__": [379, 380, 381, 382, 383, 384], "29": [379, 381], "37": 379, "00": [379, 382, 384], "524": 379, "525": 379, "present": 380, "ttnn_basic_conv": 380, "state": 380, "extra": [380, 384], "asid": [380, 384], "portion": [380, 384], "slide": [380, 384], "scratchpad": [380, 384], "kb": [380, 384], "enough": [380, 384], "amongst": [380, 384], "bchw": 380, "permuted_input": 380, "flat": 380, "reshaped_input": 380, "out_torch": 380, "f": [380, 381, 382, 383, 384, 386], "07": [380, 381, 382, 383, 384], "02": [380, 385], "649": 380, "silicondriv": [380, 381, 382, 383, 384, 385], "pci": [380, 381, 382, 383, 384, 385], "kmd": [380, 381, 382, 383, 384, 385], "pci_devic": [380, 381, 382, 383, 384, 385], "198": [380, 381, 382, 383, 384], "651": 380, "658": 380, "driver": [380, 381, 382, 383, 384, 385], "tt_cluster": [380, 381, 382, 383, 384, 385], "190": [380, 381, 382, 383, 384], "659": 380, "666": 380, "667": 380, "673": 380, "harvest": [380, 381, 382, 383, 384, 385], "0x100": [380, 381, 382, 383, 384], "noc0": [380, 381, 382, 383, 384, 385], "0x0": [380, 381, 382, 383, 384, 385], "cluster": [380, 381, 382, 383, 384, 385], "282": [380, 381, 382, 383, 384], "772": 380, "817": 380, "remot": [380, 381, 382, 383, 384, 385], "147": [380, 381, 382, 383, 384], "828": 380, "ethernet": [380, 381, 382, 383, 384], "1039": [380, 381, 382, 383, 384], "915": 380, "clk": [380, 381, 382, 383, 384], "mhz": [380, 381, 382, 383, 384], "metal_context": [380, 381, 382, 383, 384], "487": 380, "428": [380, 381, 382, 383, 384], "489": 380, "unabl": [380, 381, 382, 383, 384], "thread": [380, 381, 382, 383, 384, 385, 386], "hardware_command_queu": [380, 381, 382, 383, 384], "74": [380, 381, 382, 383, 384], "921": 380, "reprocess": 380, "563": 380, "922": 380, "582": 380, "390": 380, "78": 380, "mesh_devic": [380, 381, 382, 383, 384], "488": [380, 381, 382, 383, 384], "391": 380, "468": [380, 381, 382, 383, 384], "783": [380, 381, 382, 383, 384], "392": 380, "ttnn_basic_oper": 381, "np": [381, 382], "host_rand": 381, "amount": 381, "to_tt_til": 381, "helper": 381, "tt_t1": 381, "overhead": 381, "transfer": 381, "tt_t2": 381, "tt_t3": 381, "tt_t4": 381, "t5": 381, "tt_t5": 381, "add_result": 381, "mul_result": 381, "mul": [381, 383], "matmul_result": 381, "bmatrix": 381, "rightarrow": 381, "broadcast_vector": 381, "broadcast_tt": 381, "broadcast_add_result": 381, "850": 381, "852": [381, 382], "859": 381, "860": 381, "866": 381, "867": 381, "873": 381, "970": 381, "015": 381, "025": 381, "111": 381, "678": 381, "680": 381, "537": 381, "564": 381, "47": 381, "08": [381, 385], "072": 381, "49": 381, "82812": 381, "04688": 381, "32812": 381, "00781": 381, "39844": 381, "03906": 381, "14844": 381, "24219": 381, "65625": 381, "31250": 381, "21094": 381, "21875": 381, "33594": 381, "37500": 381, "62500": 381, "670": 381, "52": 381, "12500": 381, "23438": 381, "96875": 381, "02600": 381, "97656": 381, "18164": 381, "87891": 381, "44531": 381, "48438": 381, "50781": 381, "35938": 381, "229": 381, "55": [381, 383], "50000": 381, "25000": 381, "56250": 381, "43750": 381, "57": 381, "231": 381, "59": 381, "233": 381, "63": 381, "8242": 381, "0469": 381, "2500": 381, "0000": 381, "3750": 381, "3945": 381, "0391": 381, "5625": 381, "1250": 381, "2188": 381, "8750": 381, "4375": 381, "7500": 381, "6250": 381, "7422": 381, "1484": 381, "9531": 381, "5000": 381, "6562": 381, "3281": 381, "0938": 381, "2158": 381, "3359": 381, "234": 381, "insight": [382, 384, 385], "ttnn_mlp_inference_mnist": 382, "essenti": 382, "digit": 382, "classif": [382, 384], "perceptron": 382, "manipul": 382, "torchvis": [382, 384], "interfac": [382, 384], "disk": [382, 384, 385, 386], "throughout": [382, 384, 385], "statu": 382, "predict": [382, 384], "backend": 382, "outcom": 382, "28x28": 382, "grayscal": 382, "dataload": [382, 384], "through": [382, 384, 385], "totensor": [382, 384], "testset": [382, 384], "testload": [382, 384], "shuffl": [382, 384], "train_and_export_mlp": 382, "mlp_mnist_weight": 382, "pt": [382, 384], "poor": [382, 384], "w1": 382, "b1": 382, "w2": 382, "b2": 382, "w3": [382, 384], "b3": [382, 384], "correctli": 382, "snippet": [382, 384, 386], "five": [382, 384], "counter": [382, 384], "sequenti": 382, "three": 382, "raw": 382, "highest": [382, 384], "overal": [382, 384, 385], "enumer": [382, 384], "break": [382, 384], "_layout": 382, "image_tt": 382, "1x128": 382, "w1_final": 382, "b1_final": 382, "out1": 382, "w2_final": 382, "b2_final": 382, "out2": 382, "w3_final": 382, "b3_final": 382, "out3": 382, "predicted_label": [382, 384], "ntt": [382, 384], "100": [382, 384], "2f": [382, 384], "03": 382, "41": 382, "990": 382, "992": 382, "998": 382, "006": 382, "007": 382, "013": 382, "110": 382, "172": 382, "182": [382, 384], "268": 382, "886": 382, "888": 382, "44": 382, "48": 382, "677": 382, "682": 382, "686": 382, "690": 382, "695": 382, "89": [382, 384], "696": 382, "697": 382, "therefor": 383, "multi_head_attent": 383, "query_weight": 383, "query_bia": 383, "key_weight": 383, "key_bia": 383, "value_weight": 383, "value_bia": 383, "output_weight": 383, "output_bia": 383, "fallback_reshap": 383, "get_fallback_funct": [383, 386], "attention_scor": 383, "attention_prob": 383, "context_lay": 383, "self_output": 383, "torch_attention_mask": 383, "torch_query_weight": 383, "torch_query_bia": 383, "torch_key_weight": 383, "torch_key_bia": 383, "torch_value_weight": 383, "torch_value_bia": 383, "torch_output_weight": 383, "torch_output_bia": 383, "fly": 383, "fortun": 383, "ahead": 383, "data_typ": 383, "optimized_multi_head_attent": 383, "fused_qkv_weight": 383, "fused_qkv_bia": 383, "self_output_weight": 383, "self_output_bia": 383, "fused_qkv_output": 383, "context_layer_after_concatenate_head": 383, "qkv": 383, "torch_qkv_weight": 383, "torch_qkv_bia": 383, "qkv_weight": 383, "qkv_bia": 383, "optimized_output": 383, "torch_optimized_output": 383, "allclos": 383, "ttnn_multihead_attent": 383, "768": 383, "769": 383, "776": [383, 385], "777": 383, "784": 383, "790": 383, "887": 383, "931": 383, "942": 383, "027": [383, 384], "603": 383, "605": 383, "51": [383, 385], "001": 383, "132": [383, 384], "265338897705078": 383, "056": 383, "151": [383, 384], "05480194091796875": 383, "363": 383, "259": 383, "2866740226745605": 383, "366": 383, "274": 383, "002416849136352539": 383, "417": 383, "418": 383, "460": 383, "pixel": 384, "cifar10": 384, "train_and_export_cnn": 384, "simple_cnn_cifar10_weight": 384, "conv1": 384, "conv2": 384, "fc1": 384, "fc2": 384, "conv_pool_stag": 384, "encapsul": 384, "undergo": 384, "metadata": 384, "again": 384, "record": 384, "modular": 384, "flexibl": [384, 385], "input_nhwc": 384, "conv_outchannel": 384, "weight_str": 384, "bias_str": 384, "activation_str": 384, "log_first_sampl": 384, "conv_kernel_s": 384, "conv_strid": 384, "conv_pad": 384, "conv1_out": 384, "max_pool2d_kernel_s": 384, "max_pool2d_strid": 384, "max_pool2d_pad": 384, "max_pool2d_dil": 384, "max_pool2d_out": 384, "simplecnn": 384, "rearrang": 384, "obtain": 384, "ttnn_imag": 384, "ttnn_image_permu": 384, "log_thi": 384, "conv1_pool": 384, "conv2_pool": 384, "fc": 384, "out_flat": 384, "compat": 384, "w4": 384, "b4": 384, "w3_tt": 384, "b3_tt": 384, "x_tt": 384, "w4_tt": 384, "b4_tt": 384, "ttnn_simplecnn_infer": 384, "17": 384, "041": 384, "043": 384, "050": 384, "051": 384, "057": 384, "058": 384, "064": 384, "161": 384, "224": 384, "235": 384, "321": 384, "889": 384, "891": 384, "19": 384, "734": 384, "471": 384, "075": 384, "86": 384, "88": 384, "076": 384, "90": 384, "91": 384, "92": 384, "93": 384, "1x1": 384, "94": 384, "95": 384, "96": [384, 386], "97": 384, "98": 384, "99": 384, "enable_subblock_pad": 384, "101": 384, "960": 384, "129": 384, "130": 384, "131": 384, "961": 384, "133": 384, "134": 384, "135": 384, "136": 384, "137": 384, "138": 384, "139": 384, "24": 384, "026": 384, "157": [384, 385], "158": 384, "121": 384, "669": 384, "238": 384, "166": 384, "181": 384, "240": 384, "183": 384, "ll": 385, "offer": 385, "intuit": 385, "depth": 385, "searchabl": 385, "plot": 385, "placement": 385, "peak": 385, "hierarch": 385, "server": 385, "ssh": 385, "instanc": 385, "opportun": 385, "watch": 385, "walkthrough": 385, "video": 385, "offlin": 385, "launch": 385, "localhost": 385, "8000": 385, "chrome": 385, "greet": 385, "homepag": 385, "yolov4": 385, "320x320": 385, "coco": 385, "predefin": 385, "wrap": 385, "ttnn_config_path": [385, 386], "inlin": 385, "overrid": [385, 386], "ttnn_config_overrid": [385, 386], "past": 385, "enable_fast_runtime_mod": [385, 386], "enable_log": [385, 386], "report_nam": [385, 386], "ttnn_visualizer_tutori": 385, "enable_graph_report": [385, 386], "enable_detailed_buffer_report": [385, 386], "enable_detailed_tensor_report": [385, 386], "enable_comparison_mod": [385, 386], "free": 385, "test_ttnn_yolov4": 385, "test_yolov4": 385, "pretrained_weight_tru": 385, "At": 385, "664": 385, "73": 385, "665": 385, "83": 385, "cache_path": 385, "model_cache_path": 385, "tmp_dir": 385, "enable_model_cach": 385, "throw_exception_on_fallback": 385, "comparison_mode_should_raise_except": 385, "comparison_mode_pcc": [385, 386], "root_report_path": 385, "4042956046390500517": 385, "754": 385, "197": 385, "758": 385, "192": 385, "761": 385, "764": 385, "0x80": 385, "295": 385, "836": 385, "navig": 385, "json": [385, 386], "db": 385, "sqlite": 385, "traci": 385, "termin": 385, "session": 385, "unset": 385, "regener": 385, "Or": 385, "731": 385, "process_ops_log": 385, "generate_report": 385, "905": 385, "2025_08_01_10_51_02": 385, "ops_perf_results_2025_08_01_10_51_02": 385, "ops_perf_results_": 385, "device_profile_log": 385, "went": 385, "bottom": 385, "filter": 385, "click": 385, "inspect": 385, "breakdown": 385, "relationship": 385, "easi": 385, "candid": 385, "tabl": 385, "chart": 385, "lifetim": 385, "estim": 385, "headroom": 385, "pinpoint": 385, "ineffici": 385, "node": 385, "edg": 385, "zoom": 385, "pan": 385, "subnetwork": 385, "flop": 385, "underutil": 385, "toggl": 385, "hint": 385, "suboptim": 385, "summar": 385, "deepli": 385, "architectur": 386, "2024": 386, "torch_input_tensor_a": 386, "torch_input_tensor_b": 386, "matmul_output_tensor": 386, "torch_matmul_output_tensor": 386, "unlik": 386, "start_tim": 386, "end_tim": 386, "stdout": 386, "6391518115997314": 386, "0007393360137939453": 386, "manage_config": 386, "9998": 386, "construct": 386, "tracer": 386, "exp_trac": 386, "miss": 386, "tt_logger_typ": 386, "tt_logger_level": 386, "substitut": 386, "implementaiton": 386, "unless": 386, "addition": 386, "app": 386, "pre_hook_to_print_args_and_kwarg": 386, "post_hook_to_print_output": 386, "query_registered_oper": 386, "begin_graph_captur": 386, "runmod": 386, "no_dispatch": 386, "captured_graph": 386, "end_graph_captur": 386, "pretty_print": 386}, "objects": {"ttnn": [[6, 0, 1, "", "Conv2dConfig"], [7, 0, 1, "", "Conv2dSliceConfig"], [8, 3, 1, "", "GetDefaultDevice"], [9, 3, 1, "", "SetDefaultDevice"], [377, 0, 1, "", "Shape"], [10, 5, 1, "", "abs"], [11, 5, 1, "", "abs_bw"], [12, 5, 1, "", "acos"], [13, 5, 1, "", "acos_bw"], [14, 5, 1, "", "acosh"], [15, 5, 1, "", "acosh_bw"], [16, 5, 1, "", "add"], [17, 5, 1, "", "add_bw"], [18, 5, 1, "", "addalpha"], [19, 5, 1, "", "addalpha_bw"], [20, 5, 1, "", "addcdiv"], [21, 5, 1, "", "addcdiv_bw"], [22, 5, 1, "", "addcmul"], [23, 5, 1, "", "addcmul_bw"], [24, 5, 1, "", "alt_complex_rotate90"], [25, 5, 1, "", "angle"], [26, 5, 1, "", "angle_bw"], [27, 5, 1, "", "arange"], [28, 5, 1, "", "argmax"], [29, 5, 1, "", "as_tensor"], [30, 5, 1, "", "asin"], [31, 5, 1, "", "asin_bw"], [32, 5, 1, "", "asinh"], [33, 5, 1, "", "asinh_bw"], [34, 5, 1, "", "assign_bw"], [35, 5, 1, "", "atan"], [36, 5, 1, "", "atan2"], [37, 5, 1, "", "atan2_bw"], [38, 5, 1, "", "atan_bw"], [39, 5, 1, "", "atanh"], [40, 5, 1, "", "atanh_bw"], [41, 5, 1, "", "batch_norm"], [42, 5, 1, "", "bias_gelu_bw"], [43, 5, 1, "", "bitwise_and"], [44, 5, 1, "", "bitwise_left_shift"], [45, 5, 1, "", "bitwise_not"], [46, 5, 1, "", "bitwise_or"], [47, 5, 1, "", "bitwise_right_shift"], [48, 5, 1, "", "bitwise_xor"], [49, 5, 1, "", "cbrt"], [50, 5, 1, "", "ceil"], [51, 5, 1, "", "ceil_bw"], [52, 5, 1, "", "celu"], [53, 5, 1, "", "celu_bw"], [54, 5, 1, "", "clamp"], [55, 5, 1, "", "clamp_bw"], [56, 5, 1, "", "clip"], [57, 5, 1, "", "clip_bw"], [58, 5, 1, "", "clone"], [59, 3, 1, "", "close_device"], [60, 5, 1, "", "concat"], [61, 5, 1, "", "concat_bw"], [62, 5, 1, "", "conj"], [63, 5, 1, "", "conj_bw"], [64, 5, 1, "", "conv1d"], [65, 5, 1, "", "conv2d"], [66, 5, 1, "", "conv_transpose2d"], [67, 5, 1, "", "cos"], [68, 5, 1, "", "cos_bw"], [69, 5, 1, "", "cosh"], [70, 5, 1, "", "cosh_bw"], [71, 3, 1, "", "create_sharded_memory_config"], [72, 5, 1, "", "cumprod"], [73, 5, 1, "", "cumsum"], [74, 5, 1, "", "deallocate"], [75, 5, 1, "", "deg2rad"], [76, 5, 1, "", "deg2rad_bw"], [77, 5, 1, "", "digamma"], [78, 5, 1, "", "digamma_bw"], [79, 5, 1, "", "div"], [80, 5, 1, "", "div_bw"], [81, 5, 1, "", "div_no_nan"], [82, 5, 1, "", "div_no_nan_bw"], [83, 5, 1, "", "dump_tensor"], [84, 5, 1, "", "elu"], [85, 5, 1, "", "elu_bw"], [86, 5, 1, "", "embedding"], [87, 5, 1, "", "embedding_bw"], [88, 5, 1, "", "empty"], [89, 5, 1, "", "empty_like"], [90, 5, 1, "", "eq"], [91, 5, 1, "", "eq_"], [92, 5, 1, "", "eqz"], [93, 5, 1, "", "erf"], [94, 5, 1, "", "erf_bw"], [95, 5, 1, "", "erfc"], [96, 5, 1, "", "erfc_bw"], [97, 5, 1, "", "erfinv"], [98, 5, 1, "", "erfinv_bw"], [99, 5, 1, "", "exp"], [100, 5, 1, "", "exp2"], [101, 5, 1, "", "exp2_bw"], [102, 5, 1, "", "exp_bw"], [107, 5, 1, "", "expm1"], [108, 5, 1, "", "expm1_bw"], [109, 5, 1, "", "fill"], [110, 5, 1, "", "fill_bw"], [111, 5, 1, "", "fill_ones_rm"], [112, 5, 1, "", "fill_rm"], [113, 5, 1, "", "fill_zero_bw"], [114, 5, 1, "", "floor"], [115, 5, 1, "", "floor_bw"], [116, 5, 1, "", "floor_div"], [117, 5, 1, "", "fmod"], [118, 5, 1, "", "fmod_bw"], [119, 3, 1, "", "format_input_tensor"], [120, 3, 1, "", "format_output_tensor"], [121, 5, 1, "", "frac"], [122, 5, 1, "", "frac_bw"], [123, 5, 1, "", "from_device"], [124, 5, 1, "", "from_torch"], [125, 5, 1, "", "full"], [126, 5, 1, "", "full_like"], [127, 5, 1, "", "gather"], [128, 5, 1, "", "gcd"], [129, 5, 1, "", "ge"], [130, 5, 1, "", "ge_"], [131, 5, 1, "", "geglu"], [132, 5, 1, "", "gelu"], [133, 5, 1, "", "gelu_bw"], [134, 5, 1, "", "gez"], [135, 5, 1, "", "global_avg_pool2d"], [136, 5, 1, "", "glu"], [137, 5, 1, "", "group_norm"], [138, 5, 1, "", "gt"], [139, 5, 1, "", "gt_"], [140, 5, 1, "", "gtz"], [141, 5, 1, "", "hardshrink"], [142, 5, 1, "", "hardshrink_bw"], [143, 5, 1, "", "hardsigmoid"], [144, 5, 1, "", "hardsigmoid_bw"], [145, 5, 1, "", "hardswish"], [146, 5, 1, "", "hardswish_bw"], [147, 5, 1, "", "hardtanh"], [148, 5, 1, "", "hardtanh_bw"], [149, 5, 1, "", "heaviside"], [150, 5, 1, "", "hypot"], [151, 5, 1, "", "hypot_bw"], [152, 5, 1, "", "i0"], [153, 5, 1, "", "i0_bw"], [154, 5, 1, "", "identity"], [155, 5, 1, "", "imag"], [156, 5, 1, "", "imag_bw"], [157, 5, 1, "", "indexed_fill"], [158, 5, 1, "", "is_imag"], [159, 5, 1, "", "is_real"], [160, 5, 1, "", "isclose"], [161, 5, 1, "", "isfinite"], [162, 5, 1, "", "isinf"], [163, 5, 1, "", "isnan"], [164, 5, 1, "", "isneginf"], [165, 5, 1, "", "isposinf"], [168, 5, 1, "", "l1_loss"], [169, 5, 1, "", "layer_norm"], [170, 5, 1, "", "lcm"], [171, 5, 1, "", "ldexp"], [172, 5, 1, "", "ldexp_bw"], [173, 5, 1, "", "le"], [174, 5, 1, "", "le_"], [175, 5, 1, "", "leaky_relu"], [176, 5, 1, "", "leaky_relu_bw"], [177, 5, 1, "", "lerp"], [178, 5, 1, "", "lerp_bw"], [179, 5, 1, "", "lez"], [180, 5, 1, "", "lgamma"], [181, 5, 1, "", "lgamma_bw"], [182, 5, 1, "", "linear"], [183, 5, 1, "", "load_tensor"], [184, 5, 1, "", "log"], [185, 5, 1, "", "log10"], [186, 5, 1, "", "log10_bw"], [187, 5, 1, "", "log1p"], [188, 5, 1, "", "log1p_bw"], [189, 5, 1, "", "log2"], [190, 5, 1, "", "log2_bw"], [191, 5, 1, "", "log_bw"], [192, 5, 1, "", "log_sigmoid"], [193, 5, 1, "", "log_sigmoid_bw"], [194, 5, 1, "", "logaddexp"], [195, 5, 1, "", "logaddexp2"], [196, 5, 1, "", "logaddexp2_bw"], [197, 5, 1, "", "logaddexp_bw"], [198, 5, 1, "", "logical_and"], [199, 5, 1, "", "logical_and_"], [200, 5, 1, "", "logical_not"], [201, 5, 1, "", "logical_not_"], [202, 5, 1, "", "logical_or"], [203, 5, 1, "", "logical_or_"], [204, 5, 1, "", "logical_xor"], [205, 5, 1, "", "logical_xor_"], [206, 5, 1, "", "logit"], [207, 5, 1, "", "logit_bw"], [208, 5, 1, "", "logiteps_bw"], [209, 5, 1, "", "lt"], [210, 5, 1, "", "lt_"], [211, 5, 1, "", "ltz"], [212, 5, 1, "", "mac"], [213, 3, 1, "", "manage_device"], [214, 5, 1, "", "matmul"], [215, 5, 1, "", "max"], [216, 5, 1, "", "max_bw"], [217, 5, 1, "", "max_pool2d"], [218, 5, 1, "", "maximum"], [219, 5, 1, "", "mean"], [220, 5, 1, "", "min"], [221, 5, 1, "", "min_bw"], [222, 5, 1, "", "minimum"], [223, 5, 1, "", "mish"], [226, 5, 1, "", "moreh_sum"], [227, 5, 1, "", "mse_loss"], [228, 5, 1, "", "mul_bw"], [229, 5, 1, "", "multigammaln"], [230, 5, 1, "", "multigammaln_bw"], [231, 5, 1, "", "multiply"], [232, 5, 1, "", "ne"], [233, 5, 1, "", "ne_"], [234, 5, 1, "", "neg"], [235, 5, 1, "", "neg_bw"], [236, 5, 1, "", "nextafter"], [237, 5, 1, "", "nez"], [238, 5, 1, "", "nonzero"], [239, 5, 1, "", "normalize_global"], [240, 5, 1, "", "normalize_hw"], [241, 5, 1, "", "ones"], [242, 5, 1, "", "ones_like"], [243, 3, 1, "", "open_device"], [244, 5, 1, "", "outer"], [245, 5, 1, "", "pad"], [246, 3, 1, "", "pad_to_tile_shape"], [247, 5, 1, "", "permute"], [248, 5, 1, "", "polar"], [249, 5, 1, "", "polar_bw"], [250, 5, 1, "", "polygamma"], [251, 5, 1, "", "polygamma_bw"], [252, 5, 1, "", "polyval"], [253, 5, 1, "", "pow"], [254, 5, 1, "", "pow_bw"], [255, 5, 1, "", "prelu"], [256, 3, 1, "", "prepare_conv_bias"], [257, 3, 1, "", "prepare_conv_transpose2d_bias"], [258, 3, 1, "", "prepare_conv_transpose2d_weights"], [259, 3, 1, "", "prepare_conv_weights"], [260, 5, 1, "", "prod"], [261, 5, 1, "", "prod_bw"], [262, 5, 1, "", "rad2deg"], [263, 5, 1, "", "rad2deg_bw"], [264, 5, 1, "", "rdiv"], [265, 5, 1, "", "rdiv_bw"], [266, 5, 1, "", "real"], [267, 5, 1, "", "real_bw"], [268, 5, 1, "", "reallocate"], [269, 5, 1, "", "reciprocal"], [270, 5, 1, "", "reciprocal_bw"], [271, 3, 1, "", "register_post_operation_hook"], [272, 3, 1, "", "register_pre_operation_hook"], [273, 5, 1, "", "reglu"], [274, 5, 1, "", "relu"], [275, 5, 1, "", "relu6"], [276, 5, 1, "", "relu6_bw"], [277, 5, 1, "", "relu_bw"], [278, 5, 1, "", "relu_max"], [279, 5, 1, "", "relu_min"], [280, 5, 1, "", "remainder"], [281, 5, 1, "", "remainder_bw"], [282, 5, 1, "", "repeat"], [283, 5, 1, "", "repeat_bw"], [284, 5, 1, "", "repeat_interleave"], [285, 5, 1, "", "reshape"], [286, 5, 1, "", "rms_norm"], [287, 5, 1, "", "round"], [288, 5, 1, "", "round_bw"], [289, 5, 1, "", "rpow"], [290, 5, 1, "", "rpow_bw"], [291, 5, 1, "", "rsqrt"], [292, 5, 1, "", "rsqrt_bw"], [293, 5, 1, "", "rsub"], [294, 5, 1, "", "rsub_bw"], [295, 5, 1, "", "scatter"], [296, 5, 1, "", "selu"], [297, 5, 1, "", "selu_bw"], [298, 3, 1, "", "set_printoptions"], [299, 5, 1, "", "sigmoid"], [300, 5, 1, "", "sigmoid_accurate"], [301, 5, 1, "", "sigmoid_bw"], [302, 5, 1, "", "sign"], [303, 5, 1, "", "sign_bw"], [304, 5, 1, "", "signbit"], [305, 5, 1, "", "silu"], [306, 5, 1, "", "silu_bw"], [307, 5, 1, "", "sin"], [308, 5, 1, "", "sin_bw"], [309, 5, 1, "", "sinh"], [310, 5, 1, "", "sinh_bw"], [311, 5, 1, "", "slice"], [312, 5, 1, "", "softmax"], [313, 5, 1, "", "softplus"], [314, 5, 1, "", "softplus_bw"], [315, 5, 1, "", "softshrink"], [316, 5, 1, "", "softshrink_bw"], [317, 5, 1, "", "softsign"], [318, 5, 1, "", "softsign_bw"], [319, 5, 1, "", "sort"], [320, 5, 1, "", "sqrt"], [321, 5, 1, "", "sqrt_bw"], [322, 5, 1, "", "square"], [323, 5, 1, "", "square_bw"], [324, 5, 1, "", "squared_difference"], [325, 5, 1, "", "squared_difference_bw"], [326, 5, 1, "", "std"], [327, 5, 1, "", "sub_bw"], [328, 5, 1, "", "subalpha"], [329, 5, 1, "", "subalpha_bw"], [330, 5, 1, "", "subtract"], [331, 5, 1, "", "sum"], [332, 5, 1, "", "swiglu"], [333, 5, 1, "", "swish"], [334, 3, 1, "", "synchronize_device"], [335, 5, 1, "", "tan"], [336, 5, 1, "", "tan_bw"], [337, 5, 1, "", "tanh"], [338, 5, 1, "", "tanh_bw"], [339, 5, 1, "", "tanhshrink"], [340, 5, 1, "", "tanhshrink_bw"], [341, 5, 1, "", "threshold"], [342, 5, 1, "", "threshold_bw"], [343, 5, 1, "", "tilize"], [344, 5, 1, "", "tilize_with_val_padding"], [345, 5, 1, "", "to_device"], [346, 5, 1, "", "to_layout"], [347, 5, 1, "", "to_memory_config"], [348, 5, 1, "", "to_torch"], [349, 5, 1, "", "topk"], [356, 5, 1, "", "tril"], [357, 5, 1, "", "triu"], [358, 5, 1, "", "trunc"], [359, 5, 1, "", "trunc_bw"], [360, 5, 1, "", "unary_chain"], [361, 5, 1, "", "untilize"], [362, 5, 1, "", "untilize_with_unpadding"], [363, 5, 1, "", "upsample"], [364, 5, 1, "", "var"], [365, 5, 1, "", "where"], [366, 5, 1, "", "where_bw"], [367, 5, 1, "", "xlogy"], [368, 5, 1, "", "xlogy_bw"], [369, 5, 1, "", "zeros"], [370, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[6, 1, 1, "", "act_block_h_override"], [6, 1, 1, "", "act_block_w_div"], [6, 1, 1, "", "activation"], [6, 1, 1, "", "core_grid"], [6, 1, 1, "", "deallocate_activation"], [6, 1, 1, "", "enable_act_double_buffer"], [6, 1, 1, "", "enable_kernel_stride_folding"], [6, 1, 1, "", "enable_split_reader"], [6, 1, 1, "", "enable_weights_double_buffer"], [6, 1, 1, "", "full_inner_dim"], [6, 1, 1, "", "in_place"], [6, 1, 1, "", "output_layout"], [6, 1, 1, "", "override_sharding_config"], [6, 1, 1, "", "reallocate_halo_output"], [6, 1, 1, "", "reshard_if_not_optimal"], [6, 1, 1, "", "shard_layout"], [6, 1, 1, "", "transpose_shards"], [6, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[7, 0, 1, "", "SliceTypeEnum"], [7, 1, 1, "", "num_slices"], [7, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[7, 2, 1, "", "SliceHeight"], [7, 2, 1, "", "SliceWidth"], [7, 1, 1, "", "name"], [7, 1, 1, "", "value"]], "ttnn.Shape": [[377, 1, 1, "", "rank"], [377, 4, 1, "", "to_rank"]], "ttnn.experimental": [[103, 5, 1, "", "conv3d"], [104, 5, 1, "", "dropout"], [105, 5, 1, "", "gelu_bw"], [106, 5, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[166, 5, 1, "", "fill_cache_for_user_"], [167, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[224, 3, 1, "", "preprocess_model"], [225, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[350, 5, 1, "", "attention_softmax"], [351, 5, 1, "", "attention_softmax_"], [352, 5, 1, "", "concatenate_heads"], [353, 5, 1, "", "scaled_dot_product_attention"], [354, 5, 1, "", "scaled_dot_product_attention_decode"], [355, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 3, 4, 371, 374, 376, 381, 385, 386], "nn": [0, 3, 4, 371, 374, 376, 381, 385, 386], "document": 0, "ttnn": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 383, 385], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 374], "develop": 1, "support": [2, 386], "report": [2, 5, 376, 385], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 386], "tip": 2, "commun": 2, "what": [3, 4], "i": [3, 4], "ad": 4, "new": [4, 375], "oper": [4, 5, 371, 376, 379, 380, 381, 385, 386], "faq": 4, "step": [4, 371, 374], "ar": [4, 374], "need": 4, "add": [4, 16, 379], "c": [4, 386], "python": [4, 386], "exampl": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 349, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 374, 379, 380, 381, 382, 383, 384, 386], "devic": [4, 5, 379, 380, 381, 382, 383, 384, 386], "implement": [4, 383], "1": [4, 371, 373, 374, 386], "2": [4, 371, 373, 374, 386], "bind": 4, "option": [4, 312, 374], "golden": 4, "function": [4, 375, 386], "api": [5, 377], "memori": [5, 377, 385], "config": [5, 377], "core": 5, "tensor": [5, 28, 215, 219, 220, 326, 331, 364, 377, 379, 380, 381, 385, 386], "creation": [5, 379, 381], "matrix": 5, "multipl": [5, 377], "pointwis": 5, "unari": 5, "binari": [5, 374], "ternari": 5, "loss": 5, "reduct": 5, "data": [5, 377, 382], "movement": 5, "normal": 5, "moreh": 5, "transform": [5, 350, 351, 352, 353, 354, 355], "ccl": 5, "embed": [5, 86], "convolut": [5, 380, 384], "pool": [5, 384], "vision": 5, "kv": 5, "cach": [5, 386], "model": [5, 371, 373, 374, 383, 385], "convers": 5, "hook": [5, 386], "conv2dconfig": 6, "conv2dsliceconfig": 7, "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "alt_complex_rotate90": 24, "angl": 25, "angle_bw": 26, "arang": 27, "argmax": 28, "input": [28, 215, 219, 220, 326, 331, 364, 380], "output": [28, 379, 380, 381, 382, 383, 384], "as_tensor": 29, "asin": 30, "asin_bw": 31, "asinh": 32, "asinh_bw": 33, "assign_bw": 34, "atan": 35, "atan2": 36, "atan2_bw": 37, "atan_bw": 38, "atanh": 39, "atanh_bw": 40, "batch_norm": 41, "bias_gelu_bw": 42, "bitwise_and": 43, "bitwise_left_shift": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_right_shift": 47, "bitwise_xor": 48, "cbrt": 49, "ceil": 50, "ceil_bw": 51, "celu": 52, "celu_bw": 53, "clamp": 54, "clamp_bw": 55, "clip": 56, "clip_bw": 57, "clone": [58, 374], "close_devic": 59, "concat": 60, "concat_bw": 61, "conj": 62, "conj_bw": 63, "conv1d": 64, "conv2d": 65, "conv_transpose2d": 66, "co": 67, "cos_bw": 68, "cosh": 69, "cosh_bw": 70, "create_sharded_memory_config": 71, "cumprod": 72, "cumsum": 73, "dealloc": 74, "deg2rad": 75, "deg2rad_bw": 76, "digamma": 77, "digamma_bw": 78, "div": 79, "div_bw": 80, "div_no_nan": 81, "div_no_nan_bw": 82, "dump_tensor": 83, "elu": 84, "elu_bw": 85, "embedding_bw": 87, "empti": 88, "empty_lik": 89, "eq": 90, "eq_": 91, "eqz": 92, "erf": 93, "erf_bw": 94, "erfc": 95, "erfc_bw": 96, "erfinv": 97, "erfinv_bw": 98, "exp": 99, "exp2": 100, "exp2_bw": 101, "exp_bw": 102, "experiment": [103, 104, 105, 106], "conv3d": 103, "dropout": 104, "gelu_bw": [105, 133], "rotary_embed": 106, "expm1": 107, "expm1_bw": 108, "fill": 109, "fill_bw": 110, "fill_ones_rm": 111, "fill_rm": 112, "fill_zero_bw": 113, "floor": 114, "floor_bw": 115, "floor_div": 116, "fmod": 117, "fmod_bw": 118, "format_input_tensor": 119, "format_output_tensor": 120, "frac": 121, "frac_bw": 122, "from_devic": 123, "from_torch": 124, "full": [125, 379, 380, 381, 382, 383, 384], "full_lik": 126, "gather": 127, "gcd": 128, "ge": 129, "ge_": 130, "geglu": 131, "gelu": 132, "gez": 134, "global_avg_pool2d": 135, "glu": 136, "group_norm": 137, "gt": 138, "gt_": 139, "gtz": 140, "hardshrink": 141, "hardshrink_bw": 142, "hardsigmoid": 143, "hardsigmoid_bw": 144, "hardswish": 145, "hardswish_bw": 146, "hardtanh": 147, "hardtanh_bw": 148, "heavisid": 149, "hypot": 150, "hypot_bw": 151, "i0": 152, "i0_bw": 153, "ident": 154, "imag": [155, 374, 382], "imag_bw": 156, "indexed_fil": 157, "is_imag": 158, "is_real": 159, "isclos": 160, "isfinit": 161, "isinf": 162, "isnan": 163, "isneginf": 164, "isposinf": 165, "kv_cach": [166, 167], "fill_cache_for_user_": 166, "update_cache_for_token_": 167, "l1_loss": 168, "layer_norm": 169, "input_tensor": [169, 260, 286, 312, 349], "residual_input_tensor": [169, 286], "weight": [169, 286, 382, 383, 384], "gamma": [169, 286], "bia": [169, 286], "beta": [169, 286], "stat": 169, "post_all_gath": 169, "onli": [169, 374], "output_tensor": [169, 260, 286, 312], "lcm": 170, "ldexp": 171, "ldexp_bw": 172, "le": 173, "le_": 174, "leaky_relu": 175, "leaky_relu_bw": 176, "lerp": 177, "lerp_bw": 178, "lez": 179, "lgamma": 180, "lgamma_bw": 181, "linear": 182, "load_tensor": 183, "log": [184, 386], "log10": 185, "log10_bw": 186, "log1p": 187, "log1p_bw": 188, "log2": 189, "log2_bw": 190, "log_bw": 191, "log_sigmoid": 192, "log_sigmoid_bw": 193, "logaddexp": 194, "logaddexp2": 195, "logaddexp2_bw": 196, "logaddexp_bw": 197, "logical_and": 198, "logical_and_": 199, "logical_not": 200, "logical_not_": 201, "logical_or": 202, "logical_or_": 203, "logical_xor": 204, "logical_xor_": 205, "logit": 206, "logit_bw": 207, "logiteps_bw": 208, "lt": 209, "lt_": 210, "ltz": 211, "mac": 212, "manage_devic": 213, "matmul": 214, "max": 215, "max_bw": 216, "max_pool2d": 217, "maximum": 218, "mean": 219, "min": 220, "min_bw": 221, "minimum": 222, "mish": 223, "model_preprocess": [224, 225], "preprocess_model": 224, "preprocess_model_paramet": 225, "moreh_sum": 226, "mse_loss": 227, "mul_bw": 228, "multigammaln": 229, "multigammaln_bw": 230, "multipli": 231, "ne": 232, "ne_": 233, "neg": 234, "neg_bw": 235, "nextaft": 236, "nez": 237, "nonzero": 238, "normalize_glob": 239, "normalize_hw": 240, "ones": 241, "ones_lik": 242, "open_devic": 243, "outer": 244, "pad": 245, "pad_to_tile_shap": 246, "permut": 247, "polar": 248, "polar_bw": 249, "polygamma": 250, "polygamma_bw": 251, "polyv": 252, "pow": 253, "pow_bw": 254, "prelu": 255, "prepare_conv_bia": 256, "prepare_conv_transpose2d_bia": 257, "prepare_conv_transpose2d_weight": 258, "prepare_conv_weight": 259, "prod": 260, "prod_bw": 261, "rad2deg": 262, "rad2deg_bw": 263, "rdiv": 264, "rdiv_bw": 265, "real": 266, "real_bw": 267, "realloc": 268, "reciproc": 269, "reciprocal_bw": 270, "register_post_operation_hook": 271, "register_pre_operation_hook": 272, "reglu": 273, "relu": 274, "relu6": 275, "relu6_bw": 276, "relu_bw": 277, "relu_max": 278, "relu_min": 279, "remaind": 280, "remainder_bw": 281, "repeat": 282, "repeat_bw": 283, "repeat_interleav": 284, "reshap": 285, "rms_norm": 286, "round": 287, "round_bw": 288, "rpow": 289, "rpow_bw": 290, "rsqrt": 291, "rsqrt_bw": 292, "rsub": 293, "rsub_bw": 294, "scatter": 295, "selu": 296, "selu_bw": 297, "set_printopt": 298, "sigmoid": 299, "sigmoid_accur": 300, "sigmoid_bw": 301, "sign": 302, "sign_bw": 303, "signbit": 304, "silu": 305, "silu_bw": 306, "sin": 307, "sin_bw": 308, "sinh": 309, "sinh_bw": 310, "slice": [311, 386], "softmax": 312, "mask": 312, "softplu": 313, "softplus_bw": 314, "softshrink": 315, "softshrink_bw": 316, "softsign": 317, "softsign_bw": 318, "sort": 319, "sqrt": 320, "sqrt_bw": 321, "squar": 322, "square_bw": 323, "squared_differ": 324, "squared_difference_bw": 325, "std": 326, "sub_bw": 327, "subalpha": 328, "subalpha_bw": 329, "subtract": 330, "sum": 331, "swiglu": 332, "swish": 333, "synchronize_devic": 334, "tan": 335, "tan_bw": 336, "tanh": 337, "tanh_bw": 338, "tanhshrink": 339, "tanhshrink_bw": 340, "threshold": 341, "threshold_bw": 342, "tiliz": 343, "tilize_with_val_pad": 344, "to_devic": 345, "to_layout": 346, "to_memory_config": 347, "to_torch": 348, "topk": 349, "index_tensor": 349, "attention_softmax": 350, "attention_softmax_": 351, "concatenate_head": 352, "scaled_dot_product_attent": 353, "scaled_dot_product_attention_decod": 354, "split_query_key_value_and_split_head": 355, "tril": 356, "triu": 357, "trunc": 358, "trunc_bw": 359, "unary_chain": 360, "until": 361, "untilize_with_unpad": 362, "upsampl": 363, "var": 364, "where": [365, 373], "where_bw": 366, "xlogi": 367, "xlogy_bw": 368, "zero": 369, "zeros_lik": 370, "convert": [371, 379, 381, 383, 386], "pytorch": 371, "rewrit": 371, "switch": 371, "3": [371, 374, 386], "optim": [371, 383], "more": [371, 381], "build": [372, 373, 374], "uplift": 372, "demo": [372, 373], "get": 373, "start": 373, "instal": [373, 374], "explor": 373, "our": 373, "To": [373, 374], "go": 373, "from": [373, 386], "here": 373, "prerequisit": [374, 385], "set": [374, 380], "up": 374, "hardwar": 374, "softwar": 374, "depend": 374, "script": 374, "recommend": 374, "manual": [374, 380], "metalium": 374, "There": 374, "four": 374, "latest": 374, "wheel": 374, "For": 374, "user": 374, "environ": 374, "docker": 374, "releas": 374, "sourc": 374, "repositori": 374, "librari": [374, 379, 380, 381, 382], "virtual": 374, "setup": [374, 384], "anaconda": 374, "packag": 374, "you": 374, "all": [374, 386], "verifi": 374, "your": 374, "try": 374, "execut": 374, "program": [374, 386], "interest": 374, "multi": [374, 383], "card": 374, "configur": [374, 383], "topologi": 374, "machin": 374, "requir": [374, 377], "overview": 374, "why": 374, "It": 374, "matter": 374, "vm": 374, "onboard": 375, "profil": [376, 385], "perf": 376, "header": 376, "profile_thi": 376, "descript": 376, "us": [376, 383, 386], "perform": [376, 379, 385], "visual": [376, 385, 386], "shape": 377, "layout": 377, "type": 377, "width": 377, "limit": 377, "bfloat8_b": 377, "storag": 377, "shard": 377, "tutori": 378, "import": [379, 380, 381, 382, 384], "necessari": [379, 380, 381, 382], "open": [379, 380, 381, 382, 384], "tenstorr": [379, 380, 381, 382, 384], "addit": 379, "back": [379, 386], "close": [379, 380, 381, 382, 383, 384], "The": [379, 380, 381, 382, 384], "basic": [380, 381, 382, 386], "seed": 380, "reproduc": 380, "creat": [380, 381], "forward": 380, "method": 380, "paramet": [380, 383], "run": [380, 383, 384, 385, 386], "host": 381, "tile": 381, "nativ": 381, "base": 381, "arithmet": 381, "simul": 381, "broadcast": 381, "row": 381, "vector": 381, "expans": 381, "mlp": 382, "infer": [382, 384], "load": [382, 384], "mnist": 382, "test": [382, 384], "pretrain": 382, "accuraci": 382, "track": 382, "loop": 382, "flatten": 382, "head": 383, "attent": 383, "write": 383, "initi": [383, 384], "activ": 383, "torch": [383, 386], "first": 383, "iter": 383, "subsequ": 383, "version": 383, "pre": [383, 386], "process": 383, "check": 383, "match": 383, "origin": 383, "simpl": 384, "cnn": 384, "cifar": 384, "10": [384, 386], "dataset": 384, "defin": 384, "stage": 384, "sampl": 384, "gener": 385, "result": 385, "analysi": 385, "upload": 385, "tab": 385, "buffer": [385, 386], "graph": [385, 386], "recap": 385, "an": 386, "__getitem__": 386, "4": 386, "enabl": 386, "5": 386, "intermedi": 386, "6": 386, "trace": 386, "7": 386, "tt_lib": 386, "8": 386, "9": 386, "chang": 386, "string": 386, "represent": 386, "11": 386, "web": 386, "browser": 386, "12": 386, "regist": 386, "post": 386, "13": 386, "queri": 386, "14": 386, "fall": 386, "15": 386, "captur": 386, "alloc": 386, "etc": 386}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "What is TT-NN?": [[3, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[4, "adding-new-tt-nn-operation"]], "FAQ": [[4, "faq"]], "What is a TT-NN operation?": [[4, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[4, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[4, "c-implementation"]], "Step 1: Implement device operation": [[4, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[4, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[4, "python-implementation"]], "Step 1: Add Python binding": [[4, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[4, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[5, "apis"], [377, "apis"]], "Device": [[5, "device"]], "Memory Config": [[5, "memory-config"], [377, "memory-config"]], "Operations": [[5, "operations"]], "Core": [[5, "core"]], "Tensor Creation": [[5, "tensor-creation"], [379, "Tensor-Creation"]], "Matrix Multiplication": [[5, "matrix-multiplication"]], "Pointwise Unary": [[5, "pointwise-unary"]], "Pointwise Binary": [[5, "pointwise-binary"]], "Pointwise Ternary": [[5, "pointwise-ternary"]], "Losses": [[5, "losses"]], "Reduction": [[5, "reduction"]], "Data Movement": [[5, "data-movement"]], "Normalization": [[5, "normalization"]], "Moreh Operations": [[5, "moreh-operations"]], "Transformer": [[5, "transformer"]], "CCL": [[5, "ccl"]], "Embedding": [[5, "embedding"]], "Convolution": [[5, "convolution"]], "Pooling": [[5, "pooling"]], "Vision": [[5, "vision"]], "KV Cache": [[5, "kv-cache"]], "Model Conversion": [[5, "model-conversion"]], "Reports": [[5, "reports"]], "Operation Hooks": [[5, "operation-hooks"]], "ttnn.Conv2dConfig": [[6, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[7, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [59, null], [60, null], [61, null], [62, null], [63, null], [67, null], [68, null], [69, null], [70, null], [71, null], [72, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [104, null], [105, null], [107, null], [108, null], [109, null], [110, null], [113, null], [114, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [124, null], [125, null], [126, null], [128, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [216, null], [217, null], [218, null], [221, null], [222, null], [223, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [248, null], [249, null], [250, null], [251, null], [252, null], [253, null], [254, null], [255, null], [261, null], [262, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [273, null], [274, null], [275, null], [276, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [285, null], [286, null], [287, null], [288, null], [289, null], [290, null], [291, null], [292, null], [293, null], [294, null], [296, null], [297, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [327, null], [328, null], [329, null], [330, null], [332, null], [333, null], [335, null], [336, null], [337, null], [338, null], [339, null], [340, null], [341, null], [342, null], [346, null], [347, null], [348, null], [349, null], [356, null], [357, null], [358, null], [359, null], [360, null], [365, null], [366, null], [367, null], [368, null], [369, null], [370, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.alt_complex_rotate90": [[24, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[25, "ttnn-angle"]], "ttnn.angle_bw": [[26, "ttnn-angle-bw"]], "ttnn.arange": [[27, "ttnn-arange"]], "ttnn.argmax": [[28, "ttnn-argmax"]], "Input Tensor": [[28, "id2"], [215, "id2"], [219, "id2"], [220, "id2"], [326, "id2"], [331, "id2"], [364, "id2"]], "Output Tensor": [[28, "id3"]], "ttnn.as_tensor": [[29, "ttnn-as-tensor"]], "Examples": [[29, null], [298, null]], "ttnn.asin": [[30, "ttnn-asin"]], "ttnn.asin_bw": [[31, "ttnn-asin-bw"]], "ttnn.asinh": [[32, "ttnn-asinh"]], "ttnn.asinh_bw": [[33, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[34, "ttnn-assign-bw"]], "ttnn.atan": [[35, "ttnn-atan"]], "ttnn.atan2": [[36, "ttnn-atan2"]], "ttnn.atan2_bw": [[37, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[38, "ttnn-atan-bw"]], "ttnn.atanh": [[39, "ttnn-atanh"]], "ttnn.atanh_bw": [[40, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[41, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[42, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[43, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[44, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[45, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[46, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[47, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[48, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[49, "ttnn-cbrt"]], "ttnn.ceil": [[50, "ttnn-ceil"]], "ttnn.ceil_bw": [[51, "ttnn-ceil-bw"]], "ttnn.celu": [[52, "ttnn-celu"]], "ttnn.celu_bw": [[53, "ttnn-celu-bw"]], "ttnn.clamp": [[54, "ttnn-clamp"]], "ttnn.clamp_bw": [[55, "ttnn-clamp-bw"]], "ttnn.clip": [[56, "ttnn-clip"]], "ttnn.clip_bw": [[57, "ttnn-clip-bw"]], "ttnn.clone": [[58, "ttnn-clone"]], "ttnn.close_device": [[59, "ttnn-close-device"]], "ttnn.concat": [[60, "ttnn-concat"]], "ttnn.concat_bw": [[61, "ttnn-concat-bw"]], "ttnn.conj": [[62, "ttnn-conj"]], "ttnn.conj_bw": [[63, "ttnn-conj-bw"]], "ttnn.conv1d": [[64, "ttnn-conv1d"]], "ttnn.conv2d": [[65, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[66, "ttnn-conv-transpose2d"]], "ttnn.cos": [[67, "ttnn-cos"]], "ttnn.cos_bw": [[68, "ttnn-cos-bw"]], "ttnn.cosh": [[69, "ttnn-cosh"]], "ttnn.cosh_bw": [[70, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[71, "ttnn-create-sharded-memory-config"]], "ttnn.cumprod": [[72, "ttnn-cumprod"]], "ttnn.cumsum": [[73, "ttnn-cumsum"]], "ttnn.deallocate": [[74, "ttnn-deallocate"]], "ttnn.deg2rad": [[75, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[76, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[77, "ttnn-digamma"]], "ttnn.digamma_bw": [[78, "ttnn-digamma-bw"]], "ttnn.div": [[79, "ttnn-div"]], "ttnn.div_bw": [[80, "ttnn-div-bw"]], "ttnn.div_no_nan": [[81, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[82, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[83, "ttnn-dump-tensor"]], "ttnn.elu": [[84, "ttnn-elu"]], "ttnn.elu_bw": [[85, "ttnn-elu-bw"]], "ttnn.embedding": [[86, "ttnn-embedding"]], "ttnn.embedding_bw": [[87, "ttnn-embedding-bw"]], "ttnn.empty": [[88, "ttnn-empty"]], "ttnn.empty_like": [[89, "ttnn-empty-like"]], "ttnn.eq": [[90, "ttnn-eq"]], "ttnn.eq_": [[91, "ttnn-eq"]], "ttnn.eqz": [[92, "ttnn-eqz"]], "ttnn.erf": [[93, "ttnn-erf"]], "ttnn.erf_bw": [[94, "ttnn-erf-bw"]], "ttnn.erfc": [[95, "ttnn-erfc"]], "ttnn.erfc_bw": [[96, "ttnn-erfc-bw"]], "ttnn.erfinv": [[97, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[98, "ttnn-erfinv-bw"]], "ttnn.exp": [[99, "ttnn-exp"]], "ttnn.exp2": [[100, "ttnn-exp2"]], "ttnn.exp2_bw": [[101, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[102, "ttnn-exp-bw"]], "ttnn.experimental.conv3d": [[103, "ttnn-experimental-conv3d"]], "ttnn.experimental.dropout": [[104, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[105, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[106, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[107, "ttnn-expm1"]], "ttnn.expm1_bw": [[108, "ttnn-expm1-bw"]], "ttnn.fill": [[109, "ttnn-fill"]], "ttnn.fill_bw": [[110, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[111, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[112, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[113, "ttnn-fill-zero-bw"]], "ttnn.floor": [[114, "ttnn-floor"]], "ttnn.floor_bw": [[115, "ttnn-floor-bw"]], "ttnn.floor_div": [[116, "ttnn-floor-div"]], "ttnn.fmod": [[117, "ttnn-fmod"]], "ttnn.fmod_bw": [[118, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[119, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[120, "ttnn-format-output-tensor"]], "ttnn.frac": [[121, "ttnn-frac"]], "ttnn.frac_bw": [[122, "ttnn-frac-bw"]], "ttnn.from_device": [[123, "ttnn-from-device"]], "ttnn.from_torch": [[124, "ttnn-from-torch"]], "ttnn.full": [[125, "ttnn-full"]], "ttnn.full_like": [[126, "ttnn-full-like"]], "ttnn.gather": [[127, "ttnn-gather"]], "ttnn.gcd": [[128, "ttnn-gcd"]], "ttnn.ge": [[129, "ttnn-ge"]], "ttnn.ge_": [[130, "ttnn-ge"]], "ttnn.geglu": [[131, "ttnn-geglu"]], "ttnn.gelu": [[132, "ttnn-gelu"]], "ttnn.gelu_bw": [[133, "ttnn-gelu-bw"]], "ttnn.gez": [[134, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[135, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[136, "ttnn-glu"]], "ttnn.group_norm": [[137, "ttnn-group-norm"]], "ttnn.gt": [[138, "ttnn-gt"]], "ttnn.gt_": [[139, "ttnn-gt"]], "ttnn.gtz": [[140, "ttnn-gtz"]], "ttnn.hardshrink": [[141, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[142, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[143, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[144, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[145, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[146, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[147, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[148, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[149, "ttnn-heaviside"]], "ttnn.hypot": [[150, "ttnn-hypot"]], "ttnn.hypot_bw": [[151, "ttnn-hypot-bw"]], "ttnn.i0": [[152, "ttnn-i0"]], "ttnn.i0_bw": [[153, "ttnn-i0-bw"]], "ttnn.identity": [[154, "ttnn-identity"]], "ttnn.imag": [[155, "ttnn-imag"]], "ttnn.imag_bw": [[156, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[157, "ttnn-indexed-fill"]], "ttnn.is_imag": [[158, "ttnn-is-imag"]], "ttnn.is_real": [[159, "ttnn-is-real"]], "ttnn.isclose": [[160, "ttnn-isclose"]], "ttnn.isfinite": [[161, "ttnn-isfinite"]], "ttnn.isinf": [[162, "ttnn-isinf"]], "ttnn.isnan": [[163, "ttnn-isnan"]], "ttnn.isneginf": [[164, "ttnn-isneginf"]], "ttnn.isposinf": [[165, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[166, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[167, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[168, "ttnn-l1-loss"]], "ttnn.layer_norm": [[169, "ttnn-layer-norm"]], "input_tensor": [[169, "id2"], [260, "id2"], [286, "id2"], [312, "id2"], [349, "id2"]], "residual_input_tensor": [[169, "id3"], [286, "id3"]], "weight (gamma) and bias (beta)": [[169, "id4"], [286, "id4"]], "stats (POST_ALL_GATHER only)": [[169, "id5"]], "output_tensor": [[169, "id6"], [260, "id3"], [286, "id5"], [312, "id4"]], "ttnn.lcm": [[170, "ttnn-lcm"]], "ttnn.ldexp": [[171, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[172, "ttnn-ldexp-bw"]], "ttnn.le": [[173, "ttnn-le"]], "ttnn.le_": [[174, "ttnn-le"]], "ttnn.leaky_relu": [[175, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[176, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[177, "ttnn-lerp"]], "ttnn.lerp_bw": [[178, "ttnn-lerp-bw"]], "ttnn.lez": [[179, "ttnn-lez"]], "ttnn.lgamma": [[180, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[181, "ttnn-lgamma-bw"]], "ttnn.linear": [[182, "ttnn-linear"]], "ttnn.load_tensor": [[183, "ttnn-load-tensor"]], "ttnn.log": [[184, "ttnn-log"]], "ttnn.log10": [[185, "ttnn-log10"]], "ttnn.log10_bw": [[186, "ttnn-log10-bw"]], "ttnn.log1p": [[187, "ttnn-log1p"]], "ttnn.log1p_bw": [[188, "ttnn-log1p-bw"]], "ttnn.log2": [[189, "ttnn-log2"]], "ttnn.log2_bw": [[190, "ttnn-log2-bw"]], "ttnn.log_bw": [[191, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[192, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[193, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[194, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[195, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[196, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[197, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[198, "ttnn-logical-and"]], "ttnn.logical_and_": [[199, "ttnn-logical-and"]], "ttnn.logical_not": [[200, "ttnn-logical-not"]], "ttnn.logical_not_": [[201, "ttnn-logical-not"]], "ttnn.logical_or": [[202, "ttnn-logical-or"]], "ttnn.logical_or_": [[203, "ttnn-logical-or"]], "ttnn.logical_xor": [[204, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[205, "ttnn-logical-xor"]], "ttnn.logit": [[206, "ttnn-logit"]], "ttnn.logit_bw": [[207, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[208, "ttnn-logiteps-bw"]], "ttnn.lt": [[209, "ttnn-lt"]], "ttnn.lt_": [[210, "ttnn-lt"]], "ttnn.ltz": [[211, "ttnn-ltz"]], "ttnn.mac": [[212, "ttnn-mac"]], "ttnn.manage_device": [[213, "ttnn-manage-device"]], "ttnn.matmul": [[214, "ttnn-matmul"]], "ttnn.max": [[215, "ttnn-max"]], "ttnn.max_bw": [[216, "ttnn-max-bw"]], "ttnn.max_pool2d": [[217, "ttnn-max-pool2d"]], "ttnn.maximum": [[218, "ttnn-maximum"]], "ttnn.mean": [[219, "ttnn-mean"]], "ttnn.min": [[220, "ttnn-min"]], "ttnn.min_bw": [[221, "ttnn-min-bw"]], "ttnn.minimum": [[222, "ttnn-minimum"]], "ttnn.mish": [[223, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[224, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[225, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[226, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[227, "ttnn-mse-loss"]], "ttnn.mul_bw": [[228, "ttnn-mul-bw"]], "ttnn.multigammaln": [[229, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[230, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[231, "ttnn-multiply"]], "ttnn.ne": [[232, "ttnn-ne"]], "ttnn.ne_": [[233, "ttnn-ne"]], "ttnn.neg": [[234, "ttnn-neg"]], "ttnn.neg_bw": [[235, "ttnn-neg-bw"]], "ttnn.nextafter": [[236, "ttnn-nextafter"]], "ttnn.nez": [[237, "ttnn-nez"]], "ttnn.nonzero": [[238, "ttnn-nonzero"]], "ttnn.normalize_global": [[239, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[240, "ttnn-normalize-hw"]], "ttnn.ones": [[241, "ttnn-ones"]], "ttnn.ones_like": [[242, "ttnn-ones-like"]], "ttnn.open_device": [[243, "ttnn-open-device"]], "ttnn.outer": [[244, "ttnn-outer"]], "ttnn.pad": [[245, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[246, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[247, "ttnn-permute"]], "ttnn.polar": [[248, "ttnn-polar"]], "ttnn.polar_bw": [[249, "ttnn-polar-bw"]], "ttnn.polygamma": [[250, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[251, "ttnn-polygamma-bw"]], "ttnn.polyval": [[252, "ttnn-polyval"]], "ttnn.pow": [[253, "ttnn-pow"]], "ttnn.pow_bw": [[254, "ttnn-pow-bw"]], "ttnn.prelu": [[255, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[256, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[257, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[258, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[259, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[260, "ttnn-prod"]], "ttnn.prod_bw": [[261, "ttnn-prod-bw"]], "ttnn.rad2deg": [[262, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[263, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[264, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[265, "ttnn-rdiv-bw"]], "ttnn.real": [[266, "ttnn-real"]], "ttnn.real_bw": [[267, "ttnn-real-bw"]], "ttnn.reallocate": [[268, "ttnn-reallocate"]], "ttnn.reciprocal": [[269, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[270, "ttnn-reciprocal-bw"]], "ttnn.register_post_operation_hook": [[271, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[272, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[273, "ttnn-reglu"]], "ttnn.relu": [[274, "ttnn-relu"]], "ttnn.relu6": [[275, "ttnn-relu6"]], "ttnn.relu6_bw": [[276, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[277, "ttnn-relu-bw"]], "ttnn.relu_max": [[278, "ttnn-relu-max"]], "ttnn.relu_min": [[279, "ttnn-relu-min"]], "ttnn.remainder": [[280, "ttnn-remainder"]], "ttnn.remainder_bw": [[281, "ttnn-remainder-bw"]], "ttnn.repeat": [[282, "ttnn-repeat"]], "ttnn.repeat_bw": [[283, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[284, "ttnn-repeat-interleave"]], "ttnn.reshape": [[285, "ttnn-reshape"]], "ttnn.rms_norm": [[286, "ttnn-rms-norm"]], "ttnn.round": [[287, "ttnn-round"]], "ttnn.round_bw": [[288, "ttnn-round-bw"]], "ttnn.rpow": [[289, "ttnn-rpow"]], "ttnn.rpow_bw": [[290, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[291, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[292, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[293, "ttnn-rsub"]], "ttnn.rsub_bw": [[294, "ttnn-rsub-bw"]], "ttnn.scatter": [[295, "ttnn-scatter"]], "ttnn.selu": [[296, "ttnn-selu"]], "ttnn.selu_bw": [[297, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[298, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[299, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[300, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[301, "ttnn-sigmoid-bw"]], "ttnn.sign": [[302, "ttnn-sign"]], "ttnn.sign_bw": [[303, "ttnn-sign-bw"]], "ttnn.signbit": [[304, "ttnn-signbit"]], "ttnn.silu": [[305, "ttnn-silu"]], "ttnn.silu_bw": [[306, "ttnn-silu-bw"]], "ttnn.sin": [[307, "ttnn-sin"]], "ttnn.sin_bw": [[308, "ttnn-sin-bw"]], "ttnn.sinh": [[309, "ttnn-sinh"]], "ttnn.sinh_bw": [[310, "ttnn-sinh-bw"]], "ttnn.slice": [[311, "ttnn-slice"]], "ttnn.softmax": [[312, "ttnn-softmax"]], "mask (optional)": [[312, "id3"]], "ttnn.softplus": [[313, "ttnn-softplus"]], "ttnn.softplus_bw": [[314, "ttnn-softplus-bw"]], "ttnn.softshrink": [[315, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[316, "ttnn-softshrink-bw"]], "ttnn.softsign": [[317, "ttnn-softsign"]], "ttnn.softsign_bw": [[318, "ttnn-softsign-bw"]], "ttnn.sort": [[319, "ttnn-sort"]], "ttnn.sqrt": [[320, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[321, "ttnn-sqrt-bw"]], "ttnn.square": [[322, "ttnn-square"]], "ttnn.square_bw": [[323, "ttnn-square-bw"]], "ttnn.squared_difference": [[324, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[325, "ttnn-squared-difference-bw"]], "ttnn.std": [[326, "ttnn-std"]], "ttnn.sub_bw": [[327, "ttnn-sub-bw"]], "ttnn.subalpha": [[328, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[329, "ttnn-subalpha-bw"]], "ttnn.subtract": [[330, "ttnn-subtract"]], "ttnn.sum": [[331, "ttnn-sum"]], "ttnn.swiglu": [[332, "ttnn-swiglu"]], "ttnn.swish": [[333, "ttnn-swish"]], "ttnn.synchronize_device": [[334, "ttnn-synchronize-device"]], "ttnn.tan": [[335, "ttnn-tan"]], "ttnn.tan_bw": [[336, "ttnn-tan-bw"]], "ttnn.tanh": [[337, "ttnn-tanh"]], "ttnn.tanh_bw": [[338, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[339, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[340, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[341, "ttnn-threshold"]], "ttnn.threshold_bw": [[342, "ttnn-threshold-bw"]], "ttnn.tilize": [[343, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[344, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[345, "ttnn-to-device"]], "ttnn.to_layout": [[346, "ttnn-to-layout"]], "ttnn.to_memory_config": [[347, "ttnn-to-memory-config"]], "ttnn.to_torch": [[348, "ttnn-to-torch"]], "ttnn.topk": [[349, "ttnn-topk"]], "index_tensor": [[349, "id3"]], "ttnn.transformer.attention_softmax": [[350, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[351, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[352, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[353, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[354, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[355, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[356, "ttnn-tril"]], "ttnn.triu": [[357, "ttnn-triu"]], "ttnn.trunc": [[358, "ttnn-trunc"]], "ttnn.trunc_bw": [[359, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[360, "ttnn-unary-chain"]], "ttnn.untilize": [[361, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[362, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[363, "ttnn-upsample"]], "ttnn.var": [[364, "ttnn-var"]], "ttnn.where": [[365, "ttnn-where"]], "ttnn.where_bw": [[366, "ttnn-where-bw"]], "ttnn.xlogy": [[367, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[368, "ttnn-xlogy-bw"]], "ttnn.zeros": [[369, "ttnn-zeros"]], "ttnn.zeros_like": [[370, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[371, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[371, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[371, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[371, "step-3-optimizing-the-model"]], "More examples": [[371, "more-examples"]], "Building and Uplifting Demos": [[372, "building-and-uplifting-demos"]], "Getting Started": [[373, "getting-started"]], "1. Install and Build": [[373, "install-and-build"]], "2. Explore Our Model Demos": [[373, "explore-our-model-demos"]], "Where To Go From Here": [[373, "where-to-go-from-here"]], "Install": [[374, "install"]], "Prerequisites:": [[374, "prerequisites"]], "1: Set Up the Hardware": [[374, "set-up-the-hardware"]], "2: Install Software Dependencies": [[374, "install-software-dependencies"]], "Option 1: TT-Installer Script (recommended)": [[374, "option-1-tt-installer-script-recommended"]], "Option 2: Manual Installation": [[374, "option-2-manual-installation"]], "TT-NN / TT-Metalium Installation": [[374, "tt-nn-tt-metalium-installation"]], "There are four options for installing TT-Metalium:": [[374, "there-are-four-options-for-installing-tt-metalium"]], "Binaries": [[374, "binaries"]], "Step 1. Install the Latest Wheel:": [[374, "step-1-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[374, "step-2-for-models-users-only-set-up-environment-for-models"]], "Docker Release Image": [[374, "docker-release-image"]], "Source": [[374, "source"]], "Step 1. Clone the Repository:": [[374, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[374, "step-2-build-the-library"]], "Step 3. Virtual Environment Setup": [[374, "step-3-virtual-environment-setup"]], "Anaconda": [[374, "anaconda"]], "Step 1. Install the Latest Package:": [[374, "step-1-install-the-latest-package"]], "You are All Set!": [[374, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[374, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[374, "interested-in-contributing"]], "Multi-Card Configuration (TT-Topology)": [[374, "multi-card-configuration-tt-topology"]], "Virtual Machine Requirements": [[374, "virtual-machine-requirements"]], "Overview": [[374, "overview"]], "Why It Matters": [[374, "why-it-matters"]], "Requirements for VMs": [[374, "requirements-for-vms"]], "Onboarding New Functionality": [[375, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[376, "profiling-tt-nn-operations"]], "Perf Report Headers": [[376, "perf-report-headers"]], "profile_this description": [[376, "profile-this-description"]], "Using the Performance Report with TT-NN Visualizer": [[376, "using-the-performance-report-with-tt-nn-visualizer"]], "Tensor": [[377, "tensor"]], "Shape": [[377, "shape"]], "Layout": [[377, "layout"]], "Data Type": [[377, "data-type"]], "Required Width Multiples for Data Types": [[377, "id5"]], "Limitation of BFLOAT8_B": [[377, "limitation-of-bfloat8-b"]], "Storage": [[377, "storage"]], "Tensor Sharding": [[377, "tensor-sharding"]], "Tutorials": [[378, "tutorials"]], "Add Tensors": [[379, "Add-Tensors"]], "Import the necessary libraries": [[379, "Import-the-necessary-libraries"], [380, "Import-the-necessary-libraries"], [381, "Import-the-necessary-libraries"], [382, "Import-the-necessary-libraries"]], "Open Tenstorrent device": [[379, "Open-Tenstorrent-device"], [380, "Open-Tenstorrent-device"], [381, "Open-Tenstorrent-device"], [382, "Open-Tenstorrent-device"], [384, "Open-Tenstorrent-device"]], "Perform the addition operation and convert back": [[379, "Perform-the-addition-operation-and-convert-back"]], "Close The Device": [[379, "Close-The-Device"], [380, "Close-The-Device"], [381, "Close-The-Device"], [382, "Close-The-Device"], [384, "Close-The-Device"]], "Full example and output": [[379, "Full-example-and-output"], [380, "Full-example-and-output"], [381, "Full-example-and-output"], [382, "Full-example-and-output"], [383, "Full-example-and-output"], [384, "Full-example-and-output"]], "Basic Convolution": [[380, "Basic-Convolution"]], "Set manual seed for reproducibility": [[380, "Set-manual-seed-for-reproducibility"]], "Create forward method": [[380, "Create-forward-method"]], "Set input and convolution parameters": [[380, "Set-input-and-convolution-parameters"]], "Create tensors": [[380, "Create-tensors"]], "Run convolution operation": [[380, "Run-convolution-operation"]], "More Basic Tensor Operations": [[381, "More-Basic-Tensor-Operations"]], "Host Tensor Creation": [[381, "Host-Tensor-Creation"]], "Convert Host Tensors to TT-NN Tiled Tensors or Create Natively on Device": [[381, "Convert-Host-Tensors-to-TT-NN-Tiled-Tensors-or-Create-Natively-on-Device"]], "Tile-Based Arithmetic Operations": [[381, "Tile-Based-Arithmetic-Operations"]], "Simulated Broadcasting (Row Vector Expansion)": [[381, "Simulated-Broadcasting-(Row-Vector-Expansion)"]], "MLP Inference": [[382, "MLP-Inference"]], "Load MNIST Test Data": [[382, "Load-MNIST-Test-Data"]], "Load Pretrained MLP Weights": [[382, "Load-Pretrained-MLP-Weights"]], "Basic accuracy tracking, inference, loop, and image flattening": [[382, "Basic-accuracy-tracking,-inference,-loop,-and-image-flattening"]], "Multi-Head Attention": [[383, "Multi-Head-Attention"]], "Write Multi-Head Attention using ttnn": [[383, "Write-Multi-Head-Attention-using-ttnn"]], "Configuration": [[383, "Configuration"]], "Initialize activations and weights using torch": [[383, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[383, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[383, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[383, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[383, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[383, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[383, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[383, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[383, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Close the device": [[383, "Close-the-device"]], "Running a Simple CNN Inference on CIFAR-10": [[384, "Running-a-Simple-CNN-Inference-on-CIFAR-10"]], "Setup and Imports": [[384, "Setup-and-Imports"]], "Load CIFAR-10 Dataset": [[384, "Load-CIFAR-10-Dataset"]], "Load or Initialize Weights": [[384, "Load-or-Initialize-Weights"]], "Define Convolution + Pooling Stage": [[384, "Define-Convolution-+-Pooling-Stage"]], "Run Inference on Test Samples": [[384, "Run-Inference-on-Test-Samples"]], "TT-NN Visualizer": [[385, "tt-nn-visualizer"]], "Prerequisites": [[385, "prerequisites"]], "Running TTNN Visualizer": [[385, "running-ttnn-visualizer"]], "Model Profiling": [[385, "model-profiling"]], "Generating the Memory Report": [[385, "generating-the-memory-report"]], "Generating the Performance Report": [[385, "generating-the-performance-report"]], "Result Analysis": [[385, "result-analysis"]], "Uploading Reports": [[385, "uploading-reports"]], "Operations Tab": [[385, "operations-tab"]], "Tensors Tab": [[385, "tensors-tab"]], "Buffers Tab": [[385, "buffers-tab"]], "Graph Tab": [[385, "graph-tab"]], "Performance Tab": [[385, "performance-tab"]], "Recap": [[385, "recap"]], "Using TT-NN": [[386, "using-tt-nn"]], "Basic Examples": [[386, "basic-examples"]], "1. Converting from and to torch tensor": [[386, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[386, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[386, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[386, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[386, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[386, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[386, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[386, "enabling-logging"]], "9. Supported Python Operators": [[386, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[386, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[386, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[386, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[386, "query-all-operations"]], "14. Falling back to torch": [[386, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[386, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[6, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.activation"]], "core_grid (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.deallocate_activation"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "full_inner_dim (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.full_inner_dim"]], "in_place (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.override_sharding_config"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add (in module ttnn)": [[16, "ttnn.add"]], "add_bw (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "alt_complex_rotate90 (in module ttnn)": [[24, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[25, "ttnn.angle"]], "angle_bw (in module ttnn)": [[26, "ttnn.angle_bw"]], "arange (in module ttnn)": [[27, "ttnn.arange"]], "argmax (in module ttnn)": [[28, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[29, "ttnn.as_tensor"]], "asin (in module ttnn)": [[30, "ttnn.asin"]], "asin_bw (in module ttnn)": [[31, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[32, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[33, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[34, "ttnn.assign_bw"]], "atan (in module ttnn)": [[35, "ttnn.atan"]], "atan2 (in module ttnn)": [[36, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[37, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[38, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[39, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[40, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[41, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[42, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[43, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[44, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[45, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[46, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[47, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[48, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[49, "ttnn.cbrt"]], "ceil (in module ttnn)": [[50, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[51, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[52, "ttnn.celu"]], "celu_bw (in module ttnn)": [[53, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[54, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[55, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[56, "ttnn.clip"]], "clip_bw (in module ttnn)": [[57, "ttnn.clip_bw"]], "clone (in module ttnn)": [[58, "ttnn.clone"]], "close_device() (in module ttnn)": [[59, "ttnn.close_device"]], "concat (in module ttnn)": [[60, "ttnn.concat"]], "concat_bw (in module ttnn)": [[61, "ttnn.concat_bw"]], "conj (in module ttnn)": [[62, "ttnn.conj"]], "conj_bw (in module ttnn)": [[63, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[64, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[65, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[66, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[67, "ttnn.cos"]], "cos_bw (in module ttnn)": [[68, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[69, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[70, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[71, "ttnn.create_sharded_memory_config"]], "cumprod (in module ttnn)": [[72, "ttnn.cumprod"]], "cumsum (in module ttnn)": [[73, "ttnn.cumsum"]], "deallocate (in module ttnn)": [[74, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[75, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[76, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[77, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[78, "ttnn.digamma_bw"]], "div (in module ttnn)": [[79, "ttnn.div"]], "div_bw (in module ttnn)": [[80, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[81, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[82, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[83, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[84, "ttnn.elu"]], "elu_bw (in module ttnn)": [[85, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[86, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[87, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[88, "ttnn.empty"]], "empty_like (in module ttnn)": [[89, "ttnn.empty_like"]], "eq (in module ttnn)": [[90, "ttnn.eq"]], "eq_ (in module ttnn)": [[91, "ttnn.eq_"]], "eqz (in module ttnn)": [[92, "ttnn.eqz"]], "erf (in module ttnn)": [[93, "ttnn.erf"]], "erf_bw (in module ttnn)": [[94, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[95, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[96, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[97, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[98, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[99, "ttnn.exp"]], "exp2 (in module ttnn)": [[100, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[101, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[102, "ttnn.exp_bw"]], "conv3d (in module ttnn.experimental)": [[103, "ttnn.experimental.conv3d"]], "dropout (in module ttnn.experimental)": [[104, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[105, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[106, "ttnn.experimental.rotary_embedding"]], "expm1 (in module ttnn)": [[107, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[108, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[109, "ttnn.fill"]], "fill_bw (in module ttnn)": [[110, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[111, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[112, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[113, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[114, "ttnn.floor"]], "floor_bw (in module ttnn)": [[115, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[116, "ttnn.floor_div"]], "fmod (in module ttnn)": [[117, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[118, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[119, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[120, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[121, "ttnn.frac"]], "frac_bw (in module ttnn)": [[122, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[123, "ttnn.from_device"]], "from_torch (in module ttnn)": [[124, "ttnn.from_torch"]], "full (in module ttnn)": [[125, "ttnn.full"]], "full_like (in module ttnn)": [[126, "ttnn.full_like"]], "gather (in module ttnn)": [[127, "ttnn.gather"]], "gcd (in module ttnn)": [[128, "ttnn.gcd"]], "ge (in module ttnn)": [[129, "ttnn.ge"]], "ge_ (in module ttnn)": [[130, "ttnn.ge_"]], "geglu (in module ttnn)": [[131, "ttnn.geglu"]], "gelu (in module ttnn)": [[132, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[133, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[134, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[135, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[136, "ttnn.glu"]], "group_norm (in module ttnn)": [[137, "ttnn.group_norm"]], "gt (in module ttnn)": [[138, "ttnn.gt"]], "gt_ (in module ttnn)": [[139, "ttnn.gt_"]], "gtz (in module ttnn)": [[140, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[141, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[142, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[143, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[144, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[145, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[146, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[147, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[148, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[149, "ttnn.heaviside"]], "hypot (in module ttnn)": [[150, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[151, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[152, "ttnn.i0"]], "i0_bw (in module ttnn)": [[153, "ttnn.i0_bw"]], "identity (in module ttnn)": [[154, "ttnn.identity"]], "imag (in module ttnn)": [[155, "ttnn.imag"]], "imag_bw (in module ttnn)": [[156, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[157, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[158, "ttnn.is_imag"]], "is_real (in module ttnn)": [[159, "ttnn.is_real"]], "isclose (in module ttnn)": [[160, "ttnn.isclose"]], "isfinite (in module ttnn)": [[161, "ttnn.isfinite"]], "isinf (in module ttnn)": [[162, "ttnn.isinf"]], "isnan (in module ttnn)": [[163, "ttnn.isnan"]], "isneginf (in module ttnn)": [[164, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[165, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[166, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[167, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[168, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[169, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[170, "ttnn.lcm"]], "ldexp (in module ttnn)": [[171, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[172, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[173, "ttnn.le"]], "le_ (in module ttnn)": [[174, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[175, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[176, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[177, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[178, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[179, "ttnn.lez"]], "lgamma (in module ttnn)": [[180, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[181, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[182, "ttnn.linear"]], "load_tensor (in module ttnn)": [[183, "ttnn.load_tensor"]], "log (in module ttnn)": [[184, "ttnn.log"]], "log10 (in module ttnn)": [[185, "ttnn.log10"]], "log10_bw (in module ttnn)": [[186, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[187, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[188, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[189, "ttnn.log2"]], "log2_bw (in module ttnn)": [[190, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[191, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[192, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[193, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[194, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[195, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[196, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[197, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[198, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[199, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[200, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[201, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[202, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[203, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[204, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[205, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[206, "ttnn.logit"]], "logit_bw (in module ttnn)": [[207, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[208, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[209, "ttnn.lt"]], "lt_ (in module ttnn)": [[210, "ttnn.lt_"]], "ltz (in module ttnn)": [[211, "ttnn.ltz"]], "mac (in module ttnn)": [[212, "ttnn.mac"]], "manage_device() (in module ttnn)": [[213, "ttnn.manage_device"]], "matmul (in module ttnn)": [[214, "ttnn.matmul"]], "max (in module ttnn)": [[215, "ttnn.max"]], "max_bw (in module ttnn)": [[216, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[217, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[218, "ttnn.maximum"]], "mean (in module ttnn)": [[219, "ttnn.mean"]], "min (in module ttnn)": [[220, "ttnn.min"]], "min_bw (in module ttnn)": [[221, "ttnn.min_bw"]], "minimum (in module ttnn)": [[222, "ttnn.minimum"]], "mish (in module ttnn)": [[223, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[224, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[225, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[226, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[227, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[228, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[229, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[230, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[231, "ttnn.multiply"]], "ne (in module ttnn)": [[232, "ttnn.ne"]], "ne_ (in module ttnn)": [[233, "ttnn.ne_"]], "neg (in module ttnn)": [[234, "ttnn.neg"]], "neg_bw (in module ttnn)": [[235, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[236, "ttnn.nextafter"]], "nez (in module ttnn)": [[237, "ttnn.nez"]], "nonzero (in module ttnn)": [[238, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[239, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[240, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[241, "ttnn.ones"]], "ones_like (in module ttnn)": [[242, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[243, "ttnn.open_device"]], "outer (in module ttnn)": [[244, "ttnn.outer"]], "pad (in module ttnn)": [[245, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[246, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[247, "ttnn.permute"]], "polar (in module ttnn)": [[248, "ttnn.polar"]], "polar_bw (in module ttnn)": [[249, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[250, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[251, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[252, "ttnn.polyval"]], "pow (in module ttnn)": [[253, "ttnn.pow"]], "pow_bw (in module ttnn)": [[254, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[255, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[256, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[257, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[258, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[259, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[260, "ttnn.prod"]], "prod_bw (in module ttnn)": [[261, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[262, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[263, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[264, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[265, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[266, "ttnn.real"]], "real_bw (in module ttnn)": [[267, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[268, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[269, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[270, "ttnn.reciprocal_bw"]], "register_post_operation_hook() (in module ttnn)": [[271, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[272, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[273, "ttnn.reglu"]], "relu (in module ttnn)": [[274, "ttnn.relu"]], "relu6 (in module ttnn)": [[275, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[276, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[277, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[278, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[279, "ttnn.relu_min"]], "remainder (in module ttnn)": [[280, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[281, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[282, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[283, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[284, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[285, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[286, "ttnn.rms_norm"]], "round (in module ttnn)": [[287, "ttnn.round"]], "round_bw (in module ttnn)": [[288, "ttnn.round_bw"]], "rpow (in module ttnn)": [[289, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[290, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[291, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[292, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[293, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[294, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[295, "ttnn.scatter"]], "selu (in module ttnn)": [[296, "ttnn.selu"]], "selu_bw (in module ttnn)": [[297, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[298, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[299, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[300, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[301, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[302, "ttnn.sign"]], "sign_bw (in module ttnn)": [[303, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[304, "ttnn.signbit"]], "silu (in module ttnn)": [[305, "ttnn.silu"]], "silu_bw (in module ttnn)": [[306, "ttnn.silu_bw"]], "sin (in module ttnn)": [[307, "ttnn.sin"]], "sin_bw (in module ttnn)": [[308, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[309, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[310, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[311, "ttnn.slice"]], "softmax (in module ttnn)": [[312, "ttnn.softmax"]], "softplus (in module ttnn)": [[313, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[314, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[315, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[316, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[317, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[318, "ttnn.softsign_bw"]], "sort (in module ttnn)": [[319, "ttnn.sort"]], "sqrt (in module ttnn)": [[320, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[321, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[322, "ttnn.square"]], "square_bw (in module ttnn)": [[323, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[324, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[325, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[326, "ttnn.std"]], "sub_bw (in module ttnn)": [[327, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[328, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[329, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[330, "ttnn.subtract"]], "sum (in module ttnn)": [[331, "ttnn.sum"]], "swiglu (in module ttnn)": [[332, "ttnn.swiglu"]], "swish (in module ttnn)": [[333, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[334, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[335, "ttnn.tan"]], "tan_bw (in module ttnn)": [[336, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[337, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[338, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[339, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[340, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[341, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[342, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[343, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[344, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[345, "ttnn.to_device"]], "to_layout (in module ttnn)": [[346, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[347, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[348, "ttnn.to_torch"]], "topk (in module ttnn)": [[349, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[350, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[351, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[352, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[353, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[354, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[355, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[356, "ttnn.tril"]], "triu (in module ttnn)": [[357, "ttnn.triu"]], "trunc (in module ttnn)": [[358, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[359, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[360, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[361, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[362, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[363, "ttnn.upsample"]], "var (in module ttnn)": [[364, "ttnn.var"]], "where (in module ttnn)": [[365, "ttnn.where"]], "where_bw (in module ttnn)": [[366, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[367, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[368, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[369, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[370, "ttnn.zeros_like"]], "shape (class in ttnn)": [[377, "ttnn.Shape"]], "rank (ttnn.shape property)": [[377, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[377, "ttnn.Shape.to_rank"]]}})