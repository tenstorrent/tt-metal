Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCastProgramConfig", "ttnn/api/ttnn.MatmulMultiCoreReuseProgramConfig", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.SoftmaxDefaultProgramConfig", "ttnn/api/ttnn.SoftmaxProgramConfig", "ttnn/api/ttnn.SoftmaxShardedMultiCoreProgramConfig", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.addmm", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.cumprod", "ttnn/api/ttnn.cumsum", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gather", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.matmul_batched_weights", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scale_causal_mask_hw_dims_softmax_in_place", "ttnn/api/ttnn.scale_mask_softmax", "ttnn/api/ttnn.scale_mask_softmax_in_place", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softmax_in_place", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sort", "ttnn/api/ttnn.sparse_matmul", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.rst", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.rst", "ttnn/api/ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.rst", "ttnn/api/ttnn.MatmulMultiCoreReuseProgramConfig.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.SoftmaxDefaultProgramConfig.rst", "ttnn/api/ttnn.SoftmaxProgramConfig.rst", "ttnn/api/ttnn.SoftmaxShardedMultiCoreProgramConfig.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.addmm.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.cumprod.rst", "ttnn/api/ttnn.cumsum.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gather.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.matmul_batched_weights.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scale_causal_mask_hw_dims_softmax_in_place.rst", "ttnn/api/ttnn.scale_mask_softmax.rst", "ttnn/api/ttnn.scale_mask_softmax_in_place.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softmax_in_place.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sort.rst", "ttnn/api/ttnn.sparse_matmul.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer.md", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig", "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig", "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig", "ttnn.MatmulMultiCoreReuseProgramConfig", "ttnn.SetDefaultDevice", "ttnn.SoftmaxDefaultProgramConfig", "ttnn.SoftmaxProgramConfig", "ttnn.SoftmaxShardedMultiCoreProgramConfig", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.addmm", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.cumprod", "ttnn.cumsum", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.conv3d", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gather", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.matmul_batched_weights", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scale_causal_mask_hw_dims_softmax_in_place", "ttnn.scale_mask_softmax", "ttnn.scale_mask_softmax_in_place", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softmax_in_place", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sort", "ttnn.sparse_matmul", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Add Tensors", "Basic Convolution", "More Basic Tensor Operations", "MLP Inference", "Multi-Head Attention", "Running a Simple CNN Inference on CIFAR-10", "TT-NN Visualizer", "Using TT-NN"], "terms": {"what": [0, 386, 390, 399], "i": [0, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 24, 26, 31, 36, 45, 49, 50, 53, 62, 67, 68, 69, 74, 79, 87, 88, 94, 95, 98, 114, 117, 119, 120, 127, 128, 130, 132, 135, 137, 139, 143, 144, 145, 146, 159, 161, 166, 167, 177, 180, 181, 186, 190, 204, 205, 206, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 237, 239, 241, 252, 254, 255, 257, 259, 261, 262, 264, 269, 270, 273, 278, 280, 281, 282, 287, 288, 293, 294, 295, 298, 303, 304, 305, 306, 307, 323, 324, 325, 332, 333, 339, 340, 341, 343, 345, 346, 348, 349, 350, 351, 353, 360, 362, 363, 364, 365, 367, 368, 369, 377, 378, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400], "get": [0, 6, 8, 311, 366, 385, 388, 392, 394, 399], "start": [0, 35, 185, 323, 385, 388, 390, 392, 397, 399], "1": [0, 6, 7, 9, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 315, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 367, 368, 369, 373, 378, 379, 380, 381, 382, 383, 384, 389, 391, 393, 394, 395, 396, 397, 398, 399], "instal": [0, 386, 390, 392, 399, 400], "build": [0, 394, 399], "2": [0, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 269, 271, 272, 273, 274, 276, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 362, 367, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 391, 393, 394, 395, 396, 397, 398], "explor": [0, 399], "our": [0, 386, 388, 389, 391, 394, 395, 396, 398], "model": [0, 3, 233, 234, 386, 389, 390, 392, 393, 394, 396, 398], "demo": [0, 388, 390, 399], "where": [0, 2, 6, 31, 35, 49, 74, 79, 96, 97, 127, 128, 145, 177, 190, 222, 223, 247, 264, 304, 305, 307, 333, 360, 380, 386, 390, 391, 398, 399], "To": [0, 6, 363, 389, 391, 392, 395, 399, 400], "go": [0, 307], "from": [0, 2, 4, 6, 9, 35, 37, 67, 68, 72, 73, 74, 80, 81, 95, 132, 135, 174, 175, 191, 265, 266, 267, 268, 302, 303, 304, 305, 307, 324, 333, 344, 376, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399], "here": [0, 2, 4, 388, 390, 393, 394, 395, 396, 398, 399], "prerequisit": [0, 392], "set": [0, 6, 9, 13, 14, 68, 74, 119, 222, 239, 256, 265, 266, 269, 310, 333, 348, 363, 366, 369, 385, 390, 392, 396, 398, 399, 400], "up": [0, 3, 120, 307, 390, 392, 394, 398], "hardwar": [0, 2, 4, 252, 385, 386, 387, 391, 393, 396, 398, 399, 400], "softwar": [0, 394, 395, 396, 397, 398], "depend": [0, 11, 265, 266, 267, 268, 360, 386, 390, 391, 392], "option": [0, 6, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 394, 398, 399, 400], "script": [0, 386, 390, 392, 393, 394, 395, 396, 397, 398], "recommend": [0, 6, 180, 385, 392, 399, 400], "manual": [0, 4, 385, 392, 400], "metalium": [0, 4], "There": [0, 4, 222, 385, 391], "ar": [0, 6, 7, 9, 11, 12, 13, 24, 31, 44, 49, 52, 55, 66, 68, 80, 81, 88, 120, 135, 145, 177, 190, 222, 226, 247, 256, 262, 280, 281, 298, 305, 323, 333, 348, 363, 369, 377, 385, 386, 387, 390, 391, 392, 394, 396, 397, 398, 399, 400], "four": 0, "binari": [0, 23, 25, 44, 51, 52, 54, 55, 56, 87, 89, 98, 99, 124, 125, 136, 137, 138, 146, 147, 158, 168, 178, 179, 181, 182, 202, 203, 206, 207, 210, 211, 212, 213, 217, 218, 227, 231, 240, 241, 242, 245, 253, 261, 262, 264, 289, 302, 338, 342, 344, 381], "step": [0, 35, 323, 386, 389, 399], "latest": [0, 390], "wheel": [0, 400], "For": [0, 4, 6, 18, 28, 37, 50, 73, 80, 81, 88, 126, 132, 135, 141, 159, 186, 194, 196, 198, 199, 201, 204, 205, 215, 216, 222, 263, 270, 274, 279, 290, 305, 306, 325, 327, 332, 335, 363, 369, 382, 385, 386, 389, 390, 391, 393, 394, 396, 398, 399], "user": [0, 4, 6, 31, 162, 190, 222, 223, 233, 234, 252, 333, 358, 386, 387, 389, 394, 395, 396, 397, 398, 399], "onli": [0, 4, 6, 7, 24, 26, 27, 29, 36, 45, 50, 62, 63, 64, 65, 68, 69, 79, 87, 88, 95, 120, 132, 137, 139, 144, 145, 146, 159, 180, 181, 185, 186, 204, 205, 206, 217, 220, 222, 224, 225, 228, 229, 230, 237, 254, 259, 267, 268, 278, 282, 290, 303, 304, 339, 340, 341, 343, 345, 346, 348, 351, 353, 368, 369, 378, 379, 382, 385, 386, 390, 391, 398, 399, 400], "environ": [0, 6, 387, 392, 399, 400], "docker": [0, 400], "releas": [0, 82, 400], "imag": [0, 74, 166, 257, 386, 390, 391, 392, 394, 398, 400], "sourc": [0, 3, 135, 174, 307, 399], "clone": [0, 162, 369, 399], "repositori": [0, 1, 387, 392, 399], "librari": [0, 3, 392, 398], "3": [0, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 256, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 391, 392, 393, 394, 396, 397, 398], "virtual": [0, 392], "setup": [0, 11, 386, 387, 392, 399], "anaconda": 0, "packag": 0, "you": [0, 1, 2, 4, 326, 386, 387, 390, 391, 392, 396, 398, 399, 400], "all": [0, 4, 6, 9, 15, 31, 36, 49, 135, 143, 177, 222, 224, 228, 229, 233, 234, 254, 261, 269, 270, 295, 305, 306, 340, 345, 348, 363, 378, 385, 386, 389, 390, 391, 393, 396, 397, 398, 399], "verifi": [0, 389, 398], "your": [0, 386, 387, 390, 392, 399], "try": [0, 6, 386, 394], "execut": [0, 6, 16, 280, 281, 363, 386, 390, 396, 397, 398, 399, 400], "program": [0, 3, 4, 9, 10, 11, 12, 14, 15, 16, 31, 190, 222, 223, 304, 306, 325, 333, 364, 365, 390, 393, 394, 395, 396, 397, 398], "exampl": [0, 81, 131, 135, 224, 228, 229, 256, 269, 293, 307, 332, 340, 345, 348, 359, 378, 386, 387, 389, 390, 391, 392, 399], "interest": 0, "contribut": [0, 2, 387], "multi": [0, 12, 16, 37, 325, 377, 391, 392, 396], "card": [0, 386], "configur": [0, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 392, 394, 398, 399], "topologi": 0, "machin": [0, 390, 399], "requir": [0, 4, 9, 24, 26, 42, 49, 69, 79, 88, 119, 120, 133, 233, 234, 237, 250, 303, 304, 341, 343, 380, 383, 386, 390, 395, 399], "overview": [0, 399], "why": 0, "It": [0, 3, 4, 6, 7, 12, 14, 15, 16, 72, 73, 74, 233, 234, 362, 396, 398, 399], "matter": 0, "vm": 0, "us": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 31, 50, 68, 72, 73, 74, 79, 88, 94, 95, 97, 101, 103, 107, 112, 113, 114, 120, 132, 134, 140, 141, 145, 159, 162, 190, 192, 193, 195, 197, 222, 223, 226, 233, 234, 251, 252, 254, 265, 266, 267, 268, 273, 274, 280, 281, 292, 300, 304, 305, 306, 310, 311, 324, 325, 326, 332, 333, 357, 358, 361, 362, 363, 368, 369, 375, 376, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 398, 399], "basic": [0, 12, 388, 392], "convert": [0, 3, 4, 6, 9, 37, 66, 132, 135, 233, 234, 265, 266, 267, 268, 332, 361, 362, 391, 392, 394, 396, 398], "torch": [0, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 384, 385, 391, 392, 394, 395, 396, 398], "tensor": [0, 3, 4, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 390, 392, 396, 397, 398], "run": [0, 3, 4, 49, 132, 233, 280, 281, 351, 353, 363, 386, 387, 388, 389, 390, 392, 393, 395, 396], "an": [0, 2, 3, 4, 68, 72, 73, 74, 94, 111, 120, 121, 125, 143, 221, 222, 257, 264, 269, 289, 304, 359, 362, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399], "oper": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 391, 392, 396, 397, 398], "devic": [0, 3, 6, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 399], "__getitem__": 0, "slice": [0, 6, 7], "4": [0, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 388, 391, 394, 395, 396, 397, 398, 399], "enabl": [0, 3, 6, 16, 351, 353, 363, 388, 389, 390, 394, 395, 396, 397, 398, 399], "cach": [0, 3, 37, 67, 114, 174, 175, 233, 234, 390, 391, 394, 395, 396, 397, 398, 399], "5": [0, 6, 35, 49, 63, 65, 79, 80, 81, 85, 92, 94, 96, 134, 149, 150, 168, 214, 238, 264, 274, 307, 328, 329, 332, 395, 396, 397, 398], "debug": [0, 3, 4, 389, 398, 399], "intermedi": [0, 12, 305, 306], "6": [0, 35, 238, 296, 332, 391, 394, 395, 396, 397, 398], "trace": [0, 3, 252, 390], "graph": [0, 3, 233, 392], "7": [0, 94, 133, 296, 333, 388, 394, 395, 396, 397, 398], "tt_lib": [0, 119, 120, 359], "8": [0, 16, 35, 79, 94, 254, 304, 306, 325, 333, 390, 391, 394, 395, 398], "log": [0, 6, 201, 381, 390, 393, 396, 398, 399], "9": [0, 62, 64, 77, 94, 96, 321, 396, 397], "support": [0, 1, 3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 253, 254, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 363, 368, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 388, 391, 398, 399], "python": [0, 3, 388, 389, 390, 391, 392, 393, 395, 399], "10": [0, 35, 82, 94, 131, 135, 143, 161, 190, 222, 259, 277, 307, 333, 355, 359, 360, 361, 388, 392, 394, 396, 399], "chang": [0, 6, 294, 357, 358, 375, 376, 391], "string": [0, 6, 50, 87, 141, 233, 234, 273, 274, 310], "represent": [0, 326, 391, 399], "11": [0, 96, 388], "visual": [0, 3, 392], "web": 0, "browser": [0, 399], "12": [0, 69, 145, 177, 254, 295, 304, 306, 385, 388, 392, 397], "regist": [0, 3, 4, 280, 281], "pre": [0, 4, 226, 281, 388, 392, 398], "post": [0, 280, 390], "hook": [0, 280, 281], "13": [0, 394, 395, 396, 397, 398], "queri": [0, 369, 397], "14": [0, 69, 394, 395, 396, 397, 398], "fall": [0, 180, 325], "back": [0, 4, 325, 366, 390, 394, 396, 398], "15": [0, 394, 395, 398], "captur": 0, "c": [0, 3, 7, 49, 72, 73, 74, 111, 119, 120, 226, 311, 363, 377, 388, 390, 391, 394, 398], "function": [0, 6, 8, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 394, 395, 396, 398], "buffer": [0, 4, 6, 82, 252, 325, 390, 391, 392], "alloc": [0, 4, 35, 96, 97, 133, 134, 250, 251, 306, 325, 383, 384, 391, 399], "etc": [0, 3, 4, 307, 391, 398], "shape": [0, 9, 11, 31, 35, 36, 49, 68, 74, 79, 80, 81, 96, 97, 117, 127, 128, 133, 134, 135, 143, 177, 190, 222, 226, 247, 250, 251, 254, 255, 256, 291, 292, 293, 294, 295, 304, 306, 323, 325, 333, 358, 363, 366, 369, 376, 383, 384, 385, 390, 393, 394, 395, 396, 397, 398, 399], "layout": [0, 4, 6, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 390, 393, 394, 395, 396, 397, 398, 399, 400], "data": [0, 3, 6, 9, 10, 11, 12, 16, 23, 31, 35, 36, 37, 66, 72, 73, 74, 94, 95, 96, 97, 98, 119, 120, 132, 133, 134, 136, 137, 143, 146, 177, 178, 179, 181, 190, 202, 203, 206, 210, 212, 217, 222, 223, 224, 227, 228, 229, 231, 240, 241, 250, 251, 265, 266, 267, 268, 269, 273, 295, 302, 333, 338, 340, 344, 345, 357, 358, 360, 361, 362, 363, 375, 376, 377, 378, 381, 383, 384, 385, 390, 392, 395, 398, 399, 400], "type": [0, 3, 4, 6, 7, 15, 23, 31, 35, 36, 37, 50, 66, 72, 73, 74, 80, 81, 88, 94, 95, 96, 97, 98, 111, 119, 120, 127, 132, 133, 134, 135, 136, 137, 141, 143, 146, 177, 178, 179, 181, 190, 202, 203, 206, 210, 212, 217, 222, 223, 224, 227, 228, 229, 231, 240, 241, 250, 251, 252, 256, 265, 266, 267, 268, 269, 273, 277, 294, 295, 302, 332, 333, 338, 340, 344, 345, 348, 357, 358, 360, 361, 362, 363, 375, 376, 378, 381, 383, 384, 385, 390, 396, 398, 399], "limit": [0, 18, 28, 36, 49, 50, 88, 126, 141, 159, 177, 190, 194, 196, 198, 199, 201, 204, 205, 215, 216, 263, 269, 270, 274, 279, 290, 295, 327, 335, 363, 382, 386], "bfloat8_b": [0, 6, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 40, 41, 42, 43, 44, 45, 46, 50, 58, 60, 62, 69, 75, 76, 77, 83, 84, 85, 86, 88, 90, 92, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 115, 116, 117, 122, 126, 129, 130, 132, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 171, 172, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 224, 225, 228, 229, 230, 232, 237, 240, 241, 242, 243, 244, 245, 246, 261, 262, 263, 264, 270, 271, 272, 274, 278, 279, 282, 283, 284, 286, 287, 290, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 362, 370, 371, 372, 374, 378, 379, 380, 382, 385, 390, 397], "storag": [0, 9, 11, 12, 16], "shard": [0, 6, 9, 10, 11, 16, 24, 31, 68, 79, 145, 177, 190, 222, 223, 226, 265, 266, 267, 268, 295, 306, 325, 333, 359, 361, 369, 399], "memori": [0, 6, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 392, 394, 397, 398], "config": [0, 6, 9, 10, 11, 12, 14, 16, 70, 94, 95, 111, 127, 128, 177, 222, 257, 265, 266, 294, 304, 306, 323, 364, 365, 366, 385, 388, 394, 398, 399, 400], "api": [0, 4, 367, 385, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400], "rank": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 129, 130, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 227, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 253, 254, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 362, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 391], "to_rank": [0, 391], "open_devic": [0, 13, 67, 82, 94, 95, 131, 191, 277, 307, 348, 359, 360, 361, 393, 394, 395, 396, 397, 398, 400], "close_devic": [0, 393, 394, 395, 396, 397, 398, 400], "manage_devic": [0, 400], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 391], "core": [0, 4, 6, 9, 10, 11, 12, 16, 31, 79, 190, 222, 223, 252, 325, 333, 360, 361, 363, 375, 385, 390, 391, 394, 395, 396, 397, 398, 399], "as_tensor": 0, "from_torch": [0, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 370, 371, 372, 373, 374, 379, 380, 381, 382, 384, 385, 391, 395, 396, 397, 398, 400], "to_torch": [0, 4, 254, 385, 394, 395, 396, 397, 398, 400], "to_devic": [0, 33, 34, 70, 71, 82, 90, 94, 131, 163, 164, 165, 166, 167, 176, 190, 222, 226, 236, 247, 256, 257, 258, 260, 275, 276, 277, 299, 333, 360, 361, 397], "from_devic": 0, "to_layout": [0, 82, 132, 362, 391, 397, 398], "dump_tensor": 0, "load_tensor": 0, "dealloc": [0, 6, 226, 277, 391, 397, 400], "realloc": [0, 226], "to_memory_config": [0, 304, 306, 391], "creation": [0, 16, 35, 96, 97, 132, 133, 134, 250, 251, 383, 384, 391, 392, 396], "arang": [0, 395], "empti": [0, 4, 6, 9, 400], "empty_lik": 0, "zero": [0, 6, 68, 72, 73, 74, 87, 112, 121, 134, 221, 247, 256, 265, 266, 267, 268, 273, 278, 323, 333, 391, 394, 395, 400], "zeros_lik": 0, "ones": [0, 91, 127, 333, 391, 395], "ones_lik": 0, "full": [0, 6, 269, 386, 390, 391, 392, 399, 400], "full_lik": 0, "matrix": [0, 3, 6, 9, 11, 31, 94, 190, 222, 223, 333, 391, 393, 395, 399, 400], "multipl": [0, 3, 4, 6, 11, 12, 31, 66, 82, 120, 133, 139, 144, 178, 222, 223, 233, 250, 265, 266, 267, 268, 282, 333, 346, 360, 363, 383, 388, 390, 395, 399], "matmul": [0, 9, 10, 11, 12, 31, 190, 223, 333, 395, 397, 399], "linear": [0, 223, 326, 385, 396, 397, 398], "matmul_batched_weight": 0, "addmm": 0, "sparse_matmul": 0, "matmulmulticorereuseprogramconfig": 0, "compute_with_storage_grid_s": [0, 4, 9, 11, 12, 16, 304, 305, 306, 325], "from_json": [0, 9, 10, 11, 12], "in0_block_w": [0, 9, 10, 11, 12], "out_subblock_h": [0, 9, 11, 12], "out_subblock_w": [0, 9, 11, 12], "per_core_m": [0, 9, 10, 11, 12], "per_core_n": [0, 9, 10, 11, 12], "to_json": [0, 9, 10, 11, 12], "matmulmulticorereusemulticastprogramconfig": 0, "fuse_batch": [0, 9, 11], "fused_activ": [0, 9, 10, 11], "out_block_h": [0, 9, 11], "out_block_w": [0, 9, 11], "transpose_mcast": [0, 11], "matmulmulticorereusemulticast1dprogramconfig": 0, "gather_in0": [0, 9], "hop_cor": [0, 9], "mcast_in0": [0, 9], "num_global_cb_receiv": [0, 9], "untilize_out": [0, 9], "matmulmulticorereusemulticastdramshardedprogramconfig": 0, "pointwis": 0, "unari": [0, 4, 17, 19, 21, 32, 38, 40, 43, 47, 53, 57, 58, 60, 62, 64, 75, 77, 83, 85, 92, 100, 101, 103, 105, 107, 108, 115, 117, 122, 129, 139, 140, 142, 144, 148, 149, 151, 153, 155, 157, 160, 162, 169, 170, 171, 172, 173, 183, 187, 188, 192, 193, 195, 197, 200, 208, 209, 214, 219, 232, 238, 243, 246, 248, 249, 259, 271, 273, 274, 278, 282, 283, 284, 287, 288, 296, 298, 300, 308, 311, 312, 314, 316, 317, 319, 321, 326, 328, 330, 334, 336, 346, 347, 349, 351, 353, 355, 370, 371, 372, 374], "ab": [0, 18], "aco": [0, 20], "acosh": [0, 22], "asin": [0, 39], "asinh": [0, 41], "atan": [0, 46], "atanh": [0, 48], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 59, 226], "celu": [0, 61], "clamp": [0, 63], "clip": [0, 65], "co": 0, "cosh": [0, 78], "deg2rad": [0, 84], "digamma": [0, 86], "experiment": [0, 6, 304, 386], "dropout": 0, "gelu_bw": 0, "elu": [0, 93], "eqz": 0, "erf": [0, 102], "erfc": [0, 104], "erfinv": [0, 106], "exp": [0, 374, 400], "exp2": [0, 109], "expm1": [0, 116], "fill": [0, 118, 120, 121, 133, 134, 250, 251, 291, 323, 383, 384, 390, 393, 395], "floor": [0, 87, 88, 123, 124, 273, 274], "frac": [0, 44, 49, 87, 130, 145, 177, 324, 325], "geglu": 0, "gelu": [0, 6, 11, 113, 139, 141, 385], "glu": 0, "gez": 0, "gtz": 0, "hardshrink": [0, 150, 184], "hardsigmoid": [0, 152], "hardswish": [0, 154], "hardtanh": [0, 156], "heavisid": 0, "i0": [0, 161], "ident": [0, 177, 306], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 184], "lez": 0, "lgamma": [0, 189], "log10": [0, 194], "log1p": [0, 196], "log2": [0, 198], "log_sigmoid": 0, "logical_not": [0, 209], "logical_not_": 0, "logit": [0, 215, 396, 398], "ltz": 0, "mish": [0, 6], "multigammaln": 0, "neg": [0, 244, 263], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 260], "prelu": 0, "rad2deg": [0, 272], "rdiv": [0, 274], "reciproc": [0, 279, 301, 391], "reglu": 0, "relu": [0, 6, 11, 23, 183, 240, 282, 286, 287, 288, 326, 344, 374, 396, 398], "relu_max": 0, "relu_min": 0, "relu6": [0, 285], "remaind": [0, 290], "round": [0, 10, 42, 87, 88, 273, 274, 297, 391], "rsqrt": 0, "selu": [0, 309], "sigmoid": [0, 6, 201, 313], "sigmoid_accur": 0, "sign": [0, 315], "signbit": 0, "silu": [0, 6, 318, 346, 400], "sin": [0, 320], "sinh": [0, 322], "softplu": [0, 6, 327], "softshrink": [0, 329], "softsign": [0, 331], "sqrt": [0, 6, 49, 145, 158, 177], "squar": [0, 6, 236, 295, 301, 335, 337, 338, 364, 365, 391], "swiglu": 0, "swish": 0, "tan": [0, 350], "tanh": [0, 6, 50, 113, 141, 352], "tanhshrink": [0, 354], "threshold": [0, 326, 327, 356], "tril": 0, "triu": 0, "trunc": [0, 87, 88, 273, 274], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 31, 167, 257, 276, 386], "angl": [0, 34], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 71], "polar": [0, 258], "alt_complex_rotate90": 0, "add": [0, 24, 254, 305, 306, 364, 365, 386, 388, 389, 392, 395, 397, 400], "addalpha": [0, 26], "subalpha": [0, 343], "multipli": [0, 6, 25, 27, 29, 31, 190, 222, 223, 237, 304, 305, 306, 333, 342, 377, 391, 400], "subtract": [0, 302, 303, 341, 369, 400], "div": 0, "div_no_nan": [0, 90], "floor_div": 0, "fmod": [0, 126], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 299], "rsub": 0, "ldexp": [0, 180], "logical_and": 0, "logical_or": 0, "logical_xor": 0, "bitwise_and": [0, 52, 55], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 205], "logaddexp2": [0, 204], "hypot": [0, 159], "xlogi": [0, 382], "squared_differ": [0, 339], "gt": 0, "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": 0, "le": 0, "eq": 0, "ne": 0, "isclos": 0, "nextaft": 0, "maximum": [0, 6, 36, 62, 63, 64, 65, 156, 225, 226], "minimum": [0, 4, 62, 63, 64, 65, 156, 230, 391], "outer": 0, "pow": 0, "polyv": 0, "scatter": 0, "atan2": [0, 45], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 27, 29, 185, 220, 379], "addcdiv": [0, 28], "addcmul": [0, 30], "mac": 0, "lerp": [0, 186], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 176, 236], "l1_loss": 0, "mse_loss": 0, "reduct": [0, 3, 6, 36, 80, 81, 176, 224, 228, 229, 236, 269, 307, 340, 345, 363, 378], "cumprod": 0, "max": [0, 62, 63, 64, 65, 155, 156, 226, 287, 398], "mean": [0, 6, 12, 31, 49, 145, 176, 177, 236, 295, 391, 397], "min": [0, 62, 63, 64, 65, 155, 156, 287, 288], "std": [0, 4, 224, 228, 229, 256, 310, 345, 363, 378, 398], "sum": [0, 81, 235, 307], "var": 0, "argmax": [0, 396, 398], "prod": [0, 79, 270], "topk": 0, "cumsum": 0, "movement": [0, 399], "concat": [0, 69, 389], "nonzero": 0, "pad": [0, 6, 66, 72, 73, 74, 94, 120, 127, 128, 132, 177, 226, 255, 256, 265, 266, 267, 268, 294, 295, 306, 323, 358, 360, 363, 391, 394, 398], "permut": [0, 226, 369, 394, 397, 398], "reshap": [0, 6, 226, 369, 394, 396, 397, 398], "repeat": [0, 3, 292, 293, 395], "repeat_interleav": 0, "tiliz": [0, 37, 49, 145, 397], "tilize_with_val_pad": 0, "fill_rm": [0, 119], "fill_ones_rm": 0, "until": [0, 9, 307, 362, 376], "untilize_with_unpad": 0, "indexed_fil": 0, "gather": 0, "sort": [0, 363], "normal": [0, 49, 145, 162, 177, 295, 304, 305, 306, 324, 325, 396, 398], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "softmax": [0, 14, 15, 16, 304, 305, 306, 325, 364, 365, 397], "scale_mask_softmax": 0, "softmax_in_plac": [0, 14, 16], "scale_mask_softmax_in_plac": [0, 304], "scale_causal_mask_hw_dims_softmax_in_plac": 0, "softmaxprogramconfig": [0, 304, 306, 325, 364, 365], "softmaxdefaultprogramconfig": [0, 304, 306, 325, 364, 365], "softmaxshardedmulticoreprogramconfig": [0, 304, 306, 325], "block_w": [0, 16, 304, 306, 325], "moreh": [0, 235], "moreh_sum": 0, "transform": [0, 3, 190, 257, 304, 385, 396, 397, 398], "split_query_key_value_and_split_head": [0, 397], "concatenate_head": [0, 397], "attention_softmax": 0, "attention_softmax_": [0, 397], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 3], "embed": [0, 95, 114], "convolut": [0, 3, 68, 72, 73, 74, 111, 226, 265, 266, 267, 268, 392], "conv1d": [0, 6], "conv2d": [0, 6, 7, 74, 265, 266, 267, 268, 394, 398], "conv3d": 0, "conv_transpose2d": [0, 6], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 72, 73, 74, 265, 266, 267, 268, 394, 398], "act_block_h_overrid": [0, 6, 398], "act_block_w_div": [0, 6, 398], "activ": [0, 6, 9, 10, 11, 23, 98, 136, 137, 146, 156, 178, 179, 181, 190, 202, 203, 206, 210, 212, 217, 222, 223, 227, 231, 240, 241, 302, 338, 344, 381, 385, 388, 392, 396, 398, 399], "core_grid": [0, 6, 31, 79, 145, 190, 222, 223, 333, 385, 397, 398], "deallocate_activ": [0, 6, 226, 398], "enable_act_double_buff": [0, 6, 398], "enable_kernel_stride_fold": [0, 6, 398], "enable_split_read": [0, 6, 398], "enable_weights_double_buff": [0, 6, 398], "full_inner_dim": [0, 6], "in_plac": [0, 6, 226, 398], "output_layout": [0, 6, 145, 398], "override_sharding_config": [0, 6, 398], "reallocate_halo_output": [0, 6, 226, 398], "reshard_if_not_optim": [0, 6, 398], "shard_layout": [0, 6, 398], "transpose_shard": [0, 6, 398], "weights_dtyp": [0, 6, 265, 266, 394, 398], "conv2dsliceconfig": 0, "slicetypeenum": [0, 7], "sliceheight": [0, 7], "slicewidth": [0, 7], "name": [0, 4, 7, 37, 91, 191, 233, 234, 367, 385, 389, 390, 396, 398, 399, 400], "valu": [0, 6, 7, 9, 11, 12, 25, 26, 27, 28, 29, 30, 35, 36, 49, 61, 62, 63, 64, 65, 68, 70, 80, 81, 85, 90, 93, 96, 97, 117, 119, 120, 127, 132, 133, 134, 135, 143, 149, 150, 155, 156, 157, 165, 166, 167, 168, 174, 175, 184, 188, 216, 224, 226, 228, 229, 239, 250, 251, 252, 254, 256, 259, 262, 263, 273, 287, 288, 294, 298, 299, 307, 308, 323, 326, 327, 328, 329, 332, 333, 340, 342, 343, 345, 355, 356, 358, 369, 370, 371, 378, 383, 384, 386, 391, 393, 395, 396, 397, 398, 399, 400], "num_slic": [0, 7], "slice_typ": [0, 7], "pool": [0, 143, 226, 377, 392], "global_avg_pool2d": 0, "max_pool2d": [0, 398], "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 84, 272, 392, 396, 398], "model_preprocess": [0, 385, 397], "preprocess_model": 0, "preprocess_model_paramet": [0, 385], "report": [0, 73, 222, 386, 392, 396, 400], "set_printopt": [0, 400], "register_pre_operation_hook": [0, 400], "register_post_operation_hook": [0, 400], "tutori": [0, 387, 393, 394, 395, 396, 397, 398, 399], "import": [0, 4, 9, 80, 81, 135, 226, 307, 332, 385, 386, 388, 390, 391, 392, 397, 400], "open": [0, 3, 221, 252, 392, 397, 399, 400], "tenstorr": [0, 2, 4, 6, 385, 386, 387, 388, 392, 399, 400], "addit": [0, 10, 135, 177, 222, 306, 307, 325, 332, 385, 388, 392, 395, 398], "close": [0, 67, 221, 388, 392], "output": [0, 4, 6, 7, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 391, 392, 399, 400], "more": [0, 1, 3, 4, 6, 9, 11, 12, 18, 28, 49, 50, 73, 88, 126, 141, 145, 159, 177, 194, 196, 198, 199, 201, 204, 205, 215, 216, 263, 270, 274, 278, 279, 290, 295, 325, 327, 335, 382, 387, 388, 390, 391, 392, 393, 394, 397, 398, 399], "necessari": [0, 66, 386, 392, 398], "host": [0, 72, 73, 131, 254, 323, 348, 388, 390, 391, 392, 394], "tile": [0, 6, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 390, 391, 392, 393, 396, 398, 399], "creat": [0, 4, 6, 35, 66, 79, 80, 81, 96, 97, 117, 133, 134, 135, 250, 251, 306, 332, 333, 383, 384, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399], "nativ": [0, 3, 391, 392], "base": [0, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 49, 68, 79, 135, 222, 255, 333, 391, 392, 397], "arithmet": [0, 392], "simul": [0, 392, 394, 396, 397, 398, 399], "broadcast": [0, 9, 11, 23, 24, 25, 88, 98, 135, 137, 146, 179, 181, 190, 202, 203, 206, 210, 212, 217, 222, 240, 241, 293, 304, 305, 306, 338, 341, 342, 344, 367, 381, 392, 394, 396, 398, 400], "row": [0, 6, 9, 59, 111, 118, 120, 121, 123, 130, 145, 247, 297, 315, 373, 390, 391, 392, 399], "vector": [0, 4, 222, 223, 261, 311, 392, 396], "expans": [0, 392], "The": [0, 3, 4, 6, 7, 8, 11, 13, 16, 32, 35, 36, 37, 60, 66, 67, 72, 73, 74, 82, 91, 92, 94, 95, 96, 97, 113, 117, 120, 132, 133, 134, 135, 143, 145, 157, 183, 190, 221, 222, 224, 226, 228, 229, 239, 250, 251, 252, 255, 265, 266, 267, 268, 269, 280, 281, 287, 288, 291, 304, 305, 306, 307, 324, 325, 332, 340, 345, 348, 359, 362, 363, 367, 368, 377, 378, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 399, 400], "mlp": [0, 392], "infer": [0, 49, 73, 333, 386, 390, 392], "load": [0, 3, 9, 11, 191, 392, 399], "mnist": [0, 392], "test": [0, 4, 385, 386, 389, 390, 392, 395, 397, 399, 400], "pretrain": [0, 392, 398], "weight": [0, 6, 49, 72, 73, 74, 94, 95, 111, 145, 185, 190, 264, 265, 266, 267, 268, 333, 385, 392, 394], "accuraci": [0, 386, 392, 398], "track": [0, 392, 398], "loop": [0, 392], "flatten": [0, 392, 394, 398], "head": [0, 364, 365, 366, 367, 369, 392], "attent": [0, 304, 305, 306, 364, 365, 367, 368, 369, 392], "write": [0, 1, 4, 31, 79, 190, 222, 223, 333, 385, 391, 392], "initi": [0, 97, 233, 234, 385, 392, 393, 394, 395, 396, 399], "first": [0, 9, 31, 132, 139, 144, 190, 222, 223, 247, 254, 282, 333, 346, 385, 388, 390, 392, 396, 398, 399, 400], "iter": [0, 392, 396], "subsequ": [0, 9, 392, 396, 400], "optim": [0, 6, 9, 10, 11, 16, 304, 351, 353, 391, 392, 398, 399], "version": [0, 7, 62, 145, 233, 234, 304, 368, 388, 390, 392, 394, 395, 396, 398, 399], "process": [0, 9, 10, 11, 12, 16, 68, 80, 81, 145, 265, 266, 304, 305, 306, 333, 390, 392, 396, 398], "paramet": [0, 3, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 392, 398], "check": [0, 2, 4, 222, 386, 388, 392, 396, 398], "match": [0, 6, 66, 80, 81, 177, 222, 224, 228, 229, 233, 234, 294, 295, 340, 345, 378, 391, 392, 393, 395, 396], "origin": [0, 224, 228, 229, 233, 234, 255, 269, 332, 340, 345, 378, 386, 389, 392], "implement": [0, 6, 9, 11, 72, 222, 254, 307, 367, 368, 369, 385, 389, 390, 392, 399], "seed": [0, 112, 392], "reproduc": [0, 392], "forward": [0, 385, 392], "method": [0, 4, 277, 351, 353, 392], "input": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400], "simpl": [0, 388, 392, 393, 394, 395, 396], "cnn": [0, 392, 394], "cifar": [0, 392], "dataset": [0, 391, 392, 396, 399], "defin": [0, 4, 9, 37, 324, 389, 391, 392], "stage": [0, 392, 399], "sampl": [0, 392, 396], "profil": [0, 162, 310, 392, 400], "gener": [0, 6, 11, 94, 112, 120, 222, 257, 304, 386, 390, 392, 394, 395, 396, 397, 398], "perform": [0, 6, 9, 10, 11, 12, 16, 18, 20, 22, 24, 26, 28, 30, 33, 34, 39, 41, 42, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 69, 71, 76, 77, 78, 80, 81, 84, 85, 86, 88, 90, 92, 93, 99, 102, 104, 106, 109, 110, 116, 118, 121, 123, 125, 126, 130, 135, 138, 139, 141, 143, 144, 147, 149, 150, 152, 154, 155, 156, 159, 161, 162, 163, 164, 180, 182, 184, 186, 188, 189, 194, 196, 198, 199, 201, 204, 205, 209, 214, 215, 216, 218, 221, 222, 223, 225, 226, 230, 237, 238, 239, 242, 244, 248, 249, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 279, 282, 285, 286, 289, 290, 292, 297, 298, 299, 301, 303, 304, 305, 306, 308, 309, 311, 313, 315, 318, 320, 321, 322, 323, 327, 328, 329, 331, 333, 335, 337, 339, 341, 343, 346, 347, 350, 351, 352, 353, 354, 355, 356, 363, 370, 371, 373, 380, 382, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398], "result": [0, 12, 14, 16, 31, 35, 37, 49, 120, 132, 134, 135, 162, 190, 222, 223, 226, 251, 265, 266, 267, 268, 269, 273, 278, 324, 325, 333, 351, 353, 384, 390, 391, 392, 393, 394, 395, 396, 398], "analysi": [0, 390, 392], "upload": [0, 390, 392], "tab": [0, 390, 392], "recap": [0, 392], "onboard": 0, "new": [0, 97, 134, 251, 291, 294, 384, 386, 388, 390], "pytorch": [0, 3, 72, 73, 74, 222, 265, 266, 267, 268, 332, 363, 367, 369, 394, 395, 396, 398, 400], "rewrit": 0, "switch": [0, 254, 326], "ad": [0, 31, 72, 73, 74, 190, 223, 265, 266, 267, 268, 389], "faq": 0, "need": [0, 1, 2, 7, 9, 11, 16, 31, 190, 222, 223, 333, 386, 390, 391, 394, 397, 398, 399, 400], "bind": [0, 394, 395, 396, 397, 398], "golden": [0, 385, 399, 400], "perf": [0, 6, 386, 399], "header": 0, "profile_thi": 0, "descript": [0, 119, 120, 389], "uplift": 0, "bug": 0, "featur": [0, 3, 6, 9, 304, 388, 389, 399, 400], "propos": [0, 389], "request": [0, 360, 389], "troubleshoot": [0, 386], "tip": 0, "commun": [0, 9, 11, 388], "develop": [0, 3, 6, 387, 388, 389, 390, 392, 393, 399], "index": [0, 135, 174, 175, 307, 332, 368, 390, 398], "modul": [0, 4, 74, 233, 234, 385, 396, 398, 399], "search": [0, 399], "page": [0, 388, 399], "If": [1, 2, 4, 6, 7, 9, 10, 11, 31, 36, 66, 72, 73, 74, 79, 80, 81, 135, 177, 190, 222, 223, 224, 228, 229, 233, 234, 252, 254, 256, 269, 270, 295, 305, 323, 324, 332, 333, 340, 345, 348, 362, 363, 368, 369, 378, 387, 388, 389, 390, 391, 398, 399, 400], "would": [1, 325, 389, 390, 391, 398], "like": [1, 31, 121, 307, 326, 385, 390, 391, 393, 394, 398, 399, 400], "thi": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 31, 36, 49, 66, 68, 72, 73, 74, 95, 113, 114, 117, 127, 128, 143, 162, 180, 226, 255, 265, 266, 267, 268, 269, 287, 288, 304, 305, 306, 307, 325, 326, 332, 367, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "project": [1, 2, 3, 387, 399], "pleas": [1, 2, 222, 386, 387, 389, 400], "review": [1, 387, 389, 395], "standard": [1, 2, 14, 288, 325, 386, 387, 388, 398], "gain": 1, "access": [1, 2, 3, 9, 10, 11, 12, 388], "read": [1, 79, 387, 391], "section": [1, 2, 386, 391, 392, 399], "detail": [1, 4, 18, 28, 49, 50, 88, 126, 141, 145, 159, 177, 194, 196, 198, 199, 201, 204, 205, 215, 216, 263, 270, 274, 279, 290, 295, 327, 335, 382, 387, 398, 399, 400], "contact": 1, "u": [1, 389, 396], "have": [2, 4, 11, 12, 80, 81, 82, 95, 128, 135, 177, 185, 222, 265, 266, 269, 273, 304, 307, 357, 358, 363, 375, 376, 386, 388, 390, 391, 398, 399], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 6, 222, 326, 386, 389, 390, 394], "file": [2, 4, 37, 91, 191, 386, 388, 390, 393, 394, 395, 396, 398, 399, 400], "github": [2, 386, 387, 388, 399], "can": [2, 3, 4, 6, 7, 9, 10, 11, 12, 16, 35, 50, 63, 64, 65, 72, 73, 74, 87, 88, 97, 134, 141, 145, 222, 251, 254, 265, 266, 267, 268, 273, 274, 280, 281, 326, 348, 384, 385, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "out": [2, 4, 6, 31, 80, 81, 112, 135, 288, 323, 332, 363, 393, 394, 397, 398], "relev": [2, 386], "ever": 2, "help": [2, 389, 392, 399], "we": [2, 6, 128, 132, 222, 304, 362, 386, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400], "offici": [2, 399], "discord": 2, "channel": [2, 6, 49, 72, 73, 74, 119, 120, 143, 226, 265, 266, 267, 268, 377, 390, 394, 398], "repres": [2, 3, 390, 391, 398], "both": [2, 6, 9, 10, 11, 12, 24, 72, 73, 74, 80, 81, 222, 226, 262, 265, 266, 267, 268, 325, 333, 385, 386, 390, 391, 397, 399], "metal": [2, 3, 387, 388, 392, 394, 395, 396, 397, 398, 399], "join": 2, "discuss": [2, 386], "board": 2, "member": [2, 7], "bounc": 2, "idea": [2, 386], "off": [2, 287, 296, 385, 391], "each": [2, 7, 9, 10, 11, 12, 49, 68, 120, 135, 143, 226, 254, 291, 293, 323, 333, 388, 390, 391, 392, 396, 398, 399], "other": [2, 4, 6, 9, 135, 222, 385, 386, 387, 391, 394, 395, 398, 399, 400], "refer": [2, 3, 18, 28, 31, 50, 73, 82, 88, 97, 117, 126, 141, 159, 194, 196, 198, 199, 201, 204, 205, 215, 216, 222, 239, 263, 270, 274, 279, 290, 327, 335, 382, 388, 389, 391, 398, 399, 400], "code": [2, 4, 280, 281, 332, 363, 369, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 400], "conduct": 2, "when": [2, 4, 6, 7, 8, 9, 11, 13, 49, 68, 72, 73, 74, 79, 88, 114, 145, 159, 206, 221, 222, 226, 227, 233, 256, 262, 269, 274, 351, 353, 360, 386, 389, 391, 397, 400], "interact": [2, 399], "neural": [3, 394, 396, 398, 399], "network": [3, 396, 398, 399], "built": [3, 277, 388, 398], "design": [3, 16, 304, 392, 393, 399], "feel": [3, 399], "familiar": 3, "experienc": 3, "kei": [3, 369, 385, 391, 397, 398], "includ": [3, 4, 49, 66, 386, 391, 395, 396, 398, 399], "than": [3, 6, 7, 68, 85, 119, 120, 137, 138, 146, 147, 181, 182, 188, 217, 218, 239, 269, 304, 325, 390, 397, 400], "200": 3, "fuse": [3, 6, 9, 10, 11, 305, 306, 385, 397], "A": [3, 4, 6, 35, 133, 134, 135, 222, 224, 228, 229, 250, 251, 326, 340, 345, 368, 378, 383, 384, 386, 388, 389, 391, 399], "differ": [3, 6, 15, 74, 222, 311, 333, 338, 351, 353, 388, 391, 395, 396, 398, 400], "wai": [3, 233, 234, 385, 388, 392], "distribut": [3, 9, 10, 11, 12, 31, 79, 177, 190, 222, 223, 333, 391, 399], "abil": [3, 399], "custom": [3, 4, 280, 281, 388, 394, 396, 397, 398, 399], "mesh": [3, 132, 362, 388, 394, 395, 396, 397, 398], "tool": [3, 388, 390, 399], "comput": [3, 4, 9, 10, 11, 12, 16, 25, 27, 29, 31, 44, 49, 66, 72, 73, 74, 80, 81, 87, 89, 111, 124, 135, 136, 143, 145, 158, 168, 177, 178, 179, 185, 190, 202, 203, 206, 207, 210, 211, 212, 213, 220, 222, 223, 224, 227, 228, 229, 231, 245, 253, 261, 265, 266, 267, 268, 269, 295, 304, 305, 306, 324, 325, 333, 338, 340, 342, 345, 364, 365, 368, 369, 378, 379, 381, 390, 395, 396, 398, 399], "util": [3, 10, 391, 396, 398, 399], "significantli": [3, 6, 9, 16, 397], "speed": 3, "comparison": [3, 168, 389], "mode": [3, 42, 49, 50, 88, 101, 103, 107, 140, 141, 176, 192, 193, 195, 197, 226, 236, 274, 300, 311, 351, 353, 394, 395, 396, 397, 398, 399], "long": [3, 389], "sequenc": [3, 4, 305, 306, 333, 367, 368], "against": [3, 135, 386, 399, 400], "known": [3, 74], "document": [4, 386, 388, 389, 399], "meant": 4, "contributor": 4, "Not": [4, 242, 385, 400], "mai": [4, 6, 11, 12, 82, 88, 159, 180, 222, 274, 278, 306, 325, 351, 353, 359, 385, 391, 394, 395, 396, 397, 398, 400], "grayskul": [4, 37, 385, 400], "wormhol": [4, 37, 385, 388, 400], "take": [4, 6, 366, 386, 387, 391, 394, 397, 398], "one": [4, 9, 63, 64, 65, 135, 269, 387, 391, 392, 395], "produc": [4, 177, 278, 351, 353, 386, 396], "call": [4, 6, 9, 132, 280, 281, 362, 389, 390, 391, 397, 399, 400], "optiona": 4, "b": [4, 114, 223, 293, 367, 368, 388, 394, 398], "composit": 4, "struct": 4, "specifi": [4, 6, 9, 10, 11, 12, 31, 35, 66, 80, 81, 91, 96, 97, 133, 134, 135, 190, 222, 223, 224, 228, 229, 233, 234, 250, 251, 254, 255, 256, 269, 291, 307, 324, 332, 333, 340, 345, 348, 358, 367, 368, 378, 383, 384, 385, 388, 390, 391, 397], "how": [4, 7, 9, 10, 11, 12, 386, 390, 391, 393, 395, 396, 397, 398, 399, 400], "simpli": [4, 360, 399], "ttnn": [4, 388, 389, 391, 392, 393, 394, 395, 396, 398, 400], "register_oper": 4, "exist": [4, 252, 388, 390, 396, 398], "bind_registered_oper": 4, "auto": 4, "attach": [4, 233, 234], "attach_golden_funct": 4, "let": [4, 391, 393, 394, 395, 396, 397, 398], "": [4, 6, 16, 66, 72, 73, 74, 145, 177, 224, 228, 229, 233, 234, 295, 305, 307, 340, 345, 367, 368, 378, 386, 388, 391, 395, 396, 397, 398, 399], "just": [4, 265, 266, 267, 268, 397, 398], "copi": [4, 66, 131, 162, 359, 399], "In": [4, 9, 112, 222, 294, 360, 365, 385, 390, 391, 394, 396, 398, 399], "order": [4, 79, 222, 260, 303, 332, 363, 390, 391, 397, 399, 400], "follow": [4, 6, 36, 74, 120, 222, 224, 228, 229, 269, 294, 304, 305, 306, 332, 340, 345, 363, 378, 385, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400], "directori": [4, 388, 392, 399], "structur": [4, 6, 7, 385, 396, 399], "shown": [4, 391, 393, 394, 395, 396, 397, 398], "below": [4, 222, 386, 390, 391, 393, 394, 395, 396, 397, 398], "cpp": [4, 394, 395, 396, 397, 398, 399], "categori": [4, 399], "operation_nam": 4, "_device_oper": 4, "hpp": 4, "program_factory_0": 4, "_program_factori": 4, "mani": [4, 9, 10, 11, 12, 385], "factori": 4, "But": 4, "concret": [4, 222], "found": [4, 385, 396, 398, 399], "example_device_oper": 4, "spdx": [4, 400], "filecopyrighttext": [4, 400], "2023": 4, "inc": [4, 400], "licens": [4, 400], "identifi": [4, 399, 400], "apach": [4, 400], "0": [4, 6, 7, 13, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 74, 75, 80, 81, 82, 83, 85, 87, 88, 94, 95, 96, 97, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 120, 122, 127, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 146, 148, 149, 150, 151, 153, 157, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 184, 185, 187, 188, 191, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 214, 216, 217, 219, 221, 224, 226, 227, 228, 229, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 250, 251, 252, 254, 256, 257, 261, 262, 263, 269, 270, 271, 273, 274, 275, 277, 278, 283, 284, 287, 288, 293, 294, 296, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 314, 316, 317, 318, 319, 323, 326, 328, 329, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400], "pragma": 4, "onc": [4, 265, 266, 267, 268, 396, 399], "variant": [4, 145], "device_oper": 4, "decor": [4, 389], "namespac": 4, "exampledeviceoper": 4, "attribut": [4, 385, 390, 391], "store": [4, 6, 10, 31, 49, 135, 390, 391, 397], "variabl": [4, 388, 399, 400], "aren": [4, 8], "t": [4, 8, 162, 222, 233, 234, 390, 391, 397], "operation_attributes_t": 4, "bool": [4, 24, 26, 36, 42, 49, 69, 72, 73, 74, 79, 80, 81, 82, 87, 88, 101, 103, 107, 135, 140, 145, 168, 176, 190, 192, 193, 195, 197, 222, 223, 224, 226, 228, 229, 233, 234, 236, 237, 254, 267, 268, 269, 300, 303, 304, 305, 306, 311, 324, 325, 332, 333, 340, 341, 343, 345, 357, 358, 363, 364, 365, 367, 368, 369, 375, 376, 378, 380, 398], "int": [4, 16, 17, 19, 21, 23, 24, 25, 26, 31, 32, 35, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 72, 73, 74, 75, 79, 80, 81, 83, 87, 88, 94, 95, 96, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 148, 151, 153, 157, 160, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 183, 187, 190, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 221, 222, 223, 226, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 251, 252, 254, 255, 256, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 278, 282, 283, 284, 287, 288, 292, 296, 300, 302, 303, 311, 312, 314, 316, 317, 318, 319, 323, 324, 326, 330, 332, 333, 334, 335, 336, 338, 341, 342, 343, 344, 346, 348, 349, 351, 352, 353, 357, 358, 362, 363, 364, 365, 367, 368, 369, 372, 374, 375, 376, 377, 379, 380, 381, 384, 391, 394, 398], "some_other_attribut": 4, "argument": [4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 391], "pass": [4, 6, 9, 72, 73, 113, 114, 120, 280, 281, 369, 385, 389, 391, 394, 396, 398], "don": [4, 222], "thei": [4, 7, 222, 386, 391, 397], "tensor_args_t": 4, "const": [4, 310], "input_tensor": [4, 17, 18, 19, 20, 21, 22, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 129, 130, 135, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 182, 183, 184, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 214, 215, 216, 218, 219, 226, 232, 238, 239, 242, 243, 244, 246, 247, 248, 249, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 384, 394, 398, 400], "howev": [4, 254], "show": [4, 222, 391, 397, 399], "els": [4, 87, 396, 398], "done": [4, 6, 386, 388, 390], "io_tensor": 4, "optional_output_tensor": [4, 31, 190, 222, 223, 333], "vector_of_tensor": 4, "tupl": [4, 72, 73, 74, 79, 226, 254, 265, 266, 267, 268, 332, 363, 369, 394, 398], "tuple_of_tensor": 4, "vector_of_optional_tensor": 4, "some_crazy_tuple_of_tensor": 4, "return": [4, 8, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 394, 395, 397, 398], "spec": [4, 79, 132, 177], "singl": [4, 223, 224, 228, 229, 340, 345, 368, 378, 385, 386, 389, 390, 391], "tensorspec": [4, 132], "spec_return_value_t": 4, "tensor_return_value_t": 4, "note": [4, 6, 71, 135, 164, 222, 224, 228, 229, 250, 251, 276, 294, 340, 345, 378, 388, 390, 391, 397, 399, 400], "should": [4, 6, 9, 11, 31, 74, 139, 144, 162, 168, 185, 222, 226, 247, 254, 262, 273, 282, 304, 346, 386, 389, 390, 393, 397, 398, 399], "same": [4, 6, 23, 25, 27, 29, 44, 51, 52, 54, 55, 56, 72, 73, 74, 80, 81, 87, 89, 95, 97, 98, 99, 117, 119, 124, 134, 135, 136, 137, 138, 146, 147, 158, 162, 168, 178, 179, 181, 182, 185, 190, 202, 203, 206, 207, 210, 211, 212, 213, 217, 218, 220, 222, 227, 231, 233, 234, 240, 241, 242, 245, 247, 251, 253, 261, 262, 265, 266, 267, 268, 269, 302, 304, 306, 307, 325, 338, 342, 344, 360, 363, 367, 379, 381, 384, 388, 390, 391, 395, 396, 397, 399], "pattern": [4, 9, 10, 11, 68, 233, 304, 333, 389, 396, 398], "e": [4, 11, 36, 177, 222, 224, 228, 229, 269, 324, 325, 340, 345, 378, 388, 390, 391, 396, 398, 399, 400], "singlecor": 4, "share": [4, 9, 10, 11, 12, 391], "between": [4, 35, 49, 72, 73, 74, 222, 265, 266, 267, 268, 361, 398, 399], "override_runtime_argu": 4, "shared_variables_t": 4, "tt_metal": [4, 348, 377, 388, 390, 399], "kernelhandl": 4, "unary_reader_kernel_id": 4, "unary_writer_kernel_id": 4, "cached_program_t": 4, "cachedprogram": 4, "static": 4, "operation_attribut": 4, "tensor_arg": 4, "tensor_return_valu": 4, "void": 4, "cached_program": 4, "multicor": [4, 254, 357, 358, 363, 375, 376], "size_t": 4, "num_cor": [4, 6], "num_cores_i": 4, "program_factory_t": 4, "mandatori": 4, "select": [4, 6, 14, 49, 389, 396], "arg": [4, 120, 145, 224, 228, 229, 256, 265, 266, 267, 268, 280, 281, 340, 345, 348, 378, 398, 400], "select_program_factori": 4, "valid": [4, 6, 119, 120, 222, 233, 234, 363, 385, 386, 390, 391], "usual": 4, "validate_on_program_cache_miss": 4, "reus": [4, 12, 265, 266, 267, 268, 306, 399], "less": [4, 6, 181, 182, 217, 218, 269, 390, 400], "validate_on_program_cache_hit": 4, "compute_output_spec": 4, "create_output_tensor": 4, "map": [4, 37], "abl": 4, "prim": 4, "after": [4, 6, 16, 111, 226, 254, 280, 389, 390, 391, 394, 396, 398, 399, 400], "op": [4, 6, 7, 8, 9, 36, 72, 73, 74, 79, 95, 145, 226, 348, 367, 368, 374, 389, 390, 394, 399, 400], "keep": [4, 36, 224, 228, 229, 269, 340, 345, 378, 385, 391], "mind": [4, 397], "overload": [4, 348], "queue_id": [4, 17, 19, 21, 23, 24, 25, 26, 32, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 74, 75, 83, 87, 88, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 129, 133, 134, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 165, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 226, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 251, 254, 256, 262, 263, 271, 273, 278, 283, 284, 287, 288, 294, 296, 300, 301, 302, 303, 311, 312, 314, 316, 317, 318, 319, 323, 326, 330, 334, 335, 336, 338, 341, 342, 343, 344, 349, 351, 352, 353, 357, 358, 363, 367, 368, 372, 374, 375, 376, 379, 380, 381, 384], "automat": [4, 14, 221, 360, 386, 388, 390, 391], "primit": 4, "so": [4, 6, 120, 385], "also": [4, 6, 31, 72, 73, 74, 80, 81, 239, 304, 386, 390, 391, 392, 399], "invok": 4, "case": [4, 14, 87, 132, 168, 222, 245, 264, 304, 360, 385, 386, 391, 398, 399, 400], "hash": [4, 233, 234, 390], "stl": 4, "hash_t": 4, "compute_program_hash": 4, "create_op_performance_model": 4, "opperformancemodel": 4, "make": [4, 233, 234, 325, 326, 363, 369, 385, 391, 399, 400], "avail": [4, 6, 12, 377, 392, 399, 400], "constexpr": 4, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 4, "true": [4, 6, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 391, 396, 398, 399, 400], "logical_shap": 4, "tensorlayout": 4, "dtype": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 391, 393, 394, 395, 396, 397, 398, 400], "pageconfig": 4, "memoryconfig": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "output_spec": 4, "create_device_tensor": 4, "42": [4, 396], "single_core_program_factori": 4, "work_split": 4, "tensor_accessor_arg": 4, "output_tensor": [4, 17, 19, 21, 23, 25, 32, 36, 38, 40, 43, 47, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 75, 80, 83, 87, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 112, 115, 117, 118, 122, 128, 129, 133, 134, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 227, 231, 232, 236, 240, 241, 243, 244, 246, 251, 262, 263, 271, 273, 278, 283, 284, 287, 288, 296, 300, 301, 302, 311, 312, 314, 316, 317, 318, 319, 325, 326, 330, 334, 335, 336, 338, 342, 344, 349, 351, 352, 353, 363, 372, 374, 379, 380, 381, 384, 400], "src_buffer": 4, "dst_buffer": 4, "dataformat": 4, "cb_data_format": 4, "datatype_to_dataformat_convert": 4, "uint32_t": [4, 112], "single_tile_s": 4, "tiles": 4, "cb_data_format_output": 4, "single_tile_size_output": 4, "num_til": 4, "physical_volum": 4, "constant": [4, 49, 145, 177, 391], "tile_hw": 4, "corecoord": [4, 16, 304, 306], "y": [4, 11, 12, 44, 257, 304, 305, 306, 390, 391, 397], "all_cor": 4, "core_group_1": 4, "core_group_2": 4, "num_tiles_per_core_group_1": 4, "num_tiles_per_core_group_2": 4, "split_work_to_cor": 4, "src0_cb_index": 4, "cbindex": 4, "c_0": 4, "num_input_til": 4, "circularbufferconfig": 4, "cb_src0_config": 4, "set_page_s": 4, "createcircularbuff": 4, "output_cb_index": 4, "c_2": 4, "num_output_til": 4, "cb_output_config": 4, "reader_compile_time_arg": 4, "tensoraccessorarg": 4, "append_to": 4, "writer_compile_time_arg": 4, "createkernel": 4, "eltwis": [4, 125, 264, 289, 393], "kernel": [4, 6, 31, 49, 66, 72, 73, 74, 111, 113, 145, 190, 222, 223, 224, 226, 228, 229, 265, 266, 267, 268, 304, 305, 306, 324, 325, 333, 340, 345, 378, 388, 390, 394, 398, 399], "dataflow": 4, "reader_unary_interleaved_start_id": 4, "readerdatamovementconfig": 4, "writer_unary_interleaved_start_id": 4, "writerdatamovementconfig": 4, "compute_kernel_args_group_1": 4, "per_core_block_cnt": 4, "per_core_block_s": 4, "math_approx_mod": 4, "fals": [4, 6, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 396, 398, 399, 400], "eltwise_sfpu": 4, "computeconfig": 4, "math_fidel": 4, "mathfidel": 4, "hifi4": [4, 390], "compile_arg": 4, "rang": [4, 23, 35, 51, 52, 53, 54, 55, 56, 77, 119, 120, 136, 161, 178, 180, 195, 208, 227, 232, 238, 240, 259, 296, 298, 321, 344, 349, 350, 363, 391], "compute_kernel_args_group_2": 4, "num_tiles_written": 4, "num_tiles_per_cor": 4, "contain": [4, 6, 35, 36, 80, 81, 94, 135, 226, 278, 307, 333, 388, 391, 395, 398, 399], "tt_assert": 4, "setruntimearg": 4, "address": [4, 399], "move": [4, 6, 127, 128, 333, 386, 394, 397, 398], "shared_vari": 4, "runtime_arg": 4, "getruntimearg": 4, "multi_core_program_factori": 4, "idevic": [4, 265, 266, 348], "written": [4, 31, 174, 175, 190, 222, 223, 333, 397], "compositeexampleoper": 4, "composite_exampl": 4, "another_copi": 4, "_pybind": 4, "example_pybind": 4, "pybind": 4, "pybind_fwd": 4, "py": [4, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400], "pybind11": 4, "bind_example_oper": 4, "r": [4, 257, 388, 399], "doc": [4, 399], "expos": 4, "logic": [4, 206, 207, 210, 211, 213, 222, 233, 234], "self": [4, 9, 10, 11, 12, 385, 391], "correct": [4, 224, 228, 229, 340, 345, 378, 396, 398], "specif": [4, 6, 16, 36, 222, 252, 304, 332, 368, 386, 391, 392, 398, 399], "pybind_overload_t": 4, "decltyp": 4, "examples_pybind": 4, "py_modul": 4, "final": [4, 31, 222, 385, 386, 389, 396, 398, 399], "wherev": 4, "want": [4, 388, 400], "compar": [4, 98, 137, 146, 181, 217, 222, 241, 396, 398], "its": [4, 66, 74, 97, 227, 254, 323, 385, 386, 389, 390, 391, 396, 398, 400], "equival": [4, 332, 363, 369, 391, 392], "signatur": 4, "And": [4, 385, 391], "ignor": [4, 31], "kwarg": [4, 265, 266, 267, 268, 280, 281, 348, 400], "def": [4, 385, 394, 395, 397, 398, 400], "golden_funct": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "befor": [4, 6, 37, 80, 81, 254, 265, 266, 267, 268, 281, 305, 326, 386, 391], "some": [4, 333, 348, 388, 395, 400], "preprocess": [4, 6, 37, 72, 73, 74, 233, 234, 265, 266, 267, 268, 391, 398], "postprocess": 4, "pack": [4, 375, 376], "preprocess_golden_function_input": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "ttnn_input_tensor": 4, "postprocess_golden_function_output": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "torch_output_tensor": [4, 400], "becaus": [4, 391, 397], "wa": [4, 386, 390, 391], "class": [6, 7, 9, 10, 11, 12, 14, 15, 16, 385, 386, 390, 391, 396], "pybind11_object": [6, 7, 9, 10, 11, 12, 14, 15, 16, 391], "flag": [6, 388], "properti": [6, 7, 9, 10, 11, 12, 16, 391], "control": [6, 9, 11, 12, 16, 388], "size": [6, 7, 9, 11, 12, 16, 35, 72, 73, 74, 80, 81, 94, 95, 135, 222, 224, 226, 228, 229, 252, 264, 265, 266, 267, 268, 269, 306, 323, 340, 345, 367, 368, 369, 377, 378, 391, 393, 398, 400], "block": [6, 9, 10, 11, 12, 16, 72, 73, 74, 79, 221, 222, 226, 265, 266, 267, 268, 278, 306, 391], "height": [6, 7, 9, 11, 12, 16, 66, 68, 72, 73, 74, 79, 119, 120, 133, 143, 177, 222, 226, 250, 265, 266, 267, 268, 295, 304, 360, 383, 390, 391, 394, 398], "chunk": [6, 9, 12, 367, 368], "l1": [6, 7, 31, 79, 190, 222, 223, 252, 304, 306, 325, 333, 359, 361, 391, 394, 397, 398, 399], "divid": [6, 7, 11, 12, 88, 364, 365, 399], "among": 6, "further": 6, "subdivid": 6, "within": [6, 9, 11, 12, 35, 52, 55, 226, 386, 391, 399], "possibl": [6, 222, 362, 385], "which": [6, 9, 11, 31, 52, 55, 79, 80, 81, 133, 134, 135, 190, 222, 223, 226, 233, 234, 250, 251, 273, 323, 324, 332, 333, 367, 368, 383, 384, 385, 390, 391, 393, 394, 395, 396, 398, 399], "equal": [6, 98, 99, 137, 138, 168, 177, 181, 182, 241, 242, 305, 306, 332, 400], "output_matrix_height_per_cor": 6, "lead": 6, "larg": [6, 7, 11, 306, 326, 385, 391, 395], "temporari": 6, "circular": [6, 325, 399], "oom": 6, "must": [6, 10, 11, 12, 16, 32, 49, 72, 73, 80, 81, 95, 111, 135, 177, 239, 263, 265, 266, 269, 273, 294, 295, 304, 305, 306, 307, 323, 332, 357, 358, 359, 363, 375, 376, 388, 391, 399], "32": [6, 12, 16, 36, 66, 68, 69, 82, 111, 120, 131, 133, 139, 143, 144, 177, 190, 222, 247, 248, 249, 250, 253, 254, 256, 264, 270, 277, 282, 292, 293, 295, 306, 323, 324, 325, 346, 359, 360, 361, 363, 374, 383, 391, 393, 394, 395, 396, 398, 400], "evenli": [6, 11, 12, 35], "reduc": [6, 7, 9, 12, 36, 145, 224, 228, 229, 269, 307, 340, 345, 363, 378], "width": [6, 7, 9, 10, 11, 12, 16, 66, 72, 73, 74, 79, 119, 120, 133, 143, 177, 222, 226, 250, 265, 266, 267, 268, 304, 305, 306, 360, 363, 366, 383, 390, 394, 398], "prevent": [6, 388], "greater": [6, 68, 85, 119, 120, 137, 138, 146, 147, 188, 239, 400], "n150": 6, "thats": 6, "64": [6, 36, 68, 79, 82, 131, 139, 144, 177, 190, 222, 256, 277, 282, 295, 323, 324, 333, 346, 359, 360, 361, 363, 391, 396, 397, 398, 400], "2048": [6, 398, 400], "divisor": [6, 11, 12, 136, 274], "halv": 6, "appli": [6, 7, 9, 10, 11, 17, 19, 21, 23, 32, 38, 40, 43, 49, 53, 58, 60, 62, 66, 72, 73, 74, 75, 80, 81, 83, 98, 100, 101, 103, 105, 107, 108, 111, 112, 113, 114, 115, 117, 122, 129, 136, 137, 139, 140, 142, 143, 144, 146, 148, 151, 153, 157, 160, 169, 170, 171, 172, 173, 178, 179, 181, 183, 187, 190, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 222, 223, 224, 226, 227, 228, 229, 231, 232, 240, 241, 243, 246, 254, 265, 266, 267, 268, 271, 278, 282, 283, 284, 287, 288, 296, 300, 302, 304, 305, 306, 311, 312, 314, 316, 317, 319, 324, 325, 326, 330, 334, 336, 338, 340, 344, 345, 346, 349, 351, 353, 372, 374, 378, 381, 386, 396, 398], "sigmoid_approx": 6, "grid": [6, 9, 11, 12, 16, 31, 190, 222, 223, 333, 367, 368, 375, 385, 391, 398], "boolean": [6, 166, 167, 333, 351, 353, 363], "indic": [6, 36, 94, 95, 135, 226, 247, 307, 323, 332, 333, 363, 376, 399], "whether": [6, 9, 11, 36, 80, 81, 82, 190, 222, 223, 224, 226, 228, 229, 233, 234, 267, 268, 304, 305, 306, 324, 325, 333, 340, 345, 357, 358, 363, 368, 369, 375, 376, 378, 398], "conv": [6, 72, 73, 74, 394, 398], "halo": [6, 7, 226], "micro": 6, "anoth": [6, 333, 388, 391], "doubl": 6, "allow": [6, 9, 11, 222, 386, 389, 395, 396], "stall": 6, "reader": [6, 233], "improv": [6, 9, 11, 326, 386, 399], "increas": [6, 11, 399], "usag": [6, 9, 11, 12, 386, 388, 399], "fold": 6, "stride": [6, 72, 73, 74, 226, 265, 266, 267, 268, 394, 398], "dimens": [6, 7, 9, 10, 11, 12, 16, 32, 36, 66, 68, 69, 80, 81, 133, 135, 139, 143, 144, 165, 222, 224, 228, 229, 250, 254, 256, 264, 269, 270, 282, 291, 293, 294, 304, 305, 306, 307, 323, 324, 325, 332, 333, 340, 345, 346, 360, 362, 363, 366, 367, 368, 369, 378, 383, 391, 394, 395, 396], "under": [6, 386, 389, 390, 399, 400], "without": [6, 97], "notic": 6, "caution": 6, "product": [6, 31, 80, 222, 269, 367, 368], "22378": 6, "nhwc": [6, 394, 398], "format": [6, 7, 37, 44, 72, 73, 74, 111, 127, 128, 132, 135, 226, 265, 266, 267, 268, 278, 304, 332, 389, 391, 394, 396, 398], "n": [6, 7, 9, 10, 11, 12, 31, 49, 68, 72, 73, 74, 80, 81, 111, 119, 120, 224, 226, 228, 229, 247, 260, 261, 340, 345, 363, 377, 378, 388, 390, 395, 398], "h": [6, 7, 49, 72, 73, 74, 111, 119, 120, 226, 295, 363, 377, 391, 394, 398], "w": [6, 7, 49, 72, 73, 74, 111, 119, 120, 226, 295, 363, 377, 390, 394, 398], "ic": 6, "oc": 6, "pad_h": [6, 226], "pad_w": [6, 226], "implicit": 6, "via": [6, 388, 396, 398, 399], "current": [6, 36, 66, 68, 79, 135, 145, 233, 234, 267, 268, 307, 359, 368, 391, 400], "condit": [6, 294, 386], "met": [6, 294], "dram": [6, 7, 10, 359, 361, 391, 399], "divis": [6, 7, 11, 16, 124, 139, 144, 273, 282, 346, 391], "writer": 6, "carri": [6, 288], "bottleneck": [6, 399], "By": [6, 326, 389, 391], "default": [6, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 391, 398, 400], "inner": [6, 9, 10, 11, 12], "dim": [6, 36, 68, 69, 79, 80, 81, 135, 139, 144, 165, 177, 224, 228, 229, 256, 269, 270, 282, 293, 295, 307, 323, 324, 332, 340, 345, 346, 363, 369, 378, 391, 396, 397, 398], "kernel_h": [6, 226], "constraint": [6, 177, 222, 304, 306, 391], "space": [6, 35, 72, 73, 74, 265, 266, 267, 268, 391], "re": [6, 385, 387, 399], "overwrit": 6, "ani": [6, 119, 120, 254, 386, 391, 399], "either": [6, 7, 79, 222, 360, 388, 391, 399], "row_major": [6, 35, 36, 79, 96, 97, 132, 133, 134, 177, 224, 228, 229, 248, 249, 250, 269, 295, 304, 305, 306, 340, 345, 357, 358, 375, 376, 378, 383, 384, 390, 391], "expect": [6, 9, 74, 111, 120, 226, 369, 386, 389, 394, 396, 399], "next": [6, 245, 388, 391, 398], "fragment": 6, "ideal": [6, 226, 391], "face": [6, 391], "determin": [6, 7, 9, 10, 11, 12, 74, 222, 233, 234, 391, 398], "reshard": 6, "alreadi": [6, 74, 233, 234, 252, 398], "anywai": 6, "previou": [6, 31, 95, 393, 396, 399], "due": [6, 278, 390, 391], "v": [6, 120, 368, 398, 399], "dilat": [6, 72, 73, 74, 226, 265, 266, 267, 268, 398], "tensormemorylayout": [6, 226, 304, 306], "own": [6, 391], "heurist": 6, "height_shard": [6, 304, 306], "block_shard": [6, 226], "width_shard": 6, "orient": [6, 79, 304, 391], "major": [6, 9, 59, 111, 118, 120, 121, 123, 130, 145, 247, 297, 315, 373, 391, 399], "column": [6, 390, 391, 395], "bia": [6, 49, 50, 72, 73, 74, 111, 145, 190, 223, 265, 266, 267, 268, 385, 394, 396, 397, 398], "respons": [6, 398], "prepar": [6, 386, 394, 398], "bfloat16": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 394, 395, 396, 397, 398, 400], "unspecifi": 6, "float32": [6, 21, 31, 32, 35, 36, 40, 47, 49, 60, 62, 80, 81, 83, 96, 97, 98, 117, 125, 129, 136, 137, 146, 149, 151, 153, 155, 162, 177, 178, 181, 192, 193, 195, 197, 217, 224, 227, 228, 229, 231, 241, 262, 271, 295, 296, 304, 305, 306, 307, 316, 324, 325, 328, 330, 340, 345, 351, 353, 372, 378, 383, 384, 385, 390, 391, 393, 395, 396, 400], "place": [7, 49, 99, 138, 147, 174, 175, 182, 218, 226, 242, 296, 304, 306, 325, 359, 365, 391], "too": [7, 400], "fit": [7, 293], "conv2d_dram": 7, "happen": 7, "number": [7, 9, 10, 11, 12, 23, 24, 27, 29, 31, 50, 62, 68, 72, 73, 74, 87, 88, 89, 98, 99, 119, 120, 124, 125, 126, 135, 137, 138, 145, 146, 147, 179, 181, 182, 186, 202, 203, 206, 210, 212, 217, 218, 220, 222, 224, 226, 227, 228, 229, 231, 237, 240, 241, 242, 247, 254, 256, 263, 264, 265, 266, 267, 268, 289, 290, 291, 293, 294, 302, 307, 333, 338, 340, 341, 344, 345, 358, 363, 364, 365, 378, 379, 381, 389, 390, 391, 394, 396, 397, 398, 399], "along": [7, 9, 10, 11, 12, 80, 81, 135, 224, 228, 229, 270, 305, 306, 307, 323, 324, 325, 332, 340, 345, 363, 366, 378, 391, 398], "correspond": [7, 94, 95, 333, 368, 399], "calcul": [7, 31, 79, 390], "last": [7, 32, 36, 66, 133, 139, 144, 177, 250, 282, 294, 295, 305, 306, 324, 325, 332, 346, 360, 363, 369, 383, 390, 391], "smaller": [7, 11, 12, 391, 395], "rest": [7, 120], "prefer": [7, 388, 393, 399], "much": [7, 390], "larger": [7, 12, 395], "_ttnn": [8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 391], "multi_devic": [8, 13, 127, 128, 252, 348], "meshdevic": [8, 13, 37, 67, 72, 73, 74, 96, 97, 127, 128, 132, 133, 134, 191, 221, 250, 251, 252, 348, 359, 362, 383, 384, 398], "plan": [8, 13, 127, 128, 255, 399], "deprec": [8, 13, 127, 128, 255], "futur": [8, 13, 127, 128, 255], "1d": [9, 72, 222, 247, 264, 396], "multicast": [9, 10, 11], "advanc": [9, 388, 399], "veri": [9, 10, 306, 325, 326, 390], "narrow": [9, 10], "interleav": [9, 11, 49, 68, 111, 177, 295, 304, 307, 359, 361, 369, 391], "capabl": [9, 11, 12, 16], "2d": [9, 11, 12, 72, 73, 74, 135, 143, 222, 377, 391, 394, 398], "while": [9, 389, 396], "str": [9, 10, 11, 12, 23, 37, 42, 88, 91, 98, 113, 136, 137, 146, 178, 179, 181, 190, 191, 202, 203, 206, 210, 212, 217, 222, 223, 227, 231, 233, 234, 240, 241, 302, 310, 338, 344, 381, 398], "batch": [9, 11, 49, 72, 73, 74, 119, 120, 165, 190, 222, 226, 265, 266, 267, 268, 304, 305, 306, 333, 368, 390, 394, 398], "incorpor": [9, 386], "effici": [9, 10, 11, 12, 305, 306, 325, 388, 395, 396], "dure": [9, 10, 11, 68, 132, 168, 362, 391, 399], "directli": [9, 10, 11, 306, 325, 392, 393, 394, 395, 396, 397, 398], "elimin": 9, "separ": [9, 11], "overal": [9, 396, 398, 399], "scenario": [9, 10, 11, 222, 391], "intern": [9, 74, 145, 306, 387], "left": [9, 44, 87, 136, 178, 389], "k": [9, 10, 11, 12, 259, 324, 325, 363, 367, 368, 398], "granular": [9, 10, 11, 12, 16], "wide": [9, 10, 11, 12, 325], "input_tensor_a": [9, 10, 11, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 39, 41, 42, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 59, 61, 69, 76, 78, 84, 86, 87, 88, 89, 93, 98, 99, 102, 104, 106, 109, 116, 121, 123, 124, 125, 126, 130, 136, 137, 138, 146, 147, 150, 152, 154, 158, 159, 161, 165, 168, 178, 179, 180, 181, 182, 184, 186, 189, 190, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 230, 231, 237, 239, 240, 241, 242, 245, 253, 261, 263, 264, 272, 274, 279, 285, 286, 289, 290, 297, 302, 303, 309, 313, 315, 320, 322, 329, 331, 333, 337, 338, 339, 341, 342, 343, 344, 350, 354, 373, 379, 380, 381, 382, 400], "input_tensor_b": [9, 10, 11, 23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 50, 51, 52, 54, 55, 56, 69, 87, 88, 89, 98, 99, 124, 125, 126, 136, 137, 138, 146, 147, 158, 159, 165, 168, 178, 179, 180, 181, 182, 186, 190, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 217, 218, 220, 222, 223, 225, 227, 230, 231, 237, 240, 241, 242, 245, 253, 264, 289, 290, 302, 303, 333, 338, 339, 341, 342, 343, 344, 379, 380, 381, 382, 400], "impact": [9, 11, 12, 16, 386], "affect": [9, 10, 11, 12, 304, 390], "across": [9, 10, 11, 12, 143, 390, 391, 395], "bandwidth": [9, 10], "certain": [9, 11], "m": [9, 10, 11, 12, 31, 388, 399], "subblock": [9, 11, 12], "schedul": [9, 11, 386], "particip": 9, "workload": [9, 387], "balanc": [9, 11], "crucial": 9, "achiev": [9, 386, 389], "special": [10, 304, 386, 391], "provid": [10, 11, 14, 15, 16, 31, 36, 49, 117, 135, 177, 190, 222, 223, 224, 228, 229, 233, 234, 269, 270, 295, 304, 305, 306, 324, 333, 340, 345, 348, 358, 363, 378, 386, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400], "signific": 10, "benefit": [10, 389], "avoid": [10, 11, 233, 306, 325, 326, 390, 391, 394, 395, 399], "trip": 10, "chosen": [10, 11, 12, 222, 390], "align": [10, 12, 177, 222, 305, 306, 390], "strategi": [10, 79, 222, 390, 391, 398], "ensur": [10, 66, 332, 348, 386, 388, 391, 394, 398, 399], "conflict": 10, "compat": [10, 16, 398], "x": [11, 12, 44, 49, 74, 145, 177, 190, 222, 257, 304, 305, 306, 367, 368, 388, 390, 391, 394, 397], "g": [11, 74, 222, 388, 390, 391, 396, 398, 399], "overhead": [11, 395], "explicitli": [11, 82], "transpos": [11, 74, 114, 190, 222, 223, 256, 369, 391, 396, 398], "direct": 11, "benefici": 11, "reusabl": 12, "better": [12, 304, 311, 399], "togeth": [12, 393, 394, 395, 396, 397, 398], "suggest": 12, "decreas": 12, "fewer": 12, "doe": [12, 66, 132, 362, 386, 390, 399], "work": [12, 222, 323, 385, 386, 388, 400], "total_m": 12, "total_n": 12, "arg0": [13, 391], "none": [13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "tt": [13, 348, 357, 358, 375, 376, 377, 387, 392, 393, 396, 398], "device_id": [13, 67, 82, 94, 95, 131, 221, 252, 277, 307, 348, 359, 360, 361, 393, 394, 395, 396, 397, 398, 400], "behavior": [14, 391], "suitabl": [14, 265, 266, 267, 268], "most": [14, 222, 391, 395, 397, 398], "appropri": [14, 222, 386, 388, 398], "characterist": [14, 278, 399], "program_config": [14, 16, 31, 177, 190, 222, 223, 295, 304, 306, 325, 333, 364, 365, 367, 368], "common": [15, 136, 178, 386, 398], "interfac": [15, 396, 398], "customiz": 16, "fine": [16, 389], "grain": 16, "over": [16, 49, 72, 73, 74, 111, 143, 145, 177, 224, 228, 229, 270, 295, 324, 340, 345, 367, 368, 378, 388, 399], "subblock_w": [16, 304, 306, 325], "sub": [16, 348, 375, 391], "block_h": [16, 304, 306, 325], "vertic": 16, "horizont": 16, "modifi": [16, 306, 310, 325, 326], "proper": [16, 388], "compute_grid": [16, 325], "24": [16, 304, 306, 398], "sharded_tensor": 16, "python_fully_qualified_nam": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "abs_t": 17, "object": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389], "default_preprocess_golden_function_input": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "_golden_funct": [17, 20, 23, 28, 30, 31, 33, 34, 35, 40, 43, 57, 58, 66, 68, 70, 71, 73, 75, 77, 83, 85, 88, 94, 96, 97, 98, 100, 101, 103, 105, 107, 108, 114, 115, 118, 122, 131, 132, 134, 137, 140, 142, 145, 146, 148, 151, 153, 156, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 177, 179, 181, 186, 187, 188, 190, 192, 193, 195, 197, 200, 202, 203, 207, 208, 211, 213, 217, 219, 222, 225, 232, 237, 238, 240, 241, 243, 246, 250, 251, 254, 256, 257, 258, 260, 263, 271, 275, 276, 277, 278, 283, 284, 291, 292, 293, 294, 295, 300, 304, 305, 306, 311, 312, 314, 316, 317, 319, 321, 324, 325, 326, 327, 330, 334, 336, 344, 347, 349, 351, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 377, 380, 383, 384], "default_postprocess_golden_function_output": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "is_cpp_oper": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "is_experiment": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "element": [17, 19, 21, 32, 36, 38, 40, 43, 53, 58, 60, 62, 68, 72, 73, 74, 75, 80, 81, 83, 100, 101, 103, 105, 107, 108, 112, 115, 117, 122, 129, 135, 139, 140, 142, 143, 144, 145, 148, 151, 153, 157, 160, 169, 170, 171, 172, 173, 183, 187, 192, 193, 195, 197, 200, 208, 219, 232, 243, 246, 247, 254, 261, 262, 265, 266, 267, 268, 269, 271, 273, 278, 282, 283, 284, 287, 288, 293, 296, 300, 311, 312, 314, 316, 317, 319, 326, 330, 332, 334, 336, 346, 349, 351, 353, 363, 372, 374, 376, 391, 395], "wise": [17, 19, 21, 32, 38, 40, 43, 53, 58, 60, 62, 75, 83, 100, 101, 103, 105, 107, 108, 112, 115, 117, 122, 129, 139, 140, 142, 144, 148, 151, 153, 157, 160, 169, 170, 171, 172, 173, 183, 187, 192, 193, 195, 197, 200, 208, 219, 232, 243, 246, 262, 271, 273, 278, 282, 283, 284, 287, 288, 296, 300, 311, 312, 314, 316, 317, 319, 326, 330, 334, 336, 346, 349, 351, 353, 372, 374, 395], "mathrm": [17, 19, 21, 23, 25, 32, 38, 40, 43, 44, 47, 51, 52, 53, 54, 55, 56, 58, 60, 75, 80, 81, 83, 87, 89, 98, 99, 100, 101, 103, 105, 107, 108, 112, 115, 117, 122, 124, 125, 129, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 153, 157, 158, 160, 162, 168, 169, 170, 171, 172, 173, 178, 179, 181, 182, 183, 185, 187, 192, 193, 195, 197, 200, 202, 203, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 232, 240, 241, 242, 243, 245, 246, 253, 261, 262, 264, 271, 278, 282, 283, 284, 287, 288, 289, 296, 300, 302, 311, 312, 314, 316, 317, 319, 326, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 372, 374, 381], "_tensor": [17, 19, 21, 23, 25, 32, 38, 40, 43, 44, 51, 52, 53, 54, 55, 56, 58, 60, 75, 83, 87, 89, 98, 99, 100, 101, 103, 105, 107, 108, 112, 115, 117, 122, 124, 125, 129, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 153, 157, 158, 160, 162, 168, 169, 170, 171, 172, 173, 178, 179, 181, 182, 183, 185, 187, 192, 193, 195, 197, 200, 202, 203, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 232, 240, 241, 242, 243, 245, 246, 253, 261, 262, 264, 271, 278, 282, 283, 284, 287, 288, 289, 296, 300, 302, 311, 312, 314, 316, 317, 319, 326, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 372, 374, 381], "_i": [17, 19, 21, 23, 38, 40, 43, 44, 47, 51, 52, 53, 54, 55, 56, 58, 60, 75, 80, 81, 83, 87, 98, 100, 101, 103, 105, 107, 108, 112, 115, 117, 122, 129, 136, 137, 139, 140, 142, 143, 144, 146, 148, 151, 153, 157, 158, 160, 162, 169, 170, 171, 172, 173, 178, 181, 183, 187, 192, 193, 195, 197, 200, 206, 207, 208, 210, 211, 212, 213, 217, 219, 232, 240, 241, 243, 245, 246, 261, 262, 271, 278, 282, 283, 284, 287, 288, 296, 300, 302, 311, 312, 314, 316, 317, 319, 326, 330, 334, 336, 344, 346, 349, 351, 353, 372, 374, 381], "verb": [17, 19, 21, 38, 40, 43, 47, 51, 52, 53, 54, 55, 56, 58, 60, 75, 83, 89, 105, 108, 112, 115, 117, 122, 124, 125, 129, 136, 139, 144, 151, 153, 157, 160, 162, 169, 170, 171, 172, 173, 178, 179, 183, 185, 200, 202, 203, 232, 243, 264, 271, 278, 282, 283, 284, 287, 288, 289, 296, 311, 312, 314, 316, 317, 319, 330, 334, 336, 338, 346, 349, 372, 374], "complextensor": [17, 18, 24, 33, 34, 70, 71, 87, 88, 163, 164, 166, 167, 237, 257, 258, 275, 276, 278, 279, 341], "keyword": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "memory_config": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 395, 397, 400], "prealloc": [17, 19, 21, 23, 24, 25, 26, 32, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 75, 80, 81, 83, 87, 88, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 117, 118, 122, 129, 133, 134, 135, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 251, 262, 263, 271, 273, 278, 283, 284, 287, 288, 296, 300, 301, 302, 303, 311, 312, 314, 316, 317, 318, 319, 326, 330, 332, 334, 335, 336, 338, 341, 342, 343, 344, 349, 351, 352, 353, 363, 372, 374, 379, 380, 381, 384], "command": [17, 19, 21, 23, 24, 25, 26, 32, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 75, 83, 87, 88, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 120, 122, 129, 132, 133, 134, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 165, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 251, 254, 256, 262, 263, 271, 273, 278, 283, 284, 287, 288, 294, 296, 300, 301, 302, 303, 311, 312, 314, 316, 317, 318, 319, 326, 330, 334, 335, 336, 338, 341, 342, 343, 344, 348, 349, 351, 352, 353, 357, 358, 362, 363, 367, 368, 372, 374, 375, 376, 379, 380, 381, 384, 390, 400], "queue": [17, 19, 21, 23, 24, 25, 26, 32, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 74, 75, 83, 87, 88, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 129, 132, 133, 134, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 165, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 226, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 251, 254, 256, 262, 263, 271, 273, 278, 283, 284, 287, 288, 294, 296, 300, 301, 302, 303, 311, 312, 314, 316, 317, 318, 319, 326, 330, 334, 335, 336, 338, 341, 342, 343, 344, 348, 349, 351, 352, 353, 357, 358, 362, 363, 367, 368, 372, 374, 375, 376, 379, 380, 381, 384], "id": [17, 19, 21, 23, 24, 25, 26, 32, 36, 38, 40, 42, 43, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 68, 69, 74, 75, 83, 87, 88, 94, 95, 98, 100, 101, 103, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 129, 132, 133, 134, 136, 137, 140, 141, 142, 146, 148, 151, 153, 157, 160, 162, 165, 169, 170, 171, 172, 173, 176, 178, 179, 181, 183, 187, 192, 193, 195, 197, 200, 202, 203, 206, 208, 210, 212, 217, 219, 221, 226, 227, 231, 232, 236, 237, 240, 241, 243, 244, 246, 247, 251, 252, 254, 256, 262, 263, 271, 273, 278, 283, 284, 287, 288, 294, 296, 300, 301, 302, 303, 311, 312, 314, 316, 317, 318, 319, 326, 330, 334, 335, 336, 338, 341, 342, 343, 344, 348, 349, 351, 352, 353, 357, 358, 362, 363, 367, 368, 372, 374, 375, 376, 379, 380, 381, 384, 390, 394, 395, 396, 397, 398, 399], "tile_layout": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 227, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 259, 261, 262, 263, 270, 271, 272, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 391, 393, 395, 396, 397, 398, 400], "unary_backward": [18, 20, 22, 39, 41, 46, 48, 59, 61, 63, 65, 76, 78, 84, 86, 90, 93, 102, 104, 106, 109, 110, 116, 118, 121, 123, 130, 141, 150, 152, 154, 156, 161, 184, 189, 194, 196, 198, 199, 201, 215, 216, 239, 244, 260, 263, 270, 272, 274, 279, 285, 286, 292, 297, 299, 301, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 350, 352, 354, 356, 373], "abs_bw_t": 18, "_golden_function_ab": 18, "backward": [18, 20, 22, 24, 26, 28, 30, 34, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 69, 71, 76, 78, 84, 86, 88, 90, 93, 95, 102, 104, 106, 109, 110, 113, 116, 118, 121, 123, 126, 130, 141, 150, 152, 154, 156, 159, 161, 164, 180, 184, 186, 189, 194, 196, 198, 199, 201, 204, 205, 215, 216, 225, 230, 237, 239, 244, 258, 260, 263, 270, 272, 274, 276, 279, 285, 286, 290, 292, 297, 299, 301, 303, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 339, 341, 343, 350, 352, 354, 356, 373, 380, 382], "given": [18, 20, 22, 24, 26, 28, 30, 34, 36, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 69, 71, 74, 76, 78, 80, 81, 84, 86, 88, 90, 93, 97, 102, 104, 106, 109, 110, 116, 118, 121, 123, 126, 130, 141, 150, 152, 154, 156, 159, 161, 164, 180, 184, 186, 189, 194, 196, 198, 199, 201, 204, 205, 215, 216, 225, 230, 233, 234, 237, 239, 244, 252, 255, 258, 260, 263, 270, 272, 274, 276, 279, 285, 286, 290, 292, 293, 297, 299, 301, 303, 307, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 339, 341, 343, 350, 352, 354, 356, 363, 368, 373, 377, 380, 382, 385, 395, 398], "grad_tensor": [18, 20, 22, 24, 26, 28, 30, 34, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 69, 71, 76, 78, 84, 86, 88, 90, 93, 95, 102, 104, 106, 109, 110, 113, 116, 118, 121, 123, 126, 130, 141, 150, 152, 154, 156, 159, 161, 164, 180, 184, 186, 189, 194, 196, 198, 199, 201, 204, 205, 215, 216, 225, 230, 237, 239, 244, 258, 260, 263, 270, 272, 274, 276, 279, 285, 286, 290, 292, 297, 299, 301, 303, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 339, 341, 343, 350, 352, 354, 356, 373, 380, 382], "gradient": [18, 20, 22, 24, 26, 28, 30, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 69, 74, 76, 78, 84, 86, 88, 90, 93, 95, 102, 104, 106, 109, 110, 113, 116, 118, 121, 123, 126, 130, 135, 141, 150, 152, 154, 156, 159, 161, 180, 184, 186, 189, 194, 196, 198, 199, 201, 204, 205, 215, 216, 225, 230, 237, 239, 244, 260, 263, 270, 272, 274, 279, 285, 286, 290, 292, 297, 299, 301, 303, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 339, 341, 343, 350, 352, 354, 356, 373, 380, 382], "list": [18, 20, 22, 23, 24, 26, 28, 30, 31, 34, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 68, 69, 71, 76, 78, 79, 84, 86, 88, 90, 93, 94, 96, 98, 102, 104, 106, 109, 110, 116, 118, 121, 123, 126, 128, 130, 136, 137, 141, 146, 150, 152, 154, 156, 159, 161, 164, 178, 179, 180, 181, 184, 186, 189, 190, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 210, 212, 215, 216, 217, 222, 223, 225, 226, 227, 230, 231, 237, 239, 240, 241, 244, 247, 254, 255, 256, 258, 260, 263, 264, 269, 270, 272, 274, 276, 279, 285, 286, 290, 292, 297, 299, 301, 302, 303, 309, 313, 315, 318, 320, 322, 323, 327, 329, 331, 333, 335, 337, 338, 339, 341, 343, 344, 348, 350, 352, 354, 356, 363, 368, 373, 374, 375, 376, 380, 381, 382, 387, 393, 399], "about": [18, 28, 50, 126, 141, 194, 196, 198, 199, 201, 204, 205, 215, 216, 263, 270, 278, 279, 290, 327, 335, 382, 391, 393, 394, 395, 399], "requires_grad": [18, 20, 22, 24, 26, 28, 30, 39, 41, 42, 45, 46, 48, 50, 59, 61, 63, 65, 69, 76, 78, 84, 86, 88, 93, 95, 102, 104, 106, 109, 110, 113, 116, 118, 121, 123, 126, 130, 141, 150, 152, 154, 156, 159, 161, 180, 184, 186, 189, 194, 196, 198, 199, 201, 204, 205, 215, 216, 225, 230, 237, 239, 244, 263, 270, 272, 274, 279, 285, 286, 290, 292, 297, 301, 303, 309, 313, 315, 318, 320, 322, 327, 329, 331, 335, 337, 339, 341, 343, 350, 352, 354, 356, 373, 380, 382], "acos_t": 19, "_golden_function_aco": 19, "rand": [19, 21, 32, 36, 38, 40, 43, 47, 49, 53, 57, 58, 69, 75, 77, 80, 81, 83, 94, 100, 105, 108, 115, 122, 129, 139, 142, 144, 148, 151, 153, 160, 169, 170, 171, 172, 173, 177, 187, 188, 200, 208, 209, 219, 224, 228, 229, 232, 243, 246, 248, 249, 253, 264, 269, 270, 271, 282, 283, 284, 292, 293, 295, 304, 305, 306, 314, 316, 317, 319, 321, 324, 325, 330, 334, 336, 340, 345, 346, 347, 349, 363, 370, 371, 372, 378, 394, 395, 396, 398, 400], "acos_bw_t": 20, "invers": [20, 22, 39, 41, 46, 48], "cosin": [20, 22, 76, 78, 114], "acosh_t": 21, "_golden_function_acosh": [21, 22], "acosh_bw_t": 22, "hyperbol": [22, 41, 48, 78, 322, 352], "add_t": 23, "_a": [23, 25, 44, 51, 52, 54, 55, 56, 87, 89, 98, 99, 124, 125, 136, 137, 138, 146, 147, 158, 168, 178, 179, 181, 182, 202, 203, 206, 207, 210, 211, 212, 213, 217, 218, 240, 241, 242, 245, 253, 264, 289, 302, 338, 342, 344, 381], "_b": [23, 25, 44, 51, 52, 54, 55, 56, 87, 89, 98, 99, 124, 125, 136, 137, 138, 146, 147, 158, 168, 178, 179, 181, 182, 202, 203, 206, 207, 210, 211, 212, 213, 217, 218, 240, 241, 242, 245, 253, 264, 289, 302, 338, 342, 344, 381], "datatyp": [23, 31, 35, 37, 49, 66, 72, 73, 74, 80, 81, 94, 95, 96, 97, 98, 132, 133, 134, 136, 137, 143, 145, 146, 177, 178, 179, 181, 190, 202, 203, 206, 210, 212, 217, 222, 223, 227, 231, 240, 241, 250, 251, 265, 266, 267, 268, 295, 302, 325, 333, 338, 344, 360, 361, 381, 383, 384, 393, 395, 398, 399], "int32": [23, 36, 51, 52, 53, 54, 55, 56, 62, 80, 81, 98, 100, 136, 137, 142, 146, 148, 178, 181, 187, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 224, 227, 228, 229, 231, 240, 241, 246, 307, 316, 336, 338, 340, 344, 345, 378], "uint32": [23, 36, 52, 55, 80, 81, 94, 95, 100, 135, 162, 165, 208, 209, 224, 228, 229, 246, 332, 340, 344, 345, 363, 378, 390, 391], "4294967295": [23, 208, 344], "uint16": [23, 36, 51, 54, 56, 98, 100, 133, 135, 162, 206, 207, 208, 210, 211, 212, 213, 240, 241, 246, 250, 332, 336, 338, 344, 363, 383, 391], "65535": [23, 51, 54, 56, 208, 240, 344], "tensor1": [23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 50, 51, 52, 54, 55, 56, 68, 69, 87, 88, 89, 98, 99, 124, 125, 126, 136, 137, 138, 146, 147, 158, 159, 165, 168, 178, 179, 180, 181, 182, 185, 186, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 217, 218, 220, 222, 225, 227, 230, 231, 237, 240, 241, 242, 245, 253, 264, 289, 290, 302, 303, 338, 339, 341, 342, 343, 344, 379, 380, 381, 382], "tensor2": [23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 50, 51, 52, 54, 55, 56, 68, 69, 87, 88, 89, 98, 99, 124, 125, 126, 136, 137, 138, 146, 147, 158, 159, 165, 168, 178, 179, 180, 181, 182, 185, 186, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 217, 218, 220, 222, 225, 227, 230, 231, 237, 240, 241, 242, 245, 253, 264, 289, 290, 302, 303, 338, 339, 341, 342, 343, 344, 379, 380, 381, 382], "scalar": [23, 24, 27, 29, 51, 52, 54, 55, 56, 62, 87, 88, 89, 90, 98, 99, 124, 125, 126, 133, 134, 137, 138, 146, 147, 179, 181, 182, 185, 186, 202, 203, 206, 210, 212, 217, 218, 220, 224, 227, 228, 229, 231, 237, 240, 241, 242, 260, 264, 269, 273, 274, 289, 290, 302, 338, 340, 341, 344, 345, 378, 381, 400], "binary_backward": [24, 26, 42, 45, 50, 69, 88, 126, 159, 180, 204, 205, 225, 230, 237, 290, 303, 339, 341, 343, 382], "add_bw_t": 24, "_golden_function_bw": [24, 26, 42, 45, 50, 69, 126, 159, 180, 204, 205, 230, 290, 303, 339, 341, 343, 382], "are_required_output": [24, 26, 42, 69, 88, 237, 303, 341, 343, 380], "input_grad": [24, 26, 42, 69, 88, 113, 237, 303, 341, 343], "other_grad": [24, 26, 42, 69, 88, 237, 303, 341, 343], "bfloat4_b": [24, 26, 27, 29, 32, 45, 50, 69, 88, 132, 159, 180, 185, 186, 204, 205, 220, 225, 230, 237, 303, 339, 341, 343, 351, 353, 362, 379, 382], "addalpha_t": 25, "_golden_function_addalpha": 25, "alpha": [25, 26, 28, 30, 31, 60, 61, 88, 92, 93, 308, 342, 343], "float": [25, 26, 27, 28, 29, 30, 31, 49, 60, 61, 63, 64, 65, 90, 92, 93, 112, 117, 120, 127, 132, 133, 134, 145, 149, 150, 155, 156, 157, 168, 177, 183, 184, 185, 214, 216, 224, 228, 229, 254, 256, 260, 261, 262, 264, 273, 274, 287, 288, 295, 298, 299, 304, 305, 306, 308, 326, 327, 328, 329, 340, 342, 343, 345, 355, 356, 367, 368, 370, 371, 378, 391], "addalpha_bw_t": 26, "addcdiv_t": 27, "_golden_function_addcdiv": 27, "input_tensor_c": [27, 28, 29, 30, 186, 220, 379, 380], "tensor3": [27, 28, 29, 30, 185, 186, 220, 379, 380], "ternary_backward": [28, 30, 186, 380], "addcdiv_bw_t": 28, "addcmul_t": 29, "_golden_function_addcmul": 29, "addcmul_bw_t": 30, "addmm_t": 31, "mat1_tensor": 31, "mat2_tensor": 31, "ha": [31, 52, 55, 74, 222, 233, 234, 267, 268, 333, 348, 369, 385, 386, 390, 391, 392, 400], "p": [31, 222, 391, 399], "content": 31, "overwritten": 31, "beta": [31, 49, 145, 326, 327], "scale": [31, 49, 112, 145, 177, 224, 228, 229, 304, 305, 306, 308, 326, 333, 340, 345, 367, 368, 378, 398], "factor": [31, 224, 228, 229, 304, 305, 306, 333, 340, 345, 378], "look": [31, 145, 222, 363, 386, 387, 390, 391, 399], "second": [31, 132, 139, 144, 190, 222, 223, 254, 264, 282, 294, 333, 346, 390, 397, 398, 400], "dram_memory_config": [31, 35, 66, 96, 97, 190, 222, 223, 333, 359, 391, 395], "highest": [31, 396, 398], "precis": [31, 351, 353, 391, 396], "matmulprogramconfig": [31, 190, 222, 223, 333], "compute_kernel_config": [31, 49, 66, 111, 114, 145, 177, 190, 222, 223, 224, 228, 229, 295, 304, 305, 306, 324, 325, 333, 340, 345, 367, 368, 378], "devicecomputekernelconfig": [31, 49, 72, 73, 74, 111, 114, 145, 177, 190, 222, 223, 265, 266, 267, 268, 295, 304, 305, 306, 324, 325, 333, 367, 368], "coregrid": [31, 79, 145, 190, 222, 223, 333, 397], "output_til": [31, 190, 222, 223, 333], "global_cb": 31, "globalcircularbuff": 31, "tbd": 31, "sub_device_id": [31, 348], "subdeviceid": [31, 348], "alt_complex_rotate90_t": 32, "_golden_function_alt_complex_rotate90": 32, "_": [32, 385, 390, 397], "2i": 32, "even": [32, 82, 221, 222], "complex_unari": [33, 70, 163, 166, 167, 257, 275], "angle_t": 33, "complex": [33, 34, 70, 71, 163, 164, 257, 258, 275, 276, 394, 398], "complex_unary_backward": [34, 71, 164, 258, 276], "angle_bw_t": 34, "arange_t": 35, "inclus": [35, 391], "end": [35, 80, 81, 87, 168, 185, 245, 323, 376, 386, 390, 395, 397, 399], "exclus": [35, 254], "consecut": [35, 391], "print": [35, 37, 68, 96, 97, 131, 132, 133, 134, 190, 221, 222, 250, 251, 252, 256, 291, 293, 310, 323, 333, 359, 360, 362, 383, 384, 390, 391, 394, 398, 400], "00000": [35, 393], "argmax_t": 36, "_create_golden_funct": [36, 224, 228, 229, 340, 345, 378], "local": [36, 40, 43, 57, 58, 75, 77, 83, 85, 100, 101, 103, 105, 107, 108, 115, 122, 140, 142, 148, 151, 153, 160, 162, 169, 170, 171, 172, 173, 187, 188, 192, 193, 195, 197, 200, 208, 219, 224, 228, 229, 232, 238, 243, 246, 271, 283, 284, 300, 311, 312, 314, 316, 317, 319, 321, 326, 330, 334, 336, 340, 345, 347, 349, 351, 363, 370, 371, 378, 385, 386, 391, 392, 394, 395, 396, 397, 398, 399], "keepdim": [36, 224, 228, 229, 269, 340, 345, 378], "row_major_layout": [36, 37, 66, 91, 94, 127, 128, 132, 133, 250, 360, 383, 391, 394, 397, 398], "yield": [36, 224, 228, 229, 340, 345, 378, 398], "output_onedim": 36, "output_alldim": 36, "cache_file_nam": 37, "pathlib": [37, 91, 191], "path": [37, 91, 191, 388, 390, 396, 398, 399, 400], "callabl": [37, 233, 234], "serial": 37, "mesh_mapp": [37, 132], "cpptensortomesh": 37, "tensortomesh": [37, 132], "truncat": [37, 373], "mantissa": 37, "bit": 37, "bfp": [37, 391], "rais": [37, 362], "runtim": [37, 333, 399], "error": [37, 176, 221, 222, 236, 362, 386, 394, 395, 396, 397, 398], "rte": 37, "bfp8": 37, "bfp4": 37, "randn": [37, 82, 95, 97, 131, 132, 143, 190, 222, 226, 251, 277, 307, 359, 360, 361, 362, 374, 384, 397], "375": [37, 132], "30469": [37, 132], "714844": [37, 132], "761719": [37, 132], "53125": [37, 132], "652344": [37, 132], "asin_t": 38, "_golden_function_asin": 38, "asin_bw_t": 39, "lambda": [39, 41, 48, 59, 61, 63, 65, 78, 90, 93, 104, 150, 184, 194, 196, 198, 216, 274, 299, 315, 320, 322, 329, 331, 385], "sine": [39, 41, 114, 322], "asinh_t": 40, "register_ttnn_cpp_unary_funct": [40, 43, 57, 58, 75, 77, 83, 85, 100, 101, 103, 105, 107, 108, 115, 122, 140, 142, 148, 151, 153, 160, 162, 169, 170, 171, 172, 173, 187, 188, 192, 193, 195, 197, 200, 208, 219, 232, 238, 243, 246, 271, 283, 284, 300, 311, 312, 314, 316, 317, 319, 321, 326, 330, 334, 336, 347, 349, 351, 370, 371], "asinh_bw_t": 41, "assign_bw_t": 42, "assign": 42, "other_tensor": [42, 88], "round_mod": [42, 87, 88, 273, 274], "atan_t": 43, "atan2_t": 44, "_golden_function_atan2": 44, "arctan": 44, "right": [44, 87, 136, 178], "atan2_bw_t": 45, "atan_bw_t": 46, "_golden_function_atan": 46, "tangenr": 46, "atanh_t": 47, "_golden_function_atanh": 47, "bflaot8_b": 47, "atanh_bw_t": 48, "tangent": [48, 352], "batch_norm_t": 49, "norm": [49, 177, 295], "see": [49, 145, 177, 295, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 399], "spatial": [49, 143, 377, 394], "text": [49, 87, 145, 168, 177, 245, 253, 324, 325, 386], "gamma": [49, 145, 239], "epsilon": [49, 145, 177, 295], "mu": [49, 145, 177], "sigma": [49, 145, 177], "cdot": [49, 80, 81, 145, 177, 381, 395], "varianc": [49, 145, 177, 391], "respect": [49, 74, 95, 145, 177, 222, 391, 393], "learnabl": [49, 145, 177], "shift": [49, 145, 177], "small": [49, 145, 177, 252, 394], "ep": [49, 214, 216], "1e": [49, 145, 168, 177, 295], "05": [49, 395], "momentum": 49, "running_mean": 49, "train": [49, 396, 398, 399], "updat": [49, 175, 386, 389, 396, 398, 400], "running_var": 49, "evalu": 49, "These": [49, 222, 386, 390, 392, 395, 396, 399, 400], "bias_gelu_bw_t": 50, "bias_gelu": 50, "approxim": [50, 101, 103, 107, 113, 140, 141, 192, 193, 195, 197, 300, 311, 351, 353], "bitwise_and_t": 51, "_golden_function_bitwise_and": 51, "integ": [51, 52, 54, 55, 56, 254, 368], "bitwise_left_shift_t": 52, "_golden_function_bitwise_left_shift": 52, "shift_bit": [52, 55], "31": [52, 55, 393, 395], "bitwise_not_t": 53, "_golden_function_bitwise_not": 53, "2147483647": [53, 136], "bitwise_or_t": 54, "_golden_function_bitwise_or": 54, "bitwise_right_shift_t": 55, "_golden_function_bitwise_right_shift": 55, "bitwise_xor_t": 56, "_golden_function_bitwise_xor": 56, "cbrt_t": 57, "ceil_t": 58, "ceil_bw_t": 59, "celu_t": 60, "_golden_function_celu": 60, "celu_bw_t": 61, "formula": [61, 93, 150, 184, 185, 216, 327, 329], "clamp_t": 62, "_golden_function_clamp": 62, "min_tensor": [62, 64], "max_tensor": [62, 64], "clamp_bw_t": 63, "clip_t": 64, "_golden_function_clip": 64, "clip_bw_t": 65, "data_mov": [66, 68, 119, 120, 135, 165, 247, 254, 256, 291, 293, 294, 307, 323, 332, 357, 358, 375, 376], "clone_t": 66, "alter": 66, "unpad": [66, 128, 360, 376], "two": [66, 68, 139, 144, 222, 282, 294, 305, 306, 346, 360, 369, 385, 388, 391, 392, 393, 396, 397, 398, 399], "adjust": [66, 326, 399], "target": [66, 127, 128, 269, 386, 398], "l1_memory_config": [66, 359, 385, 391, 397, 400], "remov": [67, 362, 376], "success": [67, 394], "concat_t": 68, "concaten": [68, 69, 366, 369], "group": [68, 72, 73, 74, 145, 265, 266, 267, 268, 391, 394, 398], "split": [68, 139, 144, 282, 346, 369, 391], "partit": 68, "independ": 68, "altern": [68, 222, 395, 396, 400], "recombin": 68, "residu": 68, "concat_bw_t": 69, "30": [69, 96, 135, 307, 393, 395, 398], "conj_t": 70, "conjug": 70, "conj_bw_t": 71, "conv1d_t": 72, "signal": [72, 73, 111, 143], "compos": [72, 73, 74, 111, 143, 362, 396, 398], "sever": [72, 73, 74, 111, 143, 397, 398], "plane": [72, 73, 74, 111, 143], "input_length": 72, "weight_tensor": [72, 73, 74, 111, 267, 268, 394, 398], "out_channel": [72, 73, 74, 265, 266, 267, 268, 394, 398], "in_channel": [72, 73, 74, 265, 266, 267, 268, 394, 398], "kernel_height": [72, 73, 267, 268], "kernel_width": [72, 73, 267, 268], "bias_tensor": [72, 73, 74, 111, 394, 398], "batch_siz": [72, 73, 74, 95, 143, 226, 265, 266, 267, 268, 295, 366, 369, 385, 394, 396, 397, 398], "length": [72, 264, 367, 368], "kernel_s": [72, 73, 74, 226, 265, 266, 267, 268, 394, 398], "convolv": [72, 73, 74, 226, 265, 266, 267, 268], "cross": [72, 73, 74, 265, 266, 267, 268], "correl": [72, 73, 74, 265, 266, 267, 268, 386, 399], "side": [72, 73, 74, 265, 266, 267, 268, 390], "pad_length": 72, "pad_left": [72, 73, 74, 265, 266, 267, 268], "pad_right": [72, 73, 74, 265, 266, 267, 268], "connect": [72, 73, 74, 265, 266, 267, 268, 396, 398, 399], "conv_config": [72, 73, 74, 265, 266, 267, 268, 394, 398], "compute_config": [72, 73, 74, 265, 266, 267, 268], "return_output_dim": [72, 73, 74], "return_weights_and_bia": [72, 73, 74], "bias": [72, 385, 396, 397, 398], "conv2d_t": 73, "inform": [73, 135, 278, 388, 399], "tech": 73, "input_height": [73, 74, 265, 266, 267, 268, 394, 398], "input_width": [73, 74, 265, 266, 267, 268, 394, 398], "pad_height": [73, 74, 265, 266, 267, 268], "pad_width": [73, 74, 265, 266, 267, 268], "pad_top": [73, 74, 265, 266, 267, 268], "pad_bottom": [73, 74, 265, 266, 267, 268], "conv_transpose2d_t": 74, "seen": [74, 79], "fraction": 74, "deconvolut": 74, "o": [74, 388, 390, 396, 397, 398], "k_h": 74, "k_w": 74, "equat": 74, "h_out": 74, "h_in": 74, "output_pad": 74, "w_out": 74, "w_in": 74, "mirror_kernel": 74, "mirror": 74, "been": [74, 233, 234, 307, 348, 386, 399], "cos_t": 75, "cos_bw_t": 76, "_golden_function_co": 76, "cosh_t": 77, "cosh_bw_t": 78, "corerangeset": [79, 304, 306, 363, 375], "shardstrategi": 79, "shardorient": [79, 304, 306], "use_height_and_width_as_shard_shap": 79, "travers": 79, "math": [79, 390], "320": 79, "cumprod_t": 80, "cumul": [80, 81], "_1": [80, 81], "time": [80, 168, 233, 291, 307, 386, 390, 397, 399, 400], "_2": [80, 81], "desir": [80, 81, 97, 119, 120, 127, 128, 132, 360, 361, 362], "cast": [80, 81], "reverse_ord": [80, 81], "accumul": [80, 81], "begin": [80, 81, 87, 168, 245, 390, 395], "axi": [80, 81, 293, 395], "tensor_input": [80, 81], "tensor_output": [80, 81], "With": [80, 81, 392], "preallocated_output": [80, 81], "cumsum_t": 81, "pycapsul": [82, 131, 277, 359], "resourc": [82, 399], "whose": [82, 97], "forc": 82, "deg2rad_t": 83, "deg2rad_bw_t": 84, "_golden_function_deg2rad": 84, "degre": [84, 272], "radian": [84, 272], "digamma_t": 85, "digamma_bw_t": 86, "_golden_function_digamma": 86, "div_t": 87, "_golden_function_div": 87, "_mode": 87, "accurate_mod": 87, "non": [87, 222, 226, 247, 263, 273, 278, 298, 333], "div_bw_t": 88, "pcc": [88, 159, 180, 274, 386, 389, 399], "degrad": [88, 159, 180, 274, 394, 395, 396, 397, 398], "div_no_nan_t": 89, "_golden_function_div_no_nan": 89, "div_no_nan_bw_t": 90, "denomin": [90, 273], "dump": [91, 233, 399, 400], "file_nam": [91, 191, 400], "save": [91, 325], "tensorbin": [91, 191], "elu_t": 92, "_golden_function_elu": 92, "elu_bw_t": 93, "embedding_t": 94, "retriev": 94, "word": 94, "padding_idx": 94, "token": [94, 175, 333, 368], "embeddings_typ": 94, "embeddingstyp": 94, "106445": 94, "988281": 94, "59375": [94, 395], "212891": 94, "964844": 94, "199219": 94, "996094": 94, "78362e": 94, "38": [94, 391, 393, 397], "89785e": 94, "39": [94, 397], "04479e": 94, "25815e": 94, "71833e": 94, "59995e": 94, "60398e": 94, "83671e": 94, "22242e": 94, "88263e": 94, "35917e": 94, "49994e": 94, "embedding_backward": 95, "embedding_bw_t": 95, "extract": [95, 135, 398], "vocabulari": 95, "output_gradient_tensor": 95, "seq_len": [95, 114], "embedding_dim": 95, "num_embed": 95, "1024": [95, 398], "4096": 95, "3200": 95, "input_shap": [95, 226, 304, 305, 306], "input_index": 95, "randint": [95, 307], "weights_shap": 95, "weights_ttnn": 95, "grad_shap": 95, "grad_data": 95, "empty_t": 96, "uniniti": [96, 97], "bfloat_8": 96, "21": [96, 398], "67": 96, "empty_like_t": 97, "87": [97, 396, 398], "45": [97, 349, 350], "22": [97, 388, 394, 395, 396, 397, 398], "60": [97, 135], "75": [97, 131], "25": [97, 360, 390, 398], "eq_t": 98, "eq__t": 99, "_golden_function_eq_": 99, "input_a": [99, 138, 147, 165, 182, 218, 224, 228, 229, 242, 340, 345, 378], "input_b": [99, 138, 147, 165, 182, 218, 242], "eqz_t": 100, "_tensor_i": [100, 142, 148, 187, 208, 219, 246], "erf_t": 101, "fast_and_approximate_mod": [101, 103, 107, 140, 192, 193, 195, 197, 300, 311, 351, 353], "fast": [101, 103, 107, 140, 192, 193, 195, 197, 300, 311], "erf_bw_t": 102, "_golden_function_erf": 102, "erfc_t": 103, "erfc_bw_t": 104, "erfinv_t": 105, "erfinv_bw_t": 106, "_golden_function_erfinv": 106, "exp_t": 107, "exp2_t": 108, "exp2_bw_t": 109, "_golden_function_exp2": 109, "exp_bw_t": 110, "_golden_function_exp": 110, "exponenti": 110, "conv3d_t": 111, "3d": 111, "d": [111, 388], "kd": 111, "kh": [111, 394], "kw": [111, 394], "c_in": 111, "c_out": 111, "conv3dconfig": 111, "dropout_t": 112, "rng": 112, "probabl": 112, "averag": [112, 143, 390], "total_elem": 112, "124": 112, "prob": 112, "gelu_bw_t": [113, 141], "_golden_function_gelu": [113, 141], "algorithm": [113, 377], "rotary_embedding_t": 114, "rotari": 114, "cos_cach": 114, "sin_cach": 114, "token_idx": 114, "assum": [114, 128, 348, 377], "head_dim": 114, "cod_cach": 114, "token_index": 114, "expm1_t": 115, "expm1_bw_t": 116, "_golden_function_expm1": 116, "fill_t": 117, "_golden_function_fil": 117, "fill_valu": [117, 133, 134, 391, 393, 395], "wormhole_b0": 117, "system": [117, 139, 144, 273, 282, 287, 288, 298, 346, 388, 390, 399], "fill_bw_t": 118, "fill_ones_rm_t": 119, "val_hi": [119, 120], "val_lo": [119, 120], "count": [119, 120, 177, 390], "ye": [119, 120], "hone": [119, 120], "high": [119, 120, 388, 391, 393, 395, 399, 400], "region": [119, 120, 252], "wone": [119, 120], "fill_rm_t": 120, "nchw": [120, 398], "hw": 120, "hfill": 120, "wfill": 120, "hi": 120, "lo": 120, "low": 120, "fill_zero_bw_t": 121, "_golden_function_fill_zero": 121, "floor_t": 122, "floor_bw_t": 123, "_golden_function_floor": 123, "floor_div_t": 124, "_golden_function_floor_div": 124, "fmod_t": 125, "_golden_function_fmod": 125, "fmod_bw_t": 126, "padded_shap": [127, 255], "pad_valu": [127, 132, 256, 294, 323, 358], "target_layout": [127, 128], "target_mem_config": [127, 128], "padded_tensor": 127, "output_mem_config": [127, 128], "unpadded_tensor": 128, "frac_t": 129, "_golden_function_frac": [129, 130], "frac_bw_t": 130, "param": [131, 254, 359], "tensor_on_devic": [131, 359], "tensor_on_host": [131, 359], "365234": 131, "130859": 131, "itself": 132, "twice": [132, 390], "purpos": [132, 386, 389, 391], "now": [132, 332, 362, 377, 391, 393, 397, 399], "mapper": 132, "cq_id": [132, 348, 362], "full_t": 133, "_golden_function_ful": 133, "filled_tensor": [133, 134], "full_like_t": 134, "templat": [134, 251, 384, 390], "gather_t": 135, "except": [135, 222, 305, 306, 397], "exce": 135, "do": [135, 386, 399], "sparse_grad": 135, "spars": [135, 333], "20": [135, 232, 254, 307, 326, 327, 388, 390, 398, 399], "40": [135, 226], "50": 135, "70": 135, "80": [135, 180, 388, 398], "index_tensor": 135, "input_tensor_ttnn": [135, 332], "index_tensor_ttnn": 135, "gathered_tensor": 135, "gcd_t": 136, "_golden_function_gcd": 136, "greatest": 136, "2147483648": 136, "tensorint32default": [136, 178], "ge_t": 137, "ge__t": 138, "_golden_function_ge_": 138, "geglu_t": 139, "_golden_function_geglu": 139, "part": [139, 144, 282, 346, 386, 390, 397], "gelu_t": 140, "uint8": [141, 162, 301, 323], "gez_t": 142, "global_avg_pool2d_t": 143, "golden_global_avg_pool2d": 143, "adapt": 143, "entir": [143, 348, 399], "typic": [143, 177, 304, 391, 398], "glu_t": 144, "_golden_function_glu": 144, "group_norm_t": 145, "_postprocess_golden_function_output": [145, 254], "num_group": 145, "input_mask": 145, "mask": [145, 364, 365, 368, 394, 395, 396, 397, 398, 399], "inplac": [145, 207, 209, 211, 213], "num_out_block": 145, "negative_mask": 145, "cb": [145, 390], "overlap": 145, "fact": 145, "rm": [145, 295, 388], "gt_t": 146, "gt__t": 147, "_golden_function_gt_": 147, "gtz_t": 148, "hardshrink_t": 149, "_golden_function_hardshrink": 149, "lambd": [149, 150, 328, 329], "hardshrink_bw_t": 150, "hardsigmoid_t": 151, "hardsigmoid_bw_t": 152, "_golden_function_hardsigmoid": 152, "hardswish_t": 153, "hardswish_bw_t": 154, "_golden_function_hardswish": 154, "hardtanh_t": 155, "_golden_function_hardtanh": 155, "min_val": 155, "max_val": 155, "hardtanh_bw_t": 156, "heaviside_t": 157, "_golden_function_heavisid": 157, "hypot_t": 158, "_golden_function_hypot": 158, "hypot_bw_t": 159, "i0_t": 160, "i0_bw_t": 161, "_golden_function_i0": 161, "identity_t": 162, "sfpu": 162, "shouldn": 162, "instead": [162, 288, 397], "sinc": 162, "lower": [162, 254, 388], "float16": 162, "imag_t": 163, "imag_bw_t": 164, "imaginari": 164, "indexed_fill_t": 165, "replac": [165, 355], "denot": 165, "batch_id": 165, "is_imag_t": 166, "is_real_t": 167, "isclose_t": 168, "_golden_function_isclos": 168, "leq": 168, "atol": 168, "rtol": 168, "otherwis": [168, 269, 348, 363, 397, 400], "rel": 168, "toler": 168, "05f": 168, "absolut": [168, 176], "08f": 168, "equal_nan": 168, "nan": 168, "treat": [168, 222, 304], "isfinite_t": 169, "isinf_t": 170, "isnan_t": 171, "isneginf_t": 172, "isposinf_t": 173, "fill_cache_for_user__t": 174, "popul": [174, 233, 390], "batch_index": 174, "update_cache_for_token__t": 175, "update_index": 175, "batch_offset": 175, "l1_loss_t": 176, "_golden_function_l1_loss": 176, "input_refer": [176, 236], "input_predict": [176, 236], "layer_norm_t": 177, "layer": [177, 295, 390, 394, 396, 398], "programconfig": [177, 295], "pre_all_gath": 177, "bf16": 177, "unshard": [177, 295, 306, 391], "cannot": [177, 295], "tile_height": 177, "tile_width": [177, 295, 305, 306], "stick": 177, "lcm_t": 178, "_golden_function_lcm": 178, "least": [178, 222, 390], "32767": 178, "32768": 178, "ldexp_t": 179, "ldexp_bw_t": 180, "outsid": 180, "le_t": 181, "le__t": 182, "_golden_function_le_": 182, "leaky_relu_t": 183, "_golden_function_leaky_relu": 183, "negative_slop": [183, 184], "slope": 183, "leaki": 183, "leaky_relu_bw_t": 184, "01": [184, 399], "lerp_t": 185, "_golden_function_lerp": 185, "point": [185, 326, 390, 391], "interpol": 185, "lerp_bw_t": 186, "lez_t": 187, "lgamma_t": 188, "lgamma_bw_t": 189, "_golden_function_lgamma": 189, "linear_t": 190, "behaviour": [190, 222], "transpose_a": [190, 222, 223], "transpose_b": [190, 222, 223], "128": [190, 222, 333, 394, 395, 396, 397, 398, 400], "log_t": 192, "log10_t": 193, "log10_bw_t": 194, "log1p_t": 195, "1e7": 195, "log1p_bw_t": 196, "log2_t": 197, "log2_bw_t": 198, "log_bw_t": 199, "_golden_function_log": 199, "logarithm": [199, 239], "log_sigmoid_t": 200, "log_sigmoid_bw_t": 201, "_golden_function_log_sigmoid": 201, "logaddexp_t": 202, "logaddexp2_t": 203, "logaddexp2_bw_t": 204, "logaddexp_bw_t": 205, "logical_and_t": 206, "_golden_function_logical_and": 206, "AND": [206, 207], "use_legaci": 206, "logical_and__t": 207, "logical_not_t": 208, "logical_not__t": 209, "_golden_function_logical_not_": 209, "logical_or_t": 210, "_golden_function_logical_or": 210, "OR": [210, 211, 294], "logical_or__t": 211, "logical_xor_t": 212, "_golden_function_logical_xor": 212, "land": [212, 213], "lnot": [212, 213], "lor": [212, 213], "logical_xor__t": 213, "xor": 213, "logit_t": 214, "_golden_function_logit": [214, 215], "logit_bw_t": 215, "logiteps_bw_t": 216, "logitep": 216, "lt_t": 217, "lt__t": 218, "_golden_function_lt_": 218, "ltz_t": 219, "mac_t": 220, "_golden_function_mac": 220, "context": [221, 280, 281], "manag": [221, 280, 281, 386, 388, 398], "exit": 221, "occur": 221, "matmul_t": 222, "dimension": [222, 239, 391], "dot": [222, 367, 368], "although": 222, "combin": [222, 393, 396], "variou": [222, 395], "abov": [222, 388, 391], "criteria": 222, "messag": [222, 390, 398, 399], "unexpect": 222, "obviou": 222, "relat": 222, "swap": 222, "j": [222, 324, 325], "implicitli": 222, "extend": 222, "patch": 222, "leverag": 222, "accord": [222, 256, 291, 307, 333, 399], "n_size": 222, "m_size": 222, "k_size": 222, "though": 222, "carefulli": 222, "fix": [222, 394, 399], "problem": 222, "matmul_batched_weights_t": 223, "input_tensors_b": 223, "max_t": 224, "computekernelconfig": [224, 228, 229, 340, 345, 378], "bessel": [224, 228, 229, 340, 345, 378], "max_bw_t": 225, "max_pool2d_t": 226, "golden_maxpool2d": 226, "window": [226, 394, 398], "nhw": 226, "scheme": [226, 265, 266, 267, 268], "input_h": [226, 398], "input_w": [226, 398], "ceil_mod": [226, 398], "applied_shard_schem": 226, "deallocate_input": 226, "return_indic": 226, "createdevic": 226, "l1_small_siz": [226, 252, 394, 398], "8192": [226, 363, 394, 398], "kernel_w": 226, "stride_h": 226, "stride_w": 226, "dilation_h": 226, "dilation_w": 226, "nchw_shape": 226, "256": [226, 398], "in_n": 226, "in_c": 226, "in_h": 226, "in_w": 226, "input_perm": 226, "input_reshap": 226, "tt_input": 226, "tt_input_dev": 226, "tt_output": [226, 305, 306], "in_place_halo": 226, "maximum_t": 227, "_golden_function_maximum": 227, "tensorsupport": 227, "16777216": 227, "mean_t": 228, "min_t": 229, "min_bw_t": 230, "minimum_t": 231, "_golden_function_minimum": 231, "mish_t": 232, "inf": [232, 238], "initialize_model": [233, 234, 385], "nn": [233, 234, 387, 392, 393, 396, 398], "model_nam": [233, 234, 385], "convert_to_ttnn": [233, 234, 385], "custom_preprocessor": [233, 234, 385], "dict": [233, 234, 398], "parameterdict": [233, 234], "prefix": [233, 234], "run_model": 233, "reader_patterns_cach": 233, "disabl": [233, 234, 394, 395, 396, 397, 398, 399, 400], "git": [233, 234, 388], "doesn": [233, 234], "invalid": [233, 234], "preprocessor": [233, 234], "put": [233, 234, 385, 394, 395, 396, 397, 398], "submodul": [233, 234, 388, 396, 398], "appear": [233, 234], "ttnn_module_arg": 233, "tmp": [233, 399], "model_graph": 233, "svg": [233, 400], "recomput": 233, "moreh_sum_t": 235, "mse_loss_t": 236, "_golden_function_mse_loss": 236, "mul_bw_t": 237, "multigammaln_t": 238, "multigammaln_bw_t": 239, "_golden_function_mvlgamma": 239, "multivari": 239, "mvlgamma": 239, "5f": 239, "multiply_t": 240, "ne_t": 241, "ne__t": 242, "_golden_function_ne_": 242, "neg_t": 243, "neg_bw_t": 244, "_golden_function_neg": 244, "nextafter_t": 245, "_golden_function_nextaft": 245, "_float": 245, "neq": 245, "nez_t": 246, "nonzero_t": 247, "well": [247, 333, 388, 389, 395], "normalize_global_t": 248, "_golden_function_normalize_glob": 248, "normalize_hw_t": 249, "_golden_function_normalize_hw": 249, "ones_t": 250, "ones_like_t": 251, "trace_region_s": 252, "dispatch_core_config": 252, "dispatchcoreconfig": 252, "0x7f909f535ff0": 252, "worker_l1_s": 252, "default_l1_small_s": 252, "default_trace_region_s": 252, "allocat": 252, "dispatch_core_typ": 252, "dispatchcoretyp": 252, "dispatch": [252, 390], "worker": [252, 394, 395, 396, 397, 398], "0x7fbac5bfc1b0": 252, "outer_t": 253, "_golden_function_out": 253, "otim": 253, "pad_t": 254, "_preprocess_golden_function_input": 254, "locat": [254, 387, 390, 392, 399, 400], "mutual": 254, "output_tensor_shap": [254, 358], "input_tensor_start": 254, "union": 254, "use_multicor": [254, 357, 358, 375, 376], "pad_input": 254, "assert": [254, 397, 400], "unpadded_shap": 255, "annot": [255, 386], "fixeds": 255, "permute_t": 256, "nullopt": [256, 363, 398], "tthe": 256, "broken": 256, "random": [256, 394, 396, 398], "garbag": 256, "polar_t": 257, "cartesian": 257, "theta": 257, "polar_bw_t": 258, "polygamma_t": 259, "_golden_function_polygamma": 259, "decim": [259, 296], "polygamma_bw_t": 260, "polyval_t": 261, "_golden_function_polyv": 261, "coeffici": [261, 386], "coeff": 261, "sum_": [261, 324, 325], "polynomi": 261, "pow_t": 262, "_golden_function_pow": 262, "expon": [262, 263, 298, 299, 391], "pow_bw_t": 263, "power": [263, 374, 399], "prelu_t": 264, "_golden_function_prelu": 264, "arrai": [264, 395], "invoc": [265, 266, 267, 268], "exact": [265, 266, 267, 268, 391], "input_memory_config": [265, 266, 267, 268], "input_layout": [265, 266, 267, 268], "input_dtyp": [265, 266, 267, 268], "output_dtyp": [265, 266, 267, 268], "convtranspose2d": [266, 267], "conv_tranpose2d": 267, "weights_format": [267, 268], "iohw": 267, "has_bia": [267, 268], "term": [267, 268, 389], "oihw": 268, "prod_t": 269, "everi": [269, 386, 390, 395, 397, 399, 400], "squeez": [269, 362], "output_all_dim": 269, "prod_bw_t": 270, "particular": [270, 385, 400], "taken": 270, "all_dims_output": 270, "rad2deg_t": 271, "rad2deg_bw_t": 272, "_golden_function_rad2deg": 272, "rdiv_t": 273, "_golden_function_rdiv": 273, "consid": 273, "numer": [273, 304, 305, 306, 324, 325, 326, 387, 391], "rounding_mod": 273, "rdiv_bw_t": 274, "real_t": 275, "real_bw_t": 276, "new_tensor": 277, "my_memory_config": 277, "reciprocal_t": 278, "inaccur": [278, 391], "fp": 278, "reciprocal_bw_t": 279, "_golden_function_reciproc": 279, "being": [280, 281, 390, 391], "reglu_t": 282, "_golden_function_reglu": 282, "relu_t": 283, "relu6_t": 284, "relu6_bw_t": 285, "_golden_function_relu6": 285, "relu_bw_t": 286, "_golden_function_relu": 286, "relu_max_t": 287, "_golden_function_relu_max": 287, "upper_limit": 287, "cap": 287, "relu_min_t": 288, "_golden_function_relu_min": 288, "lower_limit": 288, "remainder_t": 289, "_golden_function_remaind": 289, "modulu": 289, "remainder_bw_t": 290, "whb0": 290, "repeat_t": 291, "repetit": [291, 293], "repetition_vector": 291, "smallvector": 291, "repeat_bw_t": 292, "repeat_interleave_t": 293, "he": 293, "expand": [293, 391, 395], "torch_input_tensor": [293, 400], "torch_result": 293, "reshape_t": 294, "cost": 294, "view": [294, 390, 396, 398, 399, 400], "new_shap": 294, "kwtype": 294, "rms_norm_t": 295, "root": [295, 301, 335, 364, 365, 396, 398, 399], "round_t": 296, "_golden_function_round": [296, 297], "No": [296, 394, 396], "round_bw_t": 297, "rpow_t": 298, "_golden_function_rpow": 298, "upto": 298, "28": [298, 396], "posit": [298, 368], "rpow_bw_t": 299, "rsqrt_t": 300, "rsqrt_bw_t": 301, "_golden_function_rsqrt": 301, "rsub_t": 302, "_golden_function_rsub": 302, "rsub_bw_t": 303, "subract": 303, "revers": 303, "scale_causal_mask_hw_dims_softmax_in_place_t": 304, "causal": [304, 305, 306, 364, 365, 367], "hw_dims_onli": 304, "d_k": 304, "numeric_st": [304, 305, 306, 324, 325], "stabl": [304, 305, 306, 324, 325, 332, 393], "constrain": 304, "compute_grid_s": [304, 305, 306], "num_cores_r": [304, 305, 306], "384": [304, 305, 306, 385, 397], "768": [304, 305, 306, 397], "attention_mask_t": [304, 305, 306], "input_til": 304, "grid_coord": [304, 306], "shard_grid": [304, 306], "corerang": [304, 306], "shard_shap": [304, 306], "shard_spec": [304, 306], "shardspec": [304, 306], "sharded_mem_config": [304, 306], "buffertyp": [304, 306], "input_shard": [304, 306], "tt_output_shard": 304, "scale_mask_softmax_t": 305, "commonli": [305, 306], "mechan": [305, 306], "inherit": [305, 324], "is_causal_mask": [305, 306], "fuse_head": [305, 306], "scale_mask_softmax_in_place_t": 306, "restrict": [306, 388], "scatter_t": 307, "onto": 307, "src": 307, "destin": 307, "amax": 307, "amin": 307, "info": [307, 332, 393, 394, 395, 396, 397, 398, 399], "input_torch": 307, "index_torch": 307, "int64": 307, "source_torch": 307, "input_ttnn": 307, "index_ttnn": 307, "source_ttnn": 307, "selu_t": 308, "_golden_function_selu": [308, 309], "0507": 308, "67326": 308, "selu_bw_t": 309, "short": [310, 400], "sigmoid_t": 311, "vector_mod": 311, "rc": [311, 388], "sigmoid_accurate_t": 312, "sigmoid_bw_t": 313, "_golden_function_sigmoid": 313, "sign_t": 314, "sign_bw_t": 315, "signbit_t": 316, "silu_t": 317, "silu_bw_t": 318, "_golden_function_silu": 318, "sin_t": 319, "sin_bw_t": 320, "sinh_t": 321, "sinh_bw_t": 322, "slice_t": 323, "slice_start": 323, "input_tensor_shap": 323, "slice_end": 323, "slice_step": 323, "unmodifi": 323, "undefin": 323, "16": [323, 391, 395, 397, 398], "softmax_t": 324, "x_i": [324, 325], "x_j": [324, 325], "softmax_in_place_t": 325, "consum": 325, "90": [325, 398], "softplus_t": 326, "steep": 326, "higher": [326, 390, 391], "steeper": 326, "approach": [326, 385, 389, 400], "hard": 326, "stabil": [326, 389], "softplus_bw_t": 327, "softshrink_t": 328, "_golden_function_softshrink": 328, "softshrink_bw_t": 329, "softsign_t": 330, "softsign_bw_t": 331, "sort_t": 332, "ascend": 332, "descend": 332, "preserv": 332, "sorted_tensor": 332, "sorted_tensor_desc": 332, "indices_desc": 332, "input_tensor_tnn": 332, "input_tensor_2d": 332, "input_tensor_2d_ttnn": 332, "sorted_tensor_dim": 332, "indices_dim": 332, "sparse_matmul_t": 333, "sparsiti": 333, "expert": 333, "nnz": 333, "is_input_a_spars": 333, "skip": [333, 368], "512": 333, "hidden": 333, "expert_weight": 333, "bitmask": 333, "sparsity_bitmask": 333, "simplifi": 333, "goe": 333, "sqrt_t": 334, "sqrt_bw_t": 335, "_golden_function_sqrt": 335, "square_t": 336, "255": 336, "square_bw_t": 337, "_golden_function_squar": 337, "squared_difference_t": 338, "_golden_function_squared_differ": 338, "squared_difference_bw_t": 339, "std_t": 340, "sub_bw_t": 341, "subalpha_t": 342, "_golden_function_subalpha": 342, "subalpha_bw_t": 343, "subtract_t": 344, "sum_t": 345, "swiglu_t": 346, "_golden_function_swiglu": 346, "swish_t": 347, "queueid": 348, "synchron": [348, 399, 400], "wait": [348, 390], "complet": [348, 392, 393, 394, 395, 396, 397, 398, 399], "associ": [348, 399], "ran": [348, 390, 397], "chip": [348, 394, 395, 396, 397, 398, 399], "set_sub_device_stall_group": 348, "queu": 348, "tan_t": 349, "tan_bw_t": 350, "_golden_function_tan": 350, "tanh_t": 351, "faster": [351, 353, 390, 397], "minor": [351, 353], "approx": [351, 353], "tanh_bw_t": 352, "_golden_function_tanh": 352, "tanhshrink_t": 353, "_golden_function_tanhshrink": [353, 354], "tanhshrink_bw_t": 354, "threshold_t": 355, "_golden_function_threshold": [355, 356], "threshold_bw_t": 356, "tilize_t": 357, "_nop_golden_funct": 357, "acceler": [357, 358, 375, 376, 388, 396], "tilize_with_val_padding_t": 358, "800781": 359, "455078": 359, "585938": 359, "to_layout_t": 360, "organ": [360, 386, 391], "becom": [360, 399], "42188": 360, "398438": 360, "to_memory_config_t": 361, "torch_rank": [362, 400], "Will": 362, "reach": 362, "mesh_compos": 362, "cppmeshtotensor": 362, "ttnn_tensor": 362, "torch_tensor": [362, 395], "3008": 362, "8438": [362, 395], "3242": 362, "9023": 362, "5820": 362, "5312": 362, "topk_t": 363, "_create_golden_function_topk": 363, "largest": [363, 391], "smallest": 363, "sure": [363, 400], "top": 363, "sub_core_grid": [363, 375], "indices_tensor": 363, "bfloat8": 363, "output_value_tensor": 363, "output_index_tensor": 363, "4d": 363, "65536": 363, "topk_valu": 363, "topk_indic": 363, "attention_softmax_t": 364, "head_siz": [364, 365, 366, 369, 397], "attention_mask": [364, 365, 397], "causal_mask": [364, 365], "attention_softmax__t": 365, "concatenate_heads_t": 366, "num_head": [366, 369, 397], "sequence_s": [366, 369, 385, 397], "scaled_dot_product_attention_t": 367, "mimick": 367, "flashattent": 367, "accept": [367, 368, 386, 389, 398], "sdpaprogramconfig": [367, 368], "q": [367, 368], "parallel": [367, 368, 390, 395, 399], "nqh": 367, "input_tensor_q": [367, 368], "dh": [367, 368], "input_tensor_k": [367, 368], "nkv": [367, 368], "input_tensor_v": [367, 368], "attn_mask": [367, 368], "impli": 367, "is_caus": [367, 368], "scaled_dot_product_attention_decode_t": 368, "decod": 368, "flash": [368, 388], "mqa": 368, "sdpamulticoreprogramconfig": 368, "nh": 368, "cur_po": 368, "cur_pos_tensor": 368, "pnh": 368, "split_query_key_value_and_split_heads_t": 369, "hidden_s": [369, 385, 397], "Then": [369, 385, 388, 399], "them": [369, 388, 390, 393, 395, 396], "readi": [369, 386], "score": 369, "kv_input_tensor": 369, "q1": 369, "k1": 369, "v1": [369, 388], "qn": 369, "kn": 369, "vn": 369, "cat": [369, 397], "num_kv_head": 369, "contigu": [369, 391, 398], "transpose_kei": 369, "num": 369, "tril_t": 370, "diagon": [370, 371], "triu_t": 371, "trunc_t": 372, "_golden_function_trunc": [372, 373], "trunc_bw_t": 373, "unary_chain_t": 374, "ops_chain": 374, "unarywithparam": 374, "chain": 374, "unaryoptyp": 374, "untilize_t": 375, "use_pack_until": [375, 376], "untilize_with_unpadding_t": 376, "output_tensor_end": 376, "upsample_t": 377, "form": 377, "nearest": 377, "scale_factor": 377, "array2d": 377, "var_t": 378, "where_t": 379, "_golden_function_wher": 379, "where_bw_t": 380, "xlogy_t": 381, "_golden_function_xlogi": 381, "xlogy_bw_t": 382, "zeros_t": 383, "zeros_like_t": 384, "basi": 385, "rewritten": 385, "bert": 385, "modeling_bert": 385, "bertintermedi": 385, "__init__": 385, "super": 385, "dens": 385, "intermediate_s": 385, "hidden_st": [385, 397], "tdd": 385, "pytest": [385, 386, 390, 399, 400], "torch_bert": 385, "utility_funct": 385, "torch_random": 385, "utils_for_test": 385, "assert_with_pcc": 385, "mark": [385, 386], "parametr": 385, "phiyodr": 385, "finetun": 385, "squad2": 385, "test_bert_intermedi": 385, "manual_se": [385, 394, 397, 398, 400], "bertconfig": 385, "from_pretrain": 385, "eval": 385, "torch_hidden_st": [385, 397], "torch_output": [385, 397], "bert_intermedi": 385, "9999": [385, 399, 400], "dictionari": [385, 398], "turn": 385, "ttnn_bert": 385, "999": [385, 396], "someth": 385, "ttnn_optimized_bert": 385, "isinst": 385, "preprocess_linear_weight": [385, 397], "preprocess_linear_bia": [385, 397], "num_cores_x": [385, 397], "ff1_weight": 385, "ff1_bia": 385, "best": 385, "integr": [385, 386], "incredibli": 386, "excit": 386, "exploratori": 386, "folder": [386, 390], "freedom": 386, "showcas": 386, "few": [386, 391, 398], "question": 386, "answer": 386, "highlight": [386, 391], "successfulli": [386, 393], "migrat": [386, 400], "good": 386, "readm": [386, 388], "md": [386, 388], "describ": [386, 398], "credit": 386, "author": 386, "might": 386, "encount": 386, "demonstr": [386, 390, 393, 395, 396, 398], "adequ": 386, "pearson": 386, "ci": 386, "pipelin": [386, 390, 396], "unit": [386, 388], "metric": 386, "meet": 386, "continu": [386, 388, 389], "upon": 386, "commit": 386, "ongo": 386, "complianc": 386, "catch": 386, "regress": 386, "earli": 386, "collect": [386, 390, 392, 396, 399], "varieti": 386, "instruct": [386, 387, 388, 390, 392, 400], "measur": 386, "run_device_perf_model": 386, "run_perform": 386, "sh": [386, 388, 390, 399, 400], "models_device_performance_bare_met": 386, "clear": [386, 389, 394, 395, 396, 397, 398], "autom": 386, "extern": [386, 389, 391], "servic": 386, "workflow": [386, 388, 399], "impl": 386, "yaml": 386, "models_performance_bare_met": 386, "run_demos_single_card_n150_test": 386, "run_demos_single_card_n300_test": 386, "run_t3000_demo_test": 386, "test_ttnn_functional_resnet50": 386, "resnet50testinfra": 386, "friendli": 387, "ml": [387, 388], "http": [387, 388, 399], "com": [387, 388], "guid": [387, 388, 392, 399], "choic": 387, "jupyt": 387, "notebook": 387, "comprehens": [388, 399], "stack": 388, "deploy": 388, "find": [388, 399], "asset": 388, "tag": 388, "quick": [388, 394, 398], "download": [388, 396, 398], "curl": 388, "fssl": 388, "chmod": 388, "podman": 388, "warn": [388, 390, 394, 395, 396, 397, 398], "galaxi": 388, "4u": 388, "blackhol": 388, "driver": [388, 394, 395, 396, 397, 398, 399], "kmd": [388, 394, 395, 396, 397, 398, 399], "firmwar": 388, "smi": 388, "ubuntu": 388, "04": [388, 395], "33": 388, "fw_pack": 388, "v2": 388, "18": 388, "fwbundl": 388, "v18": 388, "v3": 388, "17": [388, 398], "fw": [388, 390, 394, 395, 396, 397, 398], "34": [388, 394, 395, 396, 397, 398, 399], "visit": [388, 399], "compon": 388, "immedi": 388, "ai": [388, 394, 395, 396, 397, 398], "closer": 388, "conveni": 388, "who": [388, 391], "linux": 388, "distro": 388, "glibc": 388, "newer": 388, "pip": [388, 399, 400], "cpu": [388, 390, 394, 395, 396, 397, 398], "governor": 388, "export": [388, 399, 400], "pythonpath": 388, "pwd": 388, "python_env": [388, 399], "dev": 388, "txt": [388, 399], "sudo": [388, 390], "apt": 388, "cpufrequtil": 388, "cpupow": 388, "frequenc": 388, "registri": 388, "pull": [388, 389, 394], "ghcr": 388, "io": [388, 390], "amd64": 388, "bash": 388, "recurs": 388, "simplest": 388, "install_depend": 388, "build_met": [388, 390, 399], "cmake": 388, "mkdir": 388, "cd": [388, 390], "ninja": 388, "dcmake_build_typ": 388, "relwithdebuginfo": 388, "dcmake_cxx_compil": 388, "compil": [388, 396, 397, 400], "envirion": 388, "python_env_dir": 388, "path_to_your_env_directori": 388, "create_venv": 388, "bin": 388, "driven": [388, 389], "recip": 388, "conda": 388, "forg": 388, "tt_metal_hom": [388, 390, 393, 394, 395, 396, 397, 398], "python3": [388, 392, 393, 394, 395, 396, 397, 398], "run_op_on_devic": 388, "eth": 388, "rout": 388, "loudbox": 388, "quietbox": 388, "iommu": [388, 394, 395, 396, 397, 398, 399], "level": [388, 390, 393, 395, 399], "isol": 388, "passthrough": 388, "On": 388, "translat": 388, "viommu": 388, "hypervisor": 388, "secur": 388, "dma": 388, "pcie": 388, "guest": 388, "corrupt": 388, "reliabl": [388, 389], "intel_iommu": 388, "amd_iommu": 388, "provis": 388, "remap": 388, "intel": 388, "vt": 388, "amd": 388, "vi": [388, 399], "intend": 389, "maintain": 389, "simultan": [389, 399], "tune": 389, "themselv": [389, 391], "goal": 389, "ask": 389, "popular": 389, "kent": 389, "beck": 389, "submit": 389, "label": [389, 391, 396, 398], "fulli": [389, 390, 396, 398], "fallback": 389, "branch": 389, "brief": 389, "4730": 389, "rst": 389, "referenc": 389, "sweep": 389, "codeown": 389, "pr": 389, "reflect": 389, "merg": 389, "main": [389, 393, 394, 395, 396, 397, 398, 399, 400], "comment": 389, "resnet": 390, "test_perf_resnet": 390, "test_perf_bare_met": 390, "0185": 390, "finish": 390, "csv": [390, 399], "consol": 390, "similar": [390, 397, 399], "give": [390, 399], "shorter": 390, "append": 390, "cli": 390, "explain": 390, "reset": 390, "tt_smi": 390, "tensix_reset": 390, "tensix": [390, 395], "skew": 390, "timer": 390, "reboot": 390, "wh": 390, "analyz": [390, 399], "1000": [390, 394, 395, 396, 397, 398], "fixtur": 390, "ttl": 390, "readdeviceprofil": 390, "total": [390, 396, 398], "drop": 390, "around": [390, 397], "120": [390, 398], "eighth": 390, "receiv": 390, "mention": 390, "risc": 390, "those": [390, 398], "flow": [390, 399], "come": 390, "python_fallback": 390, "tt_dnn_cpu": 390, "tt_dnn_devic": 390, "global": [390, 399], "fidel": 390, "field": 390, "lofi": 390, "hifi2": 390, "hifi3": 390, "clock": 390, "stamp": 390, "durat": [390, 397, 400], "nanosecond": 390, "end_t": 390, "start_t": 390, "cycl": 390, "earliest": 390, "core_frequ": 390, "marker": 390, "brisc": 390, "ncrisc": 390, "trisc0": 390, "trisc1": 390, "trisc2": 390, "front": 390, "spent": [390, 397], "cb_wait_front": 390, "reserv": 390, "cb_reserve_back": 390, "datamov": 390, "input_0_memori": 390, "z": 390, "channels_last": 390, "dev_0_dram": 390, "dec_0_l1": 390, "noc": 390, "timelin": 390, "npe": 390, "subdirectori": 390, "npe_viz": 390, "traffic": 390, "congest": 390, "properli": [390, 394], "item": [390, 396, 398], "aggreg": 390, "timestamp": [390, 399], "ops_perf_results_2025_06_25_14_04_34": 390, "2025_06_25_14_04_34": 390, "actual": [391, 396, 398], "4x4": 391, "32x32": [391, 395], "still": 391, "transit": 391, "2x2": 391, "illustr": 391, "insid": [391, 400], "isn": 391, "16x16": 391, "per": [391, 399], "li": 391, "fashion": [391, 397], "face0": 391, "face1": 391, "face2": 391, "face3": 391, "pictur": 391, "reason": 391, "engin": 391, "matric": 391, "decompos": 391, "transpose_til": 391, "col": 391, "torch_t": 391, "byte": 391, "That": 391, "sizeof": 391, "introduc": [391, 395], "observ": [391, 398], "magnitud": [391, 397], "flush": 391, "instabl": 391, "extrem": 391, "infin": 391, "domin": 391, "caus": 391, "lose": 391, "7014118346046923e": 391, "frequent": 391, "occurr": 391, "uniform": 391, "deal": 391, "critic": 391, "applic": [391, 399], "homogen": 391, "unsuit": 391, "inher": 391, "owned_host_storag": 391, "borrowed_host_storag": 391, "borrow": 391, "numpi": [391, 395, 396], "device_storag": 391, "abstract": 391, "awai": 391, "compress": 391, "upper": 391, "learn": [391, 393, 394, 395], "remain": 391, "128x128": 391, "subset": 391, "know": 391, "understand": [391, 399], "coordin": 391, "physic": 391, "task": [392, 396], "smoothli": 392, "lightweight": 392, "minim": 392, "standalon": 392, "basic_python": [392, 393, 394, 395, 396, 397, 398], "llama": 393, "mistral": 393, "diffus": 393, "ttnn_add_tensor": 393, "loguru": [393, 394, 395, 396, 397, 398], "logger": [393, 394, 395, 396, 397, 398], "tt_tensor1": 393, "tt_tensor2": 393, "tt_result": 393, "As": [393, 397], "2025": [393, 394, 395, 396, 397, 398, 399], "06": [393, 397], "23": 393, "09": [393, 394, 399], "36": 393, "58": 393, "211": 393, "__main__": [393, 394, 395, 396, 397, 398], "29": [393, 395], "37": 393, "00": [393, 396, 398], "524": 393, "525": 393, "present": 394, "ttnn_basic_conv": 394, "state": 394, "extra": [394, 398], "asid": [394, 398], "portion": [394, 398], "slide": [394, 398], "scratchpad": [394, 398], "kb": [394, 398], "enough": [394, 398], "amongst": [394, 398], "bchw": 394, "permuted_input": 394, "flat": 394, "reshaped_input": 394, "out_torch": 394, "f": [394, 395, 396, 397, 398, 400], "everyth": [394, 395, 396, 397, 398, 399], "07": [394, 395, 396, 397, 398], "02": [394, 399], "649": 394, "silicondriv": [394, 395, 396, 397, 398, 399], "pci": [394, 395, 396, 397, 398, 399], "pci_devic": [394, 395, 396, 397, 398, 399], "198": [394, 395, 396, 397, 398], "651": 394, "658": 394, "tt_cluster": [394, 395, 396, 397, 398, 399], "190": [394, 395, 396, 397, 398], "659": 394, "666": 394, "667": 394, "673": 394, "harvest": [394, 395, 396, 397, 398, 399], "0x100": [394, 395, 396, 397, 398], "noc0": [394, 395, 396, 397, 398, 399], "0x0": [394, 395, 396, 397, 398, 399], "cluster": [394, 395, 396, 397, 398, 399], "282": [394, 395, 396, 397, 398], "772": 394, "817": 394, "remot": [394, 395, 396, 397, 398, 399], "147": [394, 395, 396, 397, 398], "828": 394, "ethernet": [394, 395, 396, 397, 398], "1039": [394, 395, 396, 397, 398], "915": 394, "clk": [394, 395, 396, 397, 398], "mhz": [394, 395, 396, 397, 398], "metal_context": [394, 395, 396, 397, 398], "487": 394, "428": [394, 395, 396, 397, 398], "489": 394, "unabl": [394, 395, 396, 397, 398], "thread": [394, 395, 396, 397, 398, 399, 400], "hardware_command_queu": [394, 395, 396, 397, 398], "74": [394, 395, 396, 397, 398], "921": 394, "reprocess": 394, "563": 394, "922": 394, "582": 394, "390": 394, "78": 394, "mesh_devic": [394, 395, 396, 397, 398], "488": [394, 395, 396, 397, 398], "391": 394, "468": [394, 395, 396, 397, 398], "783": [394, 395, 396, 397, 398], "392": 394, "ttnn_basic_oper": 395, "np": [395, 396], "host_rand": 395, "amount": 395, "to_tt_til": 395, "helper": 395, "tt_t1": 395, "transfer": 395, "tt_t2": 395, "tt_t3": 395, "tt_t4": 395, "t5": 395, "tt_t5": 395, "add_result": 395, "mul_result": 395, "mul": [395, 397], "matmul_result": 395, "bmatrix": 395, "rightarrow": 395, "broadcast_vector": 395, "broadcast_tt": 395, "broadcast_add_result": 395, "850": 395, "852": [395, 396], "859": 395, "860": 395, "866": 395, "867": 395, "873": 395, "970": 395, "015": 395, "025": 395, "111": 395, "678": 395, "680": 395, "537": 395, "564": 395, "47": 395, "08": [395, 399], "072": 395, "49": 395, "82812": 395, "04688": 395, "32812": 395, "00781": 395, "39844": 395, "03906": 395, "14844": 395, "24219": 395, "65625": 395, "31250": 395, "21094": 395, "21875": 395, "33594": 395, "37500": 395, "62500": 395, "670": 395, "52": 395, "12500": 395, "23438": 395, "96875": 395, "02600": 395, "97656": 395, "18164": 395, "87891": 395, "44531": 395, "48438": 395, "50781": 395, "35938": 395, "229": 395, "55": [395, 397], "50000": 395, "25000": 395, "56250": 395, "43750": 395, "57": 395, "231": 395, "59": 395, "233": 395, "63": 395, "8242": 395, "0469": 395, "2500": 395, "0000": 395, "3750": 395, "3945": 395, "0391": 395, "5625": 395, "1250": 395, "2188": 395, "8750": 395, "4375": 395, "7500": 395, "6250": 395, "7422": 395, "1484": 395, "9531": 395, "5000": 395, "6562": 395, "3281": 395, "0938": 395, "2158": 395, "3359": 395, "234": 395, "insight": [396, 398, 399], "ttnn_mlp_inference_mnist": 396, "essenti": 396, "digit": 396, "classif": [396, 398], "perceptron": 396, "manipul": 396, "torchvis": [396, 398], "disk": [396, 398, 399, 400], "throughout": [396, 398, 399], "statu": 396, "predict": [396, 398], "backend": 396, "outcom": 396, "28x28": 396, "grayscal": 396, "dataload": [396, 398], "through": [396, 398, 399], "totensor": [396, 398], "testset": [396, 398], "testload": [396, 398], "shuffl": [396, 398], "train_and_export_mlp": 396, "mlp_mnist_weight": 396, "pt": [396, 398], "poor": [396, 398], "w1": 396, "b1": 396, "w2": 396, "b2": 396, "w3": [396, 398], "b3": [396, 398], "correctli": 396, "snippet": [396, 398, 400], "five": [396, 398], "counter": [396, 398], "sequenti": 396, "three": 396, "raw": 396, "enumer": [396, 398], "break": [396, 398], "_layout": 396, "image_tt": 396, "1x128": 396, "w1_final": 396, "b1_final": 396, "out1": 396, "w2_final": 396, "b2_final": 396, "out2": 396, "w3_final": 396, "b3_final": 396, "out3": 396, "predicted_label": [396, 398], "ntt": [396, 398], "100": [396, 398], "2f": [396, 398], "03": 396, "41": 396, "990": 396, "992": 396, "998": 396, "006": 396, "007": 396, "013": 396, "110": 396, "172": 396, "182": [396, 398], "268": 396, "886": 396, "888": 396, "44": 396, "48": 396, "677": 396, "682": 396, "686": 396, "690": 396, "695": 396, "89": [396, 398], "696": 396, "697": 396, "therefor": 397, "multi_head_attent": 397, "query_weight": 397, "query_bia": 397, "key_weight": 397, "key_bia": 397, "value_weight": 397, "value_bia": 397, "output_weight": 397, "output_bia": 397, "fallback_reshap": 397, "get_fallback_funct": [397, 400], "attention_scor": 397, "attention_prob": 397, "context_lay": 397, "self_output": 397, "torch_attention_mask": 397, "torch_query_weight": 397, "torch_query_bia": 397, "torch_key_weight": 397, "torch_key_bia": 397, "torch_value_weight": 397, "torch_value_bia": 397, "torch_output_weight": 397, "torch_output_bia": 397, "fly": 397, "fortun": 397, "ahead": 397, "data_typ": 397, "optimized_multi_head_attent": 397, "fused_qkv_weight": 397, "fused_qkv_bia": 397, "self_output_weight": 397, "self_output_bia": 397, "fused_qkv_output": 397, "context_layer_after_concatenate_head": 397, "qkv": 397, "torch_qkv_weight": 397, "torch_qkv_bia": 397, "qkv_weight": 397, "qkv_bia": 397, "optimized_output": 397, "torch_optimized_output": 397, "allclos": 397, "ttnn_multihead_attent": 397, "769": 397, "776": [397, 399], "777": 397, "784": 397, "790": 397, "887": 397, "931": 397, "942": 397, "027": [397, 398], "603": 397, "605": 397, "51": [397, 399], "001": 397, "132": [397, 398], "265338897705078": 397, "056": 397, "151": [397, 398], "05480194091796875": 397, "363": 397, "259": 397, "2866740226745605": 397, "366": 397, "274": 397, "002416849136352539": 397, "417": 397, "418": 397, "460": 397, "pixel": 398, "cifar10": 398, "train_and_export_cnn": 398, "simple_cnn_cifar10_weight": 398, "conv1": 398, "conv2": 398, "fc1": 398, "fc2": 398, "conv_pool_stag": 398, "encapsul": 398, "undergo": 398, "metadata": 398, "again": 398, "record": 398, "modular": 398, "flexibl": [398, 399], "input_nhwc": 398, "conv_outchannel": 398, "weight_str": 398, "bias_str": 398, "activation_str": 398, "log_first_sampl": 398, "conv_kernel_s": 398, "conv_strid": 398, "conv_pad": 398, "conv1_out": 398, "max_pool2d_kernel_s": 398, "max_pool2d_strid": 398, "max_pool2d_pad": 398, "max_pool2d_dil": 398, "max_pool2d_out": 398, "simplecnn": 398, "rearrang": 398, "obtain": 398, "ttnn_imag": 398, "ttnn_image_permu": 398, "log_thi": 398, "conv1_pool": 398, "conv2_pool": 398, "fc": 398, "out_flat": 398, "w4": 398, "b4": 398, "w3_tt": 398, "b3_tt": 398, "x_tt": 398, "w4_tt": 398, "b4_tt": 398, "ttnn_simplecnn_infer": 398, "041": 398, "043": 398, "050": 398, "051": 398, "057": 398, "058": 398, "064": 398, "161": 398, "224": 398, "235": 398, "321": 398, "889": 398, "891": 398, "19": 398, "734": 398, "471": 398, "075": 398, "86": 398, "88": 398, "076": 398, "91": 398, "92": 398, "93": 398, "1x1": 398, "94": 398, "95": 398, "96": [398, 400], "97": 398, "98": 398, "99": 398, "enable_subblock_pad": 398, "101": 398, "960": 398, "129": 398, "130": 398, "131": 398, "961": 398, "133": 398, "134": 398, "135": 398, "136": 398, "137": 398, "138": 398, "139": 398, "026": 398, "157": [398, 399], "158": 398, "121": 398, "669": 398, "238": 398, "166": 398, "181": 398, "240": 398, "183": 398, "ll": 399, "offer": 399, "intuit": 399, "depth": 399, "searchabl": 399, "plot": 399, "placement": 399, "peak": 399, "hierarch": 399, "server": 399, "ssh": 399, "instanc": 399, "opportun": 399, "watch": 399, "walkthrough": 399, "video": 399, "offlin": 399, "launch": 399, "localhost": 399, "8000": 399, "chrome": 399, "greet": 399, "homepag": 399, "yolov4": 399, "320x320": 399, "coco": 399, "predefin": 399, "wrap": 399, "ttnn_config_path": [399, 400], "inlin": 399, "overrid": [399, 400], "ttnn_config_overrid": [399, 400], "past": 399, "enable_fast_runtime_mod": [399, 400], "enable_log": [399, 400], "report_nam": [399, 400], "ttnn_visualizer_tutori": 399, "enable_graph_report": [399, 400], "enable_detailed_buffer_report": [399, 400], "enable_detailed_tensor_report": [399, 400], "enable_comparison_mod": [399, 400], "free": 399, "test_ttnn_yolov4": 399, "test_yolov4": 399, "pretrained_weight_tru": 399, "At": 399, "664": 399, "73": 399, "665": 399, "83": 399, "cache_path": 399, "model_cache_path": 399, "tmp_dir": 399, "enable_model_cach": 399, "throw_exception_on_fallback": 399, "comparison_mode_should_raise_except": 399, "comparison_mode_pcc": [399, 400], "root_report_path": 399, "4042956046390500517": 399, "754": 399, "197": 399, "758": 399, "192": 399, "761": 399, "764": 399, "0x80": 399, "295": 399, "836": 399, "navig": 399, "json": [399, 400], "db": 399, "sqlite": 399, "traci": 399, "termin": 399, "session": 399, "unset": 399, "regener": 399, "Or": 399, "731": 399, "process_ops_log": 399, "generate_report": 399, "905": 399, "2025_08_01_10_51_02": 399, "ops_perf_results_2025_08_01_10_51_02": 399, "ops_perf_results_": 399, "device_profile_log": 399, "went": 399, "bottom": 399, "filter": 399, "click": 399, "inspect": 399, "breakdown": 399, "relationship": 399, "easi": 399, "candid": 399, "tabl": 399, "chart": 399, "lifetim": 399, "estim": 399, "headroom": 399, "pinpoint": 399, "ineffici": 399, "node": 399, "edg": 399, "zoom": 399, "pan": 399, "subnetwork": 399, "flop": 399, "underutil": 399, "toggl": 399, "hint": 399, "suboptim": 399, "summar": 399, "deepli": 399, "architectur": 400, "2024": 400, "torch_input_tensor_a": 400, "torch_input_tensor_b": 400, "matmul_output_tensor": 400, "torch_matmul_output_tensor": 400, "unlik": 400, "start_tim": 400, "end_tim": 400, "stdout": 400, "6391518115997314": 400, "0007393360137939453": 400, "manage_config": 400, "9998": 400, "construct": 400, "tracer": 400, "exp_trac": 400, "miss": 400, "tt_logger_typ": 400, "tt_logger_level": 400, "substitut": 400, "implementaiton": 400, "unless": 400, "addition": 400, "app": 400, "pre_hook_to_print_args_and_kwarg": 400, "post_hook_to_print_output": 400, "query_registered_oper": 400, "begin_graph_captur": 400, "runmod": 400, "no_dispatch": 400, "captured_graph": 400, "end_graph_captur": 400, "pretty_print": 400}, "objects": {"ttnn": [[6, 0, 1, "", "Conv2dConfig"], [7, 0, 1, "", "Conv2dSliceConfig"], [8, 3, 1, "", "GetDefaultDevice"], [9, 0, 1, "", "MatmulMultiCoreReuseMultiCast1DProgramConfig"], [10, 0, 1, "", "MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig"], [11, 0, 1, "", "MatmulMultiCoreReuseMultiCastProgramConfig"], [12, 0, 1, "", "MatmulMultiCoreReuseProgramConfig"], [13, 3, 1, "", "SetDefaultDevice"], [391, 0, 1, "", "Shape"], [14, 0, 1, "", "SoftmaxDefaultProgramConfig"], [15, 0, 1, "", "SoftmaxProgramConfig"], [16, 0, 1, "", "SoftmaxShardedMultiCoreProgramConfig"], [17, 5, 1, "", "abs"], [18, 5, 1, "", "abs_bw"], [19, 5, 1, "", "acos"], [20, 5, 1, "", "acos_bw"], [21, 5, 1, "", "acosh"], [22, 5, 1, "", "acosh_bw"], [23, 5, 1, "", "add"], [24, 5, 1, "", "add_bw"], [25, 5, 1, "", "addalpha"], [26, 5, 1, "", "addalpha_bw"], [27, 5, 1, "", "addcdiv"], [28, 5, 1, "", "addcdiv_bw"], [29, 5, 1, "", "addcmul"], [30, 5, 1, "", "addcmul_bw"], [31, 5, 1, "", "addmm"], [32, 5, 1, "", "alt_complex_rotate90"], [33, 5, 1, "", "angle"], [34, 5, 1, "", "angle_bw"], [35, 5, 1, "", "arange"], [36, 5, 1, "", "argmax"], [37, 5, 1, "", "as_tensor"], [38, 5, 1, "", "asin"], [39, 5, 1, "", "asin_bw"], [40, 5, 1, "", "asinh"], [41, 5, 1, "", "asinh_bw"], [42, 5, 1, "", "assign_bw"], [43, 5, 1, "", "atan"], [44, 5, 1, "", "atan2"], [45, 5, 1, "", "atan2_bw"], [46, 5, 1, "", "atan_bw"], [47, 5, 1, "", "atanh"], [48, 5, 1, "", "atanh_bw"], [49, 5, 1, "", "batch_norm"], [50, 5, 1, "", "bias_gelu_bw"], [51, 5, 1, "", "bitwise_and"], [52, 5, 1, "", "bitwise_left_shift"], [53, 5, 1, "", "bitwise_not"], [54, 5, 1, "", "bitwise_or"], [55, 5, 1, "", "bitwise_right_shift"], [56, 5, 1, "", "bitwise_xor"], [57, 5, 1, "", "cbrt"], [58, 5, 1, "", "ceil"], [59, 5, 1, "", "ceil_bw"], [60, 5, 1, "", "celu"], [61, 5, 1, "", "celu_bw"], [62, 5, 1, "", "clamp"], [63, 5, 1, "", "clamp_bw"], [64, 5, 1, "", "clip"], [65, 5, 1, "", "clip_bw"], [66, 5, 1, "", "clone"], [67, 3, 1, "", "close_device"], [68, 5, 1, "", "concat"], [69, 5, 1, "", "concat_bw"], [70, 5, 1, "", "conj"], [71, 5, 1, "", "conj_bw"], [72, 5, 1, "", "conv1d"], [73, 5, 1, "", "conv2d"], [74, 5, 1, "", "conv_transpose2d"], [75, 5, 1, "", "cos"], [76, 5, 1, "", "cos_bw"], [77, 5, 1, "", "cosh"], [78, 5, 1, "", "cosh_bw"], [79, 3, 1, "", "create_sharded_memory_config"], [80, 5, 1, "", "cumprod"], [81, 5, 1, "", "cumsum"], [82, 5, 1, "", "deallocate"], [83, 5, 1, "", "deg2rad"], [84, 5, 1, "", "deg2rad_bw"], [85, 5, 1, "", "digamma"], [86, 5, 1, "", "digamma_bw"], [87, 5, 1, "", "div"], [88, 5, 1, "", "div_bw"], [89, 5, 1, "", "div_no_nan"], [90, 5, 1, "", "div_no_nan_bw"], [91, 5, 1, "", "dump_tensor"], [92, 5, 1, "", "elu"], [93, 5, 1, "", "elu_bw"], [94, 5, 1, "", "embedding"], [95, 5, 1, "", "embedding_bw"], [96, 5, 1, "", "empty"], [97, 5, 1, "", "empty_like"], [98, 5, 1, "", "eq"], [99, 5, 1, "", "eq_"], [100, 5, 1, "", "eqz"], [101, 5, 1, "", "erf"], [102, 5, 1, "", "erf_bw"], [103, 5, 1, "", "erfc"], [104, 5, 1, "", "erfc_bw"], [105, 5, 1, "", "erfinv"], [106, 5, 1, "", "erfinv_bw"], [107, 5, 1, "", "exp"], [108, 5, 1, "", "exp2"], [109, 5, 1, "", "exp2_bw"], [110, 5, 1, "", "exp_bw"], [115, 5, 1, "", "expm1"], [116, 5, 1, "", "expm1_bw"], [117, 5, 1, "", "fill"], [118, 5, 1, "", "fill_bw"], [119, 5, 1, "", "fill_ones_rm"], [120, 5, 1, "", "fill_rm"], [121, 5, 1, "", "fill_zero_bw"], [122, 5, 1, "", "floor"], [123, 5, 1, "", "floor_bw"], [124, 5, 1, "", "floor_div"], [125, 5, 1, "", "fmod"], [126, 5, 1, "", "fmod_bw"], [127, 3, 1, "", "format_input_tensor"], [128, 3, 1, "", "format_output_tensor"], [129, 5, 1, "", "frac"], [130, 5, 1, "", "frac_bw"], [131, 5, 1, "", "from_device"], [132, 5, 1, "", "from_torch"], [133, 5, 1, "", "full"], [134, 5, 1, "", "full_like"], [135, 5, 1, "", "gather"], [136, 5, 1, "", "gcd"], [137, 5, 1, "", "ge"], [138, 5, 1, "", "ge_"], [139, 5, 1, "", "geglu"], [140, 5, 1, "", "gelu"], [141, 5, 1, "", "gelu_bw"], [142, 5, 1, "", "gez"], [143, 5, 1, "", "global_avg_pool2d"], [144, 5, 1, "", "glu"], [145, 5, 1, "", "group_norm"], [146, 5, 1, "", "gt"], [147, 5, 1, "", "gt_"], [148, 5, 1, "", "gtz"], [149, 5, 1, "", "hardshrink"], [150, 5, 1, "", "hardshrink_bw"], [151, 5, 1, "", "hardsigmoid"], [152, 5, 1, "", "hardsigmoid_bw"], [153, 5, 1, "", "hardswish"], [154, 5, 1, "", "hardswish_bw"], [155, 5, 1, "", "hardtanh"], [156, 5, 1, "", "hardtanh_bw"], [157, 5, 1, "", "heaviside"], [158, 5, 1, "", "hypot"], [159, 5, 1, "", "hypot_bw"], [160, 5, 1, "", "i0"], [161, 5, 1, "", "i0_bw"], [162, 5, 1, "", "identity"], [163, 5, 1, "", "imag"], [164, 5, 1, "", "imag_bw"], [165, 5, 1, "", "indexed_fill"], [166, 5, 1, "", "is_imag"], [167, 5, 1, "", "is_real"], [168, 5, 1, "", "isclose"], [169, 5, 1, "", "isfinite"], [170, 5, 1, "", "isinf"], [171, 5, 1, "", "isnan"], [172, 5, 1, "", "isneginf"], [173, 5, 1, "", "isposinf"], [176, 5, 1, "", "l1_loss"], [177, 5, 1, "", "layer_norm"], [178, 5, 1, "", "lcm"], [179, 5, 1, "", "ldexp"], [180, 5, 1, "", "ldexp_bw"], [181, 5, 1, "", "le"], [182, 5, 1, "", "le_"], [183, 5, 1, "", "leaky_relu"], [184, 5, 1, "", "leaky_relu_bw"], [185, 5, 1, "", "lerp"], [186, 5, 1, "", "lerp_bw"], [187, 5, 1, "", "lez"], [188, 5, 1, "", "lgamma"], [189, 5, 1, "", "lgamma_bw"], [190, 5, 1, "", "linear"], [191, 5, 1, "", "load_tensor"], [192, 5, 1, "", "log"], [193, 5, 1, "", "log10"], [194, 5, 1, "", "log10_bw"], [195, 5, 1, "", "log1p"], [196, 5, 1, "", "log1p_bw"], [197, 5, 1, "", "log2"], [198, 5, 1, "", "log2_bw"], [199, 5, 1, "", "log_bw"], [200, 5, 1, "", "log_sigmoid"], [201, 5, 1, "", "log_sigmoid_bw"], [202, 5, 1, "", "logaddexp"], [203, 5, 1, "", "logaddexp2"], [204, 5, 1, "", "logaddexp2_bw"], [205, 5, 1, "", "logaddexp_bw"], [206, 5, 1, "", "logical_and"], [207, 5, 1, "", "logical_and_"], [208, 5, 1, "", "logical_not"], [209, 5, 1, "", "logical_not_"], [210, 5, 1, "", "logical_or"], [211, 5, 1, "", "logical_or_"], [212, 5, 1, "", "logical_xor"], [213, 5, 1, "", "logical_xor_"], [214, 5, 1, "", "logit"], [215, 5, 1, "", "logit_bw"], [216, 5, 1, "", "logiteps_bw"], [217, 5, 1, "", "lt"], [218, 5, 1, "", "lt_"], [219, 5, 1, "", "ltz"], [220, 5, 1, "", "mac"], [221, 3, 1, "", "manage_device"], [222, 5, 1, "", "matmul"], [223, 5, 1, "", "matmul_batched_weights"], [224, 5, 1, "", "max"], [225, 5, 1, "", "max_bw"], [226, 5, 1, "", "max_pool2d"], [227, 5, 1, "", "maximum"], [228, 5, 1, "", "mean"], [229, 5, 1, "", "min"], [230, 5, 1, "", "min_bw"], [231, 5, 1, "", "minimum"], [232, 5, 1, "", "mish"], [235, 5, 1, "", "moreh_sum"], [236, 5, 1, "", "mse_loss"], [237, 5, 1, "", "mul_bw"], [238, 5, 1, "", "multigammaln"], [239, 5, 1, "", "multigammaln_bw"], [240, 5, 1, "", "multiply"], [241, 5, 1, "", "ne"], [242, 5, 1, "", "ne_"], [243, 5, 1, "", "neg"], [244, 5, 1, "", "neg_bw"], [245, 5, 1, "", "nextafter"], [246, 5, 1, "", "nez"], [247, 5, 1, "", "nonzero"], [248, 5, 1, "", "normalize_global"], [249, 5, 1, "", "normalize_hw"], [250, 5, 1, "", "ones"], [251, 5, 1, "", "ones_like"], [252, 3, 1, "", "open_device"], [253, 5, 1, "", "outer"], [254, 5, 1, "", "pad"], [255, 3, 1, "", "pad_to_tile_shape"], [256, 5, 1, "", "permute"], [257, 5, 1, "", "polar"], [258, 5, 1, "", "polar_bw"], [259, 5, 1, "", "polygamma"], [260, 5, 1, "", "polygamma_bw"], [261, 5, 1, "", "polyval"], [262, 5, 1, "", "pow"], [263, 5, 1, "", "pow_bw"], [264, 5, 1, "", "prelu"], [265, 3, 1, "", "prepare_conv_bias"], [266, 3, 1, "", "prepare_conv_transpose2d_bias"], [267, 3, 1, "", "prepare_conv_transpose2d_weights"], [268, 3, 1, "", "prepare_conv_weights"], [269, 5, 1, "", "prod"], [270, 5, 1, "", "prod_bw"], [271, 5, 1, "", "rad2deg"], [272, 5, 1, "", "rad2deg_bw"], [273, 5, 1, "", "rdiv"], [274, 5, 1, "", "rdiv_bw"], [275, 5, 1, "", "real"], [276, 5, 1, "", "real_bw"], [277, 5, 1, "", "reallocate"], [278, 5, 1, "", "reciprocal"], [279, 5, 1, "", "reciprocal_bw"], [280, 3, 1, "", "register_post_operation_hook"], [281, 3, 1, "", "register_pre_operation_hook"], [282, 5, 1, "", "reglu"], [283, 5, 1, "", "relu"], [284, 5, 1, "", "relu6"], [285, 5, 1, "", "relu6_bw"], [286, 5, 1, "", "relu_bw"], [287, 5, 1, "", "relu_max"], [288, 5, 1, "", "relu_min"], [289, 5, 1, "", "remainder"], [290, 5, 1, "", "remainder_bw"], [291, 5, 1, "", "repeat"], [292, 5, 1, "", "repeat_bw"], [293, 5, 1, "", "repeat_interleave"], [294, 5, 1, "", "reshape"], [295, 5, 1, "", "rms_norm"], [296, 5, 1, "", "round"], [297, 5, 1, "", "round_bw"], [298, 5, 1, "", "rpow"], [299, 5, 1, "", "rpow_bw"], [300, 5, 1, "", "rsqrt"], [301, 5, 1, "", "rsqrt_bw"], [302, 5, 1, "", "rsub"], [303, 5, 1, "", "rsub_bw"], [304, 5, 1, "", "scale_causal_mask_hw_dims_softmax_in_place"], [305, 5, 1, "", "scale_mask_softmax"], [306, 5, 1, "", "scale_mask_softmax_in_place"], [307, 5, 1, "", "scatter"], [308, 5, 1, "", "selu"], [309, 5, 1, "", "selu_bw"], [310, 3, 1, "", "set_printoptions"], [311, 5, 1, "", "sigmoid"], [312, 5, 1, "", "sigmoid_accurate"], [313, 5, 1, "", "sigmoid_bw"], [314, 5, 1, "", "sign"], [315, 5, 1, "", "sign_bw"], [316, 5, 1, "", "signbit"], [317, 5, 1, "", "silu"], [318, 5, 1, "", "silu_bw"], [319, 5, 1, "", "sin"], [320, 5, 1, "", "sin_bw"], [321, 5, 1, "", "sinh"], [322, 5, 1, "", "sinh_bw"], [323, 5, 1, "", "slice"], [324, 5, 1, "", "softmax"], [325, 5, 1, "", "softmax_in_place"], [326, 5, 1, "", "softplus"], [327, 5, 1, "", "softplus_bw"], [328, 5, 1, "", "softshrink"], [329, 5, 1, "", "softshrink_bw"], [330, 5, 1, "", "softsign"], [331, 5, 1, "", "softsign_bw"], [332, 5, 1, "", "sort"], [333, 5, 1, "", "sparse_matmul"], [334, 5, 1, "", "sqrt"], [335, 5, 1, "", "sqrt_bw"], [336, 5, 1, "", "square"], [337, 5, 1, "", "square_bw"], [338, 5, 1, "", "squared_difference"], [339, 5, 1, "", "squared_difference_bw"], [340, 5, 1, "", "std"], [341, 5, 1, "", "sub_bw"], [342, 5, 1, "", "subalpha"], [343, 5, 1, "", "subalpha_bw"], [344, 5, 1, "", "subtract"], [345, 5, 1, "", "sum"], [346, 5, 1, "", "swiglu"], [347, 5, 1, "", "swish"], [348, 3, 1, "", "synchronize_device"], [349, 5, 1, "", "tan"], [350, 5, 1, "", "tan_bw"], [351, 5, 1, "", "tanh"], [352, 5, 1, "", "tanh_bw"], [353, 5, 1, "", "tanhshrink"], [354, 5, 1, "", "tanhshrink_bw"], [355, 5, 1, "", "threshold"], [356, 5, 1, "", "threshold_bw"], [357, 5, 1, "", "tilize"], [358, 5, 1, "", "tilize_with_val_padding"], [359, 5, 1, "", "to_device"], [360, 5, 1, "", "to_layout"], [361, 5, 1, "", "to_memory_config"], [362, 5, 1, "", "to_torch"], [363, 5, 1, "", "topk"], [370, 5, 1, "", "tril"], [371, 5, 1, "", "triu"], [372, 5, 1, "", "trunc"], [373, 5, 1, "", "trunc_bw"], [374, 5, 1, "", "unary_chain"], [375, 5, 1, "", "untilize"], [376, 5, 1, "", "untilize_with_unpadding"], [377, 5, 1, "", "upsample"], [378, 5, 1, "", "var"], [379, 5, 1, "", "where"], [380, 5, 1, "", "where_bw"], [381, 5, 1, "", "xlogy"], [382, 5, 1, "", "xlogy_bw"], [383, 5, 1, "", "zeros"], [384, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[6, 1, 1, "", "act_block_h_override"], [6, 1, 1, "", "act_block_w_div"], [6, 1, 1, "", "activation"], [6, 1, 1, "", "core_grid"], [6, 1, 1, "", "deallocate_activation"], [6, 1, 1, "", "enable_act_double_buffer"], [6, 1, 1, "", "enable_kernel_stride_folding"], [6, 1, 1, "", "enable_split_reader"], [6, 1, 1, "", "enable_weights_double_buffer"], [6, 1, 1, "", "full_inner_dim"], [6, 1, 1, "", "in_place"], [6, 1, 1, "", "output_layout"], [6, 1, 1, "", "override_sharding_config"], [6, 1, 1, "", "reallocate_halo_output"], [6, 1, 1, "", "reshard_if_not_optimal"], [6, 1, 1, "", "shard_layout"], [6, 1, 1, "", "transpose_shards"], [6, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[7, 0, 1, "", "SliceTypeEnum"], [7, 1, 1, "", "num_slices"], [7, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[7, 2, 1, "", "SliceHeight"], [7, 2, 1, "", "SliceWidth"], [7, 1, 1, "", "name"], [7, 1, 1, "", "value"]], "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig": [[9, 1, 1, "", "compute_with_storage_grid_size"], [9, 4, 1, "", "from_json"], [9, 1, 1, "", "fuse_batch"], [9, 1, 1, "", "fused_activation"], [9, 1, 1, "", "gather_in0"], [9, 1, 1, "", "hop_cores"], [9, 1, 1, "", "in0_block_w"], [9, 1, 1, "", "mcast_in0"], [9, 1, 1, "", "num_global_cb_receivers"], [9, 1, 1, "", "out_block_h"], [9, 1, 1, "", "out_block_w"], [9, 1, 1, "", "out_subblock_h"], [9, 1, 1, "", "out_subblock_w"], [9, 1, 1, "", "per_core_M"], [9, 1, 1, "", "per_core_N"], [9, 4, 1, "", "to_json"], [9, 1, 1, "", "untilize_out"]], "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig": [[10, 4, 1, "", "from_json"], [10, 1, 1, "", "fused_activation"], [10, 1, 1, "", "in0_block_w"], [10, 1, 1, "", "per_core_M"], [10, 1, 1, "", "per_core_N"], [10, 4, 1, "", "to_json"]], "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig": [[11, 1, 1, "", "compute_with_storage_grid_size"], [11, 4, 1, "", "from_json"], [11, 1, 1, "", "fuse_batch"], [11, 1, 1, "", "fused_activation"], [11, 1, 1, "", "in0_block_w"], [11, 1, 1, "", "out_block_h"], [11, 1, 1, "", "out_block_w"], [11, 1, 1, "", "out_subblock_h"], [11, 1, 1, "", "out_subblock_w"], [11, 1, 1, "", "per_core_M"], [11, 1, 1, "", "per_core_N"], [11, 4, 1, "", "to_json"], [11, 1, 1, "", "transpose_mcast"]], "ttnn.MatmulMultiCoreReuseProgramConfig": [[12, 1, 1, "", "compute_with_storage_grid_size"], [12, 4, 1, "", "from_json"], [12, 1, 1, "", "in0_block_w"], [12, 1, 1, "", "out_subblock_h"], [12, 1, 1, "", "out_subblock_w"], [12, 1, 1, "", "per_core_M"], [12, 1, 1, "", "per_core_N"], [12, 4, 1, "", "to_json"]], "ttnn.Shape": [[391, 1, 1, "", "rank"], [391, 4, 1, "", "to_rank"]], "ttnn.SoftmaxShardedMultiCoreProgramConfig": [[16, 1, 1, "", "block_w"]], "ttnn.experimental": [[111, 5, 1, "", "conv3d"], [112, 5, 1, "", "dropout"], [113, 5, 1, "", "gelu_bw"], [114, 5, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[174, 5, 1, "", "fill_cache_for_user_"], [175, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[233, 3, 1, "", "preprocess_model"], [234, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[364, 5, 1, "", "attention_softmax"], [365, 5, 1, "", "attention_softmax_"], [366, 5, 1, "", "concatenate_heads"], [367, 5, 1, "", "scaled_dot_product_attention"], [368, 5, 1, "", "scaled_dot_product_attention_decode"], [369, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 3, 4, 385, 388, 390, 395, 399, 400], "nn": [0, 3, 4, 385, 388, 390, 395, 399, 400], "document": 0, "ttnn": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 397, 399], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 388], "develop": 1, "support": [2, 400], "report": [2, 5, 390, 399], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 400], "tip": 2, "commun": 2, "what": [3, 4], "i": [3, 4], "ad": 4, "new": [4, 389], "oper": [4, 5, 385, 390, 393, 394, 395, 399, 400], "faq": 4, "step": [4, 385, 388], "ar": [4, 388], "need": 4, "add": [4, 23, 393], "c": [4, 400], "python": [4, 400], "exampl": [4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 388, 393, 394, 395, 396, 397, 398, 400], "devic": [4, 5, 393, 394, 395, 396, 397, 398, 400], "implement": [4, 397], "1": [4, 304, 385, 387, 388, 400], "2": [4, 385, 387, 388, 400], "bind": 4, "option": [4, 305, 306, 388], "golden": 4, "function": [4, 389, 400], "api": [5, 391], "memori": [5, 391, 399], "config": [5, 391], "core": 5, "tensor": [5, 36, 224, 228, 229, 304, 305, 306, 340, 345, 378, 391, 393, 394, 395, 399, 400], "creation": [5, 393, 395], "matrix": 5, "multipl": [5, 391], "pointwis": 5, "unari": 5, "binari": [5, 388], "ternari": 5, "loss": 5, "reduct": 5, "data": [5, 391, 396], "movement": 5, "normal": 5, "program": [5, 388, 400], "moreh": 5, "transform": [5, 364, 365, 366, 367, 368, 369], "ccl": 5, "embed": [5, 94], "convolut": [5, 394, 398], "pool": [5, 398], "vision": 5, "kv": 5, "cach": [5, 400], "model": [5, 385, 387, 388, 397, 399], "convers": [5, 393], "hook": [5, 400], "conv2dconfig": 6, "conv2dsliceconfig": 7, "getdefaultdevic": 8, "matmulmulticorereusemulticast1dprogramconfig": 9, "matmulmulticorereusemulticastdramshardedprogramconfig": 10, "matmulmulticorereusemulticastprogramconfig": 11, "matmulmulticorereuseprogramconfig": 12, "setdefaultdevic": 13, "softmaxdefaultprogramconfig": 14, "softmaxprogramconfig": 15, "softmaxshardedmulticoreprogramconfig": 16, "ab": 17, "abs_bw": 18, "aco": 19, "acos_bw": 20, "acosh": 21, "acosh_bw": 22, "add_bw": 24, "addalpha": 25, "addalpha_bw": 26, "addcdiv": 27, "addcdiv_bw": 28, "addcmul": 29, "addcmul_bw": 30, "addmm": 31, "alt_complex_rotate90": 32, "angl": 33, "angle_bw": 34, "arang": 35, "argmax": 36, "input": [36, 224, 228, 229, 304, 305, 306, 340, 345, 378, 394], "output": [36, 393, 394, 395, 396, 397, 398], "as_tensor": 37, "asin": 38, "asin_bw": 39, "asinh": 40, "asinh_bw": 41, "assign_bw": 42, "atan": 43, "atan2": 44, "atan2_bw": 45, "atan_bw": 46, "atanh": 47, "atanh_bw": 48, "batch_norm": 49, "bias_gelu_bw": 50, "bitwise_and": 51, "bitwise_left_shift": 52, "bitwise_not": 53, "bitwise_or": 54, "bitwise_right_shift": 55, "bitwise_xor": 56, "cbrt": 57, "ceil": 58, "ceil_bw": 59, "celu": 60, "celu_bw": 61, "clamp": 62, "clamp_bw": 63, "clip": 64, "clip_bw": 65, "clone": [66, 388], "close_devic": 67, "concat": 68, "concat_bw": 69, "conj": 70, "conj_bw": 71, "conv1d": 72, "conv2d": 73, "conv_transpose2d": 74, "co": 75, "cos_bw": 76, "cosh": 77, "cosh_bw": 78, "create_sharded_memory_config": 79, "cumprod": 80, "cumsum": 81, "dealloc": 82, "deg2rad": 83, "deg2rad_bw": 84, "digamma": 85, "digamma_bw": 86, "div": 87, "div_bw": 88, "div_no_nan": 89, "div_no_nan_bw": 90, "dump_tensor": 91, "elu": 92, "elu_bw": 93, "embedding_bw": 95, "empti": 96, "empty_lik": 97, "eq": 98, "eq_": 99, "eqz": 100, "erf": 101, "erf_bw": 102, "erfc": 103, "erfc_bw": 104, "erfinv": 105, "erfinv_bw": 106, "exp": 107, "exp2": 108, "exp2_bw": 109, "exp_bw": 110, "experiment": [111, 112, 113, 114], "conv3d": 111, "dropout": 112, "gelu_bw": [113, 141], "rotary_embed": 114, "expm1": 115, "expm1_bw": 116, "fill": 117, "fill_bw": 118, "fill_ones_rm": 119, "fill_rm": 120, "fill_zero_bw": 121, "floor": 122, "floor_bw": 123, "floor_div": 124, "fmod": 125, "fmod_bw": 126, "format_input_tensor": 127, "format_output_tensor": 128, "frac": 129, "frac_bw": 130, "from_devic": 131, "from_torch": 132, "full": [133, 393, 394, 395, 396, 397, 398], "full_lik": 134, "gather": 135, "gcd": 136, "ge": 137, "ge_": 138, "geglu": 139, "gelu": 140, "gez": 142, "global_avg_pool2d": 143, "glu": 144, "group_norm": 145, "gt": 146, "gt_": 147, "gtz": 148, "hardshrink": 149, "hardshrink_bw": 150, "hardsigmoid": 151, "hardsigmoid_bw": 152, "hardswish": 153, "hardswish_bw": 154, "hardtanh": 155, "hardtanh_bw": 156, "heavisid": 157, "hypot": 158, "hypot_bw": 159, "i0": 160, "i0_bw": 161, "ident": 162, "imag": [163, 388, 396], "imag_bw": 164, "indexed_fil": 165, "is_imag": 166, "is_real": 167, "isclos": 168, "isfinit": 169, "isinf": 170, "isnan": 171, "isneginf": 172, "isposinf": 173, "kv_cach": [174, 175], "fill_cache_for_user_": 174, "update_cache_for_token_": 175, "l1_loss": 176, "layer_norm": 177, "input_tensor": [177, 269, 295, 363], "residual_input_tensor": [177, 295], "weight": [177, 295, 396, 397, 398], "gamma": [177, 295], "bia": [177, 295], "beta": [177, 295], "stat": 177, "post_all_gath": 177, "onli": [177, 388], "output_tensor": [177, 269, 295], "lcm": 178, "ldexp": 179, "ldexp_bw": 180, "le": 181, "le_": 182, "leaky_relu": 183, "leaky_relu_bw": 184, "lerp": 185, "lerp_bw": 186, "lez": 187, "lgamma": 188, "lgamma_bw": 189, "linear": 190, "load_tensor": 191, "log": [192, 400], "log10": 193, "log10_bw": 194, "log1p": 195, "log1p_bw": 196, "log2": 197, "log2_bw": 198, "log_bw": 199, "log_sigmoid": 200, "log_sigmoid_bw": 201, "logaddexp": 202, "logaddexp2": 203, "logaddexp2_bw": 204, "logaddexp_bw": 205, "logical_and": 206, "logical_and_": 207, "logical_not": 208, "logical_not_": 209, "logical_or": 210, "logical_or_": 211, "logical_xor": 212, "logical_xor_": 213, "logit": 214, "logit_bw": 215, "logiteps_bw": 216, "lt": 217, "lt_": 218, "ltz": 219, "mac": 220, "manage_devic": 221, "matmul": 222, "matmul_batched_weight": 223, "max": 224, "max_bw": 225, "max_pool2d": 226, "maximum": 227, "mean": 228, "min": 229, "min_bw": 230, "minimum": 231, "mish": 232, "model_preprocess": [233, 234], "preprocess_model": 233, "preprocess_model_paramet": 234, "moreh_sum": 235, "mse_loss": 236, "mul_bw": 237, "multigammaln": 238, "multigammaln_bw": 239, "multipli": 240, "ne": 241, "ne_": 242, "neg": 243, "neg_bw": 244, "nextaft": 245, "nez": 246, "nonzero": 247, "normalize_glob": 248, "normalize_hw": 249, "ones": 250, "ones_lik": 251, "open_devic": 252, "outer": 253, "pad": 254, "pad_to_tile_shap": 255, "permut": 256, "polar": 257, "polar_bw": 258, "polygamma": 259, "polygamma_bw": 260, "polyv": 261, "pow": 262, "pow_bw": 263, "prelu": 264, "prepare_conv_bia": 265, "prepare_conv_transpose2d_bia": 266, "prepare_conv_transpose2d_weight": 267, "prepare_conv_weight": 268, "prod": 269, "prod_bw": 270, "rad2deg": 271, "rad2deg_bw": 272, "rdiv": 273, "rdiv_bw": 274, "real": 275, "real_bw": 276, "realloc": 277, "reciproc": 278, "reciprocal_bw": 279, "register_post_operation_hook": 280, "register_pre_operation_hook": 281, "reglu": 282, "relu": 283, "relu6": 284, "relu6_bw": 285, "relu_bw": 286, "relu_max": 287, "relu_min": 288, "remaind": 289, "remainder_bw": 290, "repeat": 291, "repeat_bw": 292, "repeat_interleav": 293, "reshap": 294, "rms_norm": 295, "round": 296, "round_bw": 297, "rpow": 298, "rpow_bw": 299, "rsqrt": 300, "rsqrt_bw": 301, "rsub": 302, "rsub_bw": 303, "scale_causal_mask_hw_dims_softmax_in_plac": 304, "shard": [304, 391], "mask": [304, 305, 306], "h": 304, "w": 304, "scale_mask_softmax": 305, "scale_mask_softmax_in_plac": 306, "scatter": 307, "selu": 308, "selu_bw": 309, "set_printopt": 310, "sigmoid": 311, "sigmoid_accur": 312, "sigmoid_bw": 313, "sign": 314, "sign_bw": 315, "signbit": 316, "silu": 317, "silu_bw": 318, "sin": 319, "sin_bw": 320, "sinh": 321, "sinh_bw": 322, "slice": [323, 400], "softmax": 324, "softmax_in_plac": 325, "softplu": 326, "softplus_bw": 327, "softshrink": 328, "softshrink_bw": 329, "softsign": 330, "softsign_bw": 331, "sort": 332, "sparse_matmul": 333, "sqrt": 334, "sqrt_bw": 335, "squar": 336, "square_bw": 337, "squared_differ": 338, "squared_difference_bw": 339, "std": 340, "sub_bw": 341, "subalpha": 342, "subalpha_bw": 343, "subtract": 344, "sum": 345, "swiglu": 346, "swish": 347, "synchronize_devic": 348, "tan": 349, "tan_bw": 350, "tanh": 351, "tanh_bw": 352, "tanhshrink": 353, "tanhshrink_bw": 354, "threshold": 355, "threshold_bw": 356, "tiliz": 357, "tilize_with_val_pad": 358, "to_devic": 359, "to_layout": 360, "to_memory_config": 361, "to_torch": 362, "topk": 363, "index_tensor": 363, "attention_softmax": 364, "attention_softmax_": 365, "concatenate_head": 366, "scaled_dot_product_attent": 367, "scaled_dot_product_attention_decod": 368, "split_query_key_value_and_split_head": 369, "tril": 370, "triu": 371, "trunc": 372, "trunc_bw": 373, "unary_chain": 374, "until": 375, "untilize_with_unpad": 376, "upsampl": 377, "var": 378, "where": [379, 387], "where_bw": 380, "xlogi": 381, "xlogy_bw": 382, "zero": 383, "zeros_lik": 384, "convert": [385, 395, 397, 400], "pytorch": 385, "rewrit": 385, "switch": 385, "3": [385, 388, 400], "optim": [385, 397], "more": [385, 395], "build": [386, 387, 388], "uplift": 386, "demo": [386, 387], "get": 387, "start": 387, "instal": [387, 388], "explor": 387, "our": 387, "To": [387, 388], "go": 387, "from": [387, 400], "here": 387, "prerequisit": [388, 399], "set": [388, 394], "up": 388, "hardwar": 388, "softwar": 388, "depend": 388, "script": 388, "recommend": 388, "manual": [388, 394], "metalium": 388, "There": 388, "four": 388, "latest": 388, "wheel": 388, "For": 388, "user": 388, "environ": 388, "docker": 388, "releas": 388, "sourc": 388, "repositori": 388, "librari": [388, 393, 394, 395, 396], "virtual": 388, "setup": [388, 398], "anaconda": 388, "packag": 388, "you": 388, "all": [388, 400], "verifi": 388, "your": 388, "try": 388, "execut": 388, "interest": 388, "multi": [388, 397], "card": 388, "configur": [388, 397], "topologi": 388, "machin": 388, "requir": [388, 391], "overview": 388, "why": 388, "It": 388, "matter": 388, "vm": 388, "onboard": 389, "profil": [390, 399], "perf": 390, "header": 390, "profile_thi": 390, "descript": 390, "us": [390, 397, 400], "perform": [390, 399], "visual": [390, 399, 400], "shape": 391, "layout": 391, "type": 391, "width": 391, "limit": 391, "bfloat8_b": 391, "storag": 391, "tutori": 392, "import": [393, 394, 395, 396, 398], "open": [393, 394, 395, 396, 398], "tenstorr": [393, 394, 395, 396, 398], "addit": 393, "close": [393, 394, 395, 396, 397, 398], "basic": [394, 395, 396, 400], "necessari": [394, 395, 396], "seed": 394, "reproduc": 394, "creat": [394, 395], "forward": 394, "method": 394, "paramet": [394, 397], "run": [394, 397, 398, 399, 400], "The": [394, 395, 396, 398], "host": 395, "tile": 395, "nativ": 395, "base": 395, "arithmet": 395, "simul": 395, "broadcast": 395, "row": 395, "vector": 395, "expans": 395, "mlp": 396, "infer": [396, 398], "load": [396, 398], "mnist": 396, "test": [396, 398], "pretrain": 396, "accuraci": 396, "track": 396, "loop": 396, "flatten": 396, "head": 397, "attent": 397, "write": 397, "initi": [397, 398], "activ": 397, "torch": [397, 400], "first": 397, "iter": 397, "subsequ": 397, "version": 397, "pre": [397, 400], "process": 397, "check": 397, "match": 397, "origin": 397, "simpl": 398, "cnn": 398, "cifar": 398, "10": [398, 400], "dataset": 398, "defin": 398, "stage": 398, "sampl": 398, "gener": 399, "result": 399, "analysi": 399, "upload": 399, "tab": 399, "buffer": [399, 400], "graph": [399, 400], "recap": 399, "an": 400, "__getitem__": 400, "4": 400, "enabl": 400, "5": 400, "intermedi": 400, "6": 400, "trace": 400, "7": 400, "tt_lib": 400, "8": 400, "9": 400, "chang": 400, "string": 400, "represent": 400, "11": 400, "web": 400, "browser": 400, "12": 400, "regist": 400, "post": 400, "13": 400, "queri": 400, "14": 400, "fall": 400, "back": 400, "15": 400, "captur": 400, "alloc": 400, "etc": 400}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "What is TT-NN?": [[3, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[4, "adding-new-tt-nn-operation"]], "FAQ": [[4, "faq"]], "What is a TT-NN operation?": [[4, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[4, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[4, "c-implementation"]], "Step 1: Implement device operation": [[4, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[4, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[4, "python-implementation"]], "Step 1: Add Python binding": [[4, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[4, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[5, "apis"], [391, "apis"]], "Device": [[5, "device"]], "Memory Config": [[5, "memory-config"], [391, "memory-config"]], "Operations": [[5, "operations"]], "Core": [[5, "core"]], "Tensor Creation": [[5, "tensor-creation"], [393, "Tensor-Creation"]], "Matrix Multiplication": [[5, "matrix-multiplication"]], "Pointwise Unary": [[5, "pointwise-unary"]], "Pointwise Binary": [[5, "pointwise-binary"]], "Pointwise Ternary": [[5, "pointwise-ternary"]], "Losses": [[5, "losses"]], "Reduction": [[5, "reduction"]], "Data Movement": [[5, "data-movement"]], "Normalization": [[5, "normalization"]], "Normalization Program Configs": [[5, "normalization-program-configs"]], "Moreh Operations": [[5, "moreh-operations"]], "Transformer": [[5, "transformer"]], "CCL": [[5, "ccl"]], "Embedding": [[5, "embedding"]], "Convolution": [[5, "convolution"]], "Pooling": [[5, "pooling"]], "Vision": [[5, "vision"]], "KV Cache": [[5, "kv-cache"]], "Model Conversion": [[5, "model-conversion"]], "Reports": [[5, "reports"]], "Operation Hooks": [[5, "operation-hooks"]], "ttnn.Conv2dConfig": [[6, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[7, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [13, null], [14, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [32, null], [33, null], [34, null], [35, null], [36, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [67, null], [68, null], [69, null], [70, null], [71, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [105, null], [106, null], [107, null], [108, null], [109, null], [110, null], [112, null], [113, null], [115, null], [116, null], [117, null], [118, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [129, null], [130, null], [132, null], [133, null], [134, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [225, null], [226, null], [227, null], [230, null], [231, null], [232, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [252, null], [253, null], [254, null], [255, null], [257, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [277, null], [278, null], [279, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [289, null], [290, null], [291, null], [292, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [308, null], [309, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [333, null], [334, null], [335, null], [336, null], [337, null], [338, null], [339, null], [341, null], [342, null], [343, null], [344, null], [346, null], [347, null], [349, null], [350, null], [351, null], [352, null], [353, null], [354, null], [355, null], [356, null], [360, null], [361, null], [362, null], [363, null], [370, null], [371, null], [372, null], [373, null], [374, null], [379, null], [380, null], [381, null], [382, null], [383, null], [384, null]], "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig": [[9, "ttnn-matmulmulticorereusemulticast1dprogramconfig"]], "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig": [[10, "ttnn-matmulmulticorereusemulticastdramshardedprogramconfig"]], "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig": [[11, "ttnn-matmulmulticorereusemulticastprogramconfig"]], "ttnn.MatmulMultiCoreReuseProgramConfig": [[12, "ttnn-matmulmulticorereuseprogramconfig"]], "ttnn.SetDefaultDevice": [[13, "ttnn-setdefaultdevice"]], "ttnn.SoftmaxDefaultProgramConfig": [[14, "ttnn-softmaxdefaultprogramconfig"]], "ttnn.SoftmaxProgramConfig": [[15, "ttnn-softmaxprogramconfig"]], "ttnn.SoftmaxShardedMultiCoreProgramConfig": [[16, "ttnn-softmaxshardedmulticoreprogramconfig"]], "ttnn.abs": [[17, "ttnn-abs"]], "ttnn.abs_bw": [[18, "ttnn-abs-bw"]], "ttnn.acos": [[19, "ttnn-acos"]], "ttnn.acos_bw": [[20, "ttnn-acos-bw"]], "ttnn.acosh": [[21, "ttnn-acosh"]], "ttnn.acosh_bw": [[22, "ttnn-acosh-bw"]], "ttnn.add": [[23, "ttnn-add"]], "ttnn.add_bw": [[24, "ttnn-add-bw"]], "ttnn.addalpha": [[25, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[26, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[27, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[28, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[29, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[30, "ttnn-addcmul-bw"]], "ttnn.addmm": [[31, "ttnn-addmm"]], "ttnn.alt_complex_rotate90": [[32, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[33, "ttnn-angle"]], "ttnn.angle_bw": [[34, "ttnn-angle-bw"]], "ttnn.arange": [[35, "ttnn-arange"]], "ttnn.argmax": [[36, "ttnn-argmax"]], "Input Tensor": [[36, "id2"], [224, "id2"], [228, "id2"], [229, "id2"], [305, "id2"], [306, "id2"], [340, "id2"], [345, "id2"], [378, "id2"]], "Output Tensor": [[36, "id3"]], "ttnn.as_tensor": [[37, "ttnn-as-tensor"]], "Examples": [[37, null], [310, null]], "ttnn.asin": [[38, "ttnn-asin"]], "ttnn.asin_bw": [[39, "ttnn-asin-bw"]], "ttnn.asinh": [[40, "ttnn-asinh"]], "ttnn.asinh_bw": [[41, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[42, "ttnn-assign-bw"]], "ttnn.atan": [[43, "ttnn-atan"]], "ttnn.atan2": [[44, "ttnn-atan2"]], "ttnn.atan2_bw": [[45, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[46, "ttnn-atan-bw"]], "ttnn.atanh": [[47, "ttnn-atanh"]], "ttnn.atanh_bw": [[48, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[49, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[50, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[51, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[52, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[53, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[54, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[55, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[56, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[57, "ttnn-cbrt"]], "ttnn.ceil": [[58, "ttnn-ceil"]], "ttnn.ceil_bw": [[59, "ttnn-ceil-bw"]], "ttnn.celu": [[60, "ttnn-celu"]], "ttnn.celu_bw": [[61, "ttnn-celu-bw"]], "ttnn.clamp": [[62, "ttnn-clamp"]], "ttnn.clamp_bw": [[63, "ttnn-clamp-bw"]], "ttnn.clip": [[64, "ttnn-clip"]], "ttnn.clip_bw": [[65, "ttnn-clip-bw"]], "ttnn.clone": [[66, "ttnn-clone"]], "ttnn.close_device": [[67, "ttnn-close-device"]], "ttnn.concat": [[68, "ttnn-concat"]], "ttnn.concat_bw": [[69, "ttnn-concat-bw"]], "ttnn.conj": [[70, "ttnn-conj"]], "ttnn.conj_bw": [[71, "ttnn-conj-bw"]], "ttnn.conv1d": [[72, "ttnn-conv1d"]], "ttnn.conv2d": [[73, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[74, "ttnn-conv-transpose2d"]], "ttnn.cos": [[75, "ttnn-cos"]], "ttnn.cos_bw": [[76, "ttnn-cos-bw"]], "ttnn.cosh": [[77, "ttnn-cosh"]], "ttnn.cosh_bw": [[78, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[79, "ttnn-create-sharded-memory-config"]], "ttnn.cumprod": [[80, "ttnn-cumprod"]], "ttnn.cumsum": [[81, "ttnn-cumsum"]], "ttnn.deallocate": [[82, "ttnn-deallocate"]], "ttnn.deg2rad": [[83, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[84, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[85, "ttnn-digamma"]], "ttnn.digamma_bw": [[86, "ttnn-digamma-bw"]], "ttnn.div": [[87, "ttnn-div"]], "ttnn.div_bw": [[88, "ttnn-div-bw"]], "ttnn.div_no_nan": [[89, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[90, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[91, "ttnn-dump-tensor"]], "ttnn.elu": [[92, "ttnn-elu"]], "ttnn.elu_bw": [[93, "ttnn-elu-bw"]], "ttnn.embedding": [[94, "ttnn-embedding"]], "ttnn.embedding_bw": [[95, "ttnn-embedding-bw"]], "ttnn.empty": [[96, "ttnn-empty"]], "ttnn.empty_like": [[97, "ttnn-empty-like"]], "ttnn.eq": [[98, "ttnn-eq"]], "ttnn.eq_": [[99, "ttnn-eq"]], "ttnn.eqz": [[100, "ttnn-eqz"]], "ttnn.erf": [[101, "ttnn-erf"]], "ttnn.erf_bw": [[102, "ttnn-erf-bw"]], "ttnn.erfc": [[103, "ttnn-erfc"]], "ttnn.erfc_bw": [[104, "ttnn-erfc-bw"]], "ttnn.erfinv": [[105, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[106, "ttnn-erfinv-bw"]], "ttnn.exp": [[107, "ttnn-exp"]], "ttnn.exp2": [[108, "ttnn-exp2"]], "ttnn.exp2_bw": [[109, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[110, "ttnn-exp-bw"]], "ttnn.experimental.conv3d": [[111, "ttnn-experimental-conv3d"]], "ttnn.experimental.dropout": [[112, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[113, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[114, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[115, "ttnn-expm1"]], "ttnn.expm1_bw": [[116, "ttnn-expm1-bw"]], "ttnn.fill": [[117, "ttnn-fill"]], "ttnn.fill_bw": [[118, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[119, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[120, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[121, "ttnn-fill-zero-bw"]], "ttnn.floor": [[122, "ttnn-floor"]], "ttnn.floor_bw": [[123, "ttnn-floor-bw"]], "ttnn.floor_div": [[124, "ttnn-floor-div"]], "ttnn.fmod": [[125, "ttnn-fmod"]], "ttnn.fmod_bw": [[126, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[127, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[128, "ttnn-format-output-tensor"]], "ttnn.frac": [[129, "ttnn-frac"]], "ttnn.frac_bw": [[130, "ttnn-frac-bw"]], "ttnn.from_device": [[131, "ttnn-from-device"]], "ttnn.from_torch": [[132, "ttnn-from-torch"]], "ttnn.full": [[133, "ttnn-full"]], "ttnn.full_like": [[134, "ttnn-full-like"]], "ttnn.gather": [[135, "ttnn-gather"]], "ttnn.gcd": [[136, "ttnn-gcd"]], "ttnn.ge": [[137, "ttnn-ge"]], "ttnn.ge_": [[138, "ttnn-ge"]], "ttnn.geglu": [[139, "ttnn-geglu"]], "ttnn.gelu": [[140, "ttnn-gelu"]], "ttnn.gelu_bw": [[141, "ttnn-gelu-bw"]], "ttnn.gez": [[142, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[143, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[144, "ttnn-glu"]], "ttnn.group_norm": [[145, "ttnn-group-norm"]], "ttnn.gt": [[146, "ttnn-gt"]], "ttnn.gt_": [[147, "ttnn-gt"]], "ttnn.gtz": [[148, "ttnn-gtz"]], "ttnn.hardshrink": [[149, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[150, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[151, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[152, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[153, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[154, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[155, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[156, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[157, "ttnn-heaviside"]], "ttnn.hypot": [[158, "ttnn-hypot"]], "ttnn.hypot_bw": [[159, "ttnn-hypot-bw"]], "ttnn.i0": [[160, "ttnn-i0"]], "ttnn.i0_bw": [[161, "ttnn-i0-bw"]], "ttnn.identity": [[162, "ttnn-identity"]], "ttnn.imag": [[163, "ttnn-imag"]], "ttnn.imag_bw": [[164, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[165, "ttnn-indexed-fill"]], "ttnn.is_imag": [[166, "ttnn-is-imag"]], "ttnn.is_real": [[167, "ttnn-is-real"]], "ttnn.isclose": [[168, "ttnn-isclose"]], "ttnn.isfinite": [[169, "ttnn-isfinite"]], "ttnn.isinf": [[170, "ttnn-isinf"]], "ttnn.isnan": [[171, "ttnn-isnan"]], "ttnn.isneginf": [[172, "ttnn-isneginf"]], "ttnn.isposinf": [[173, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[174, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[175, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[176, "ttnn-l1-loss"]], "ttnn.layer_norm": [[177, "ttnn-layer-norm"]], "input_tensor": [[177, "id2"], [269, "id2"], [295, "id2"], [363, "id2"]], "residual_input_tensor": [[177, "id3"], [295, "id3"]], "weight (gamma) and bias (beta)": [[177, "id4"], [295, "id4"]], "stats (POST_ALL_GATHER only)": [[177, "id5"]], "output_tensor": [[177, "id6"], [269, "id3"], [295, "id5"]], "ttnn.lcm": [[178, "ttnn-lcm"]], "ttnn.ldexp": [[179, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[180, "ttnn-ldexp-bw"]], "ttnn.le": [[181, "ttnn-le"]], "ttnn.le_": [[182, "ttnn-le"]], "ttnn.leaky_relu": [[183, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[184, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[185, "ttnn-lerp"]], "ttnn.lerp_bw": [[186, "ttnn-lerp-bw"]], "ttnn.lez": [[187, "ttnn-lez"]], "ttnn.lgamma": [[188, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[189, "ttnn-lgamma-bw"]], "ttnn.linear": [[190, "ttnn-linear"]], "ttnn.load_tensor": [[191, "ttnn-load-tensor"]], "ttnn.log": [[192, "ttnn-log"]], "ttnn.log10": [[193, "ttnn-log10"]], "ttnn.log10_bw": [[194, "ttnn-log10-bw"]], "ttnn.log1p": [[195, "ttnn-log1p"]], "ttnn.log1p_bw": [[196, "ttnn-log1p-bw"]], "ttnn.log2": [[197, "ttnn-log2"]], "ttnn.log2_bw": [[198, "ttnn-log2-bw"]], "ttnn.log_bw": [[199, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[200, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[201, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[202, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[203, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[204, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[205, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[206, "ttnn-logical-and"]], "ttnn.logical_and_": [[207, "ttnn-logical-and"]], "ttnn.logical_not": [[208, "ttnn-logical-not"]], "ttnn.logical_not_": [[209, "ttnn-logical-not"]], "ttnn.logical_or": [[210, "ttnn-logical-or"]], "ttnn.logical_or_": [[211, "ttnn-logical-or"]], "ttnn.logical_xor": [[212, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[213, "ttnn-logical-xor"]], "ttnn.logit": [[214, "ttnn-logit"]], "ttnn.logit_bw": [[215, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[216, "ttnn-logiteps-bw"]], "ttnn.lt": [[217, "ttnn-lt"]], "ttnn.lt_": [[218, "ttnn-lt"]], "ttnn.ltz": [[219, "ttnn-ltz"]], "ttnn.mac": [[220, "ttnn-mac"]], "ttnn.manage_device": [[221, "ttnn-manage-device"]], "ttnn.matmul": [[222, "ttnn-matmul"]], "ttnn.matmul_batched_weights": [[223, "ttnn-matmul-batched-weights"]], "ttnn.max": [[224, "ttnn-max"]], "ttnn.max_bw": [[225, "ttnn-max-bw"]], "ttnn.max_pool2d": [[226, "ttnn-max-pool2d"]], "ttnn.maximum": [[227, "ttnn-maximum"]], "ttnn.mean": [[228, "ttnn-mean"]], "ttnn.min": [[229, "ttnn-min"]], "ttnn.min_bw": [[230, "ttnn-min-bw"]], "ttnn.minimum": [[231, "ttnn-minimum"]], "ttnn.mish": [[232, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[233, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[234, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[235, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[236, "ttnn-mse-loss"]], "ttnn.mul_bw": [[237, "ttnn-mul-bw"]], "ttnn.multigammaln": [[238, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[239, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[240, "ttnn-multiply"]], "ttnn.ne": [[241, "ttnn-ne"]], "ttnn.ne_": [[242, "ttnn-ne"]], "ttnn.neg": [[243, "ttnn-neg"]], "ttnn.neg_bw": [[244, "ttnn-neg-bw"]], "ttnn.nextafter": [[245, "ttnn-nextafter"]], "ttnn.nez": [[246, "ttnn-nez"]], "ttnn.nonzero": [[247, "ttnn-nonzero"]], "ttnn.normalize_global": [[248, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[249, "ttnn-normalize-hw"]], "ttnn.ones": [[250, "ttnn-ones"]], "ttnn.ones_like": [[251, "ttnn-ones-like"]], "ttnn.open_device": [[252, "ttnn-open-device"]], "ttnn.outer": [[253, "ttnn-outer"]], "ttnn.pad": [[254, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[255, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[256, "ttnn-permute"]], "ttnn.polar": [[257, "ttnn-polar"]], "ttnn.polar_bw": [[258, "ttnn-polar-bw"]], "ttnn.polygamma": [[259, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[260, "ttnn-polygamma-bw"]], "ttnn.polyval": [[261, "ttnn-polyval"]], "ttnn.pow": [[262, "ttnn-pow"]], "ttnn.pow_bw": [[263, "ttnn-pow-bw"]], "ttnn.prelu": [[264, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[265, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[266, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[267, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[268, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[269, "ttnn-prod"]], "ttnn.prod_bw": [[270, "ttnn-prod-bw"]], "ttnn.rad2deg": [[271, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[272, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[273, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[274, "ttnn-rdiv-bw"]], "ttnn.real": [[275, "ttnn-real"]], "ttnn.real_bw": [[276, "ttnn-real-bw"]], "ttnn.reallocate": [[277, "ttnn-reallocate"]], "ttnn.reciprocal": [[278, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[279, "ttnn-reciprocal-bw"]], "ttnn.register_post_operation_hook": [[280, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[281, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[282, "ttnn-reglu"]], "ttnn.relu": [[283, "ttnn-relu"]], "ttnn.relu6": [[284, "ttnn-relu6"]], "ttnn.relu6_bw": [[285, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[286, "ttnn-relu-bw"]], "ttnn.relu_max": [[287, "ttnn-relu-max"]], "ttnn.relu_min": [[288, "ttnn-relu-min"]], "ttnn.remainder": [[289, "ttnn-remainder"]], "ttnn.remainder_bw": [[290, "ttnn-remainder-bw"]], "ttnn.repeat": [[291, "ttnn-repeat"]], "ttnn.repeat_bw": [[292, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[293, "ttnn-repeat-interleave"]], "ttnn.reshape": [[294, "ttnn-reshape"]], "ttnn.rms_norm": [[295, "ttnn-rms-norm"]], "ttnn.round": [[296, "ttnn-round"]], "ttnn.round_bw": [[297, "ttnn-round-bw"]], "ttnn.rpow": [[298, "ttnn-rpow"]], "ttnn.rpow_bw": [[299, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[300, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[301, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[302, "ttnn-rsub"]], "ttnn.rsub_bw": [[303, "ttnn-rsub-bw"]], "ttnn.scale_causal_mask_hw_dims_softmax_in_place": [[304, "ttnn-scale-causal-mask-hw-dims-softmax-in-place"]], "Input Tensor (Sharded)": [[304, "id2"]], "Mask Tensor [1, 1, H, W]": [[304, "id3"]], "ttnn.scale_mask_softmax": [[305, "ttnn-scale-mask-softmax"]], "Mask Tensor (optional)": [[305, "id3"], [306, "id3"]], "ttnn.scale_mask_softmax_in_place": [[306, "ttnn-scale-mask-softmax-in-place"]], "ttnn.scatter": [[307, "ttnn-scatter"]], "ttnn.selu": [[308, "ttnn-selu"]], "ttnn.selu_bw": [[309, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[310, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[311, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[312, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[313, "ttnn-sigmoid-bw"]], "ttnn.sign": [[314, "ttnn-sign"]], "ttnn.sign_bw": [[315, "ttnn-sign-bw"]], "ttnn.signbit": [[316, "ttnn-signbit"]], "ttnn.silu": [[317, "ttnn-silu"]], "ttnn.silu_bw": [[318, "ttnn-silu-bw"]], "ttnn.sin": [[319, "ttnn-sin"]], "ttnn.sin_bw": [[320, "ttnn-sin-bw"]], "ttnn.sinh": [[321, "ttnn-sinh"]], "ttnn.sinh_bw": [[322, "ttnn-sinh-bw"]], "ttnn.slice": [[323, "ttnn-slice"]], "ttnn.softmax": [[324, "ttnn-softmax"]], "ttnn.softmax_in_place": [[325, "ttnn-softmax-in-place"]], "ttnn.softplus": [[326, "ttnn-softplus"]], "ttnn.softplus_bw": [[327, "ttnn-softplus-bw"]], "ttnn.softshrink": [[328, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[329, "ttnn-softshrink-bw"]], "ttnn.softsign": [[330, "ttnn-softsign"]], "ttnn.softsign_bw": [[331, "ttnn-softsign-bw"]], "ttnn.sort": [[332, "ttnn-sort"]], "ttnn.sparse_matmul": [[333, "ttnn-sparse-matmul"]], "ttnn.sqrt": [[334, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[335, "ttnn-sqrt-bw"]], "ttnn.square": [[336, "ttnn-square"]], "ttnn.square_bw": [[337, "ttnn-square-bw"]], "ttnn.squared_difference": [[338, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[339, "ttnn-squared-difference-bw"]], "ttnn.std": [[340, "ttnn-std"]], "ttnn.sub_bw": [[341, "ttnn-sub-bw"]], "ttnn.subalpha": [[342, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[343, "ttnn-subalpha-bw"]], "ttnn.subtract": [[344, "ttnn-subtract"]], "ttnn.sum": [[345, "ttnn-sum"]], "ttnn.swiglu": [[346, "ttnn-swiglu"]], "ttnn.swish": [[347, "ttnn-swish"]], "ttnn.synchronize_device": [[348, "ttnn-synchronize-device"]], "ttnn.tan": [[349, "ttnn-tan"]], "ttnn.tan_bw": [[350, "ttnn-tan-bw"]], "ttnn.tanh": [[351, "ttnn-tanh"]], "ttnn.tanh_bw": [[352, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[353, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[354, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[355, "ttnn-threshold"]], "ttnn.threshold_bw": [[356, "ttnn-threshold-bw"]], "ttnn.tilize": [[357, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[358, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[359, "ttnn-to-device"]], "ttnn.to_layout": [[360, "ttnn-to-layout"]], "ttnn.to_memory_config": [[361, "ttnn-to-memory-config"]], "ttnn.to_torch": [[362, "ttnn-to-torch"]], "ttnn.topk": [[363, "ttnn-topk"]], "index_tensor": [[363, "id3"]], "ttnn.transformer.attention_softmax": [[364, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[365, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[366, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[367, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[368, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[369, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[370, "ttnn-tril"]], "ttnn.triu": [[371, "ttnn-triu"]], "ttnn.trunc": [[372, "ttnn-trunc"]], "ttnn.trunc_bw": [[373, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[374, "ttnn-unary-chain"]], "ttnn.untilize": [[375, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[376, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[377, "ttnn-upsample"]], "ttnn.var": [[378, "ttnn-var"]], "ttnn.where": [[379, "ttnn-where"]], "ttnn.where_bw": [[380, "ttnn-where-bw"]], "ttnn.xlogy": [[381, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[382, "ttnn-xlogy-bw"]], "ttnn.zeros": [[383, "ttnn-zeros"]], "ttnn.zeros_like": [[384, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[385, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[385, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[385, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[385, "step-3-optimizing-the-model"]], "More examples": [[385, "more-examples"]], "Building and Uplifting Demos": [[386, "building-and-uplifting-demos"]], "Getting Started": [[387, "getting-started"]], "1. Install and Build": [[387, "install-and-build"]], "2. Explore Our Model Demos": [[387, "explore-our-model-demos"]], "Where To Go From Here": [[387, "where-to-go-from-here"]], "Install": [[388, "install"]], "Prerequisites:": [[388, "prerequisites"]], "1: Set Up the Hardware": [[388, "set-up-the-hardware"]], "2: Install Software Dependencies": [[388, "install-software-dependencies"]], "Option 1: TT-Installer Script (recommended)": [[388, "option-1-tt-installer-script-recommended"]], "Option 2: Manual Installation": [[388, "option-2-manual-installation"]], "TT-NN / TT-Metalium Installation": [[388, "tt-nn-tt-metalium-installation"]], "There are four options for installing TT-Metalium:": [[388, "there-are-four-options-for-installing-tt-metalium"]], "Binaries": [[388, "binaries"]], "Step 1. Install the Latest Wheel:": [[388, "step-1-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[388, "step-2-for-models-users-only-set-up-environment-for-models"]], "Docker Release Image": [[388, "docker-release-image"]], "Source": [[388, "source"]], "Step 1. Clone the Repository:": [[388, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[388, "step-2-build-the-library"]], "Step 3. Virtual Environment Setup": [[388, "step-3-virtual-environment-setup"]], "Anaconda": [[388, "anaconda"]], "Step 1. Install the Latest Package:": [[388, "step-1-install-the-latest-package"]], "You are All Set!": [[388, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[388, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[388, "interested-in-contributing"]], "Multi-Card Configuration (TT-Topology)": [[388, "multi-card-configuration-tt-topology"]], "Virtual Machine Requirements": [[388, "virtual-machine-requirements"]], "Overview": [[388, "overview"]], "Why It Matters": [[388, "why-it-matters"]], "Requirements for VMs": [[388, "requirements-for-vms"]], "Onboarding New Functionality": [[389, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[390, "profiling-tt-nn-operations"]], "Perf Report Headers": [[390, "perf-report-headers"]], "profile_this description": [[390, "profile-this-description"]], "Using the Performance Report with TT-NN Visualizer": [[390, "using-the-performance-report-with-tt-nn-visualizer"]], "Tensor": [[391, "tensor"]], "Shape": [[391, "shape"]], "Layout": [[391, "layout"]], "Data Type": [[391, "data-type"]], "Required Width Multiples for Data Types": [[391, "id5"]], "Limitation of BFLOAT8_B": [[391, "limitation-of-bfloat8-b"]], "Storage": [[391, "storage"]], "Tensor Sharding": [[391, "tensor-sharding"]], "Tutorials": [[392, "tutorials"]], "Add Tensors": [[393, "Add-Tensors"]], "Import Libraries": [[393, "Import-Libraries"]], "Open Tenstorrent device": [[393, "Open-Tenstorrent-device"], [394, "Open-Tenstorrent-device"], [395, "Open-Tenstorrent-device"], [396, "Open-Tenstorrent-device"], [398, "Open-Tenstorrent-device"]], "Addition Operation and Conversion": [[393, "Addition-Operation-and-Conversion"]], "Close the Device": [[393, "Close-the-Device"]], "Full Example and Output": [[393, "Full-Example-and-Output"]], "Basic Convolution": [[394, "Basic-Convolution"]], "Import the necessary libraries": [[394, "Import-the-necessary-libraries"], [395, "Import-the-necessary-libraries"], [396, "Import-the-necessary-libraries"]], "Set manual seed for reproducibility": [[394, "Set-manual-seed-for-reproducibility"]], "Create forward method": [[394, "Create-forward-method"]], "Set input and convolution parameters": [[394, "Set-input-and-convolution-parameters"]], "Create tensors": [[394, "Create-tensors"]], "Run convolution operation": [[394, "Run-convolution-operation"]], "Close The Device": [[394, "Close-The-Device"], [395, "Close-The-Device"], [396, "Close-The-Device"], [398, "Close-The-Device"]], "Full example and output": [[394, "Full-example-and-output"], [395, "Full-example-and-output"], [396, "Full-example-and-output"], [397, "Full-example-and-output"], [398, "Full-example-and-output"]], "More Basic Tensor Operations": [[395, "More-Basic-Tensor-Operations"]], "Host Tensor Creation": [[395, "Host-Tensor-Creation"]], "Convert Host Tensors to TT-NN Tiled Tensors or Create Natively on Device": [[395, "Convert-Host-Tensors-to-TT-NN-Tiled-Tensors-or-Create-Natively-on-Device"]], "Tile-Based Arithmetic Operations": [[395, "Tile-Based-Arithmetic-Operations"]], "Simulated Broadcasting (Row Vector Expansion)": [[395, "Simulated-Broadcasting-(Row-Vector-Expansion)"]], "MLP Inference": [[396, "MLP-Inference"]], "Load MNIST Test Data": [[396, "Load-MNIST-Test-Data"]], "Load Pretrained MLP Weights": [[396, "Load-Pretrained-MLP-Weights"]], "Basic accuracy tracking, inference, loop, and image flattening": [[396, "Basic-accuracy-tracking,-inference,-loop,-and-image-flattening"]], "Multi-Head Attention": [[397, "Multi-Head-Attention"]], "Write Multi-Head Attention using ttnn": [[397, "Write-Multi-Head-Attention-using-ttnn"]], "Configuration": [[397, "Configuration"]], "Initialize activations and weights using torch": [[397, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[397, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[397, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[397, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[397, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[397, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[397, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[397, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[397, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Close the device": [[397, "Close-the-device"]], "Running a Simple CNN Inference on CIFAR-10": [[398, "Running-a-Simple-CNN-Inference-on-CIFAR-10"]], "Setup and Imports": [[398, "Setup-and-Imports"]], "Load CIFAR-10 Dataset": [[398, "Load-CIFAR-10-Dataset"]], "Load or Initialize Weights": [[398, "Load-or-Initialize-Weights"]], "Define Convolution + Pooling Stage": [[398, "Define-Convolution-+-Pooling-Stage"]], "Run Inference on Test Samples": [[398, "Run-Inference-on-Test-Samples"]], "TT-NN Visualizer": [[399, "tt-nn-visualizer"]], "Prerequisites": [[399, "prerequisites"]], "Running TTNN Visualizer": [[399, "running-ttnn-visualizer"]], "Model Profiling": [[399, "model-profiling"]], "Generating the Memory Report": [[399, "generating-the-memory-report"]], "Generating the Performance Report": [[399, "generating-the-performance-report"]], "Result Analysis": [[399, "result-analysis"]], "Uploading Reports": [[399, "uploading-reports"]], "Operations Tab": [[399, "operations-tab"]], "Tensors Tab": [[399, "tensors-tab"]], "Buffers Tab": [[399, "buffers-tab"]], "Graph Tab": [[399, "graph-tab"]], "Performance Tab": [[399, "performance-tab"]], "Recap": [[399, "recap"]], "Using TT-NN": [[400, "using-tt-nn"]], "Basic Examples": [[400, "basic-examples"]], "1. Converting from and to torch tensor": [[400, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[400, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[400, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[400, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[400, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[400, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[400, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[400, "enabling-logging"]], "9. Supported Python Operators": [[400, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[400, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[400, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[400, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[400, "query-all-operations"]], "14. Falling back to torch": [[400, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[400, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[6, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.activation"]], "core_grid (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.deallocate_activation"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "full_inner_dim (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.full_inner_dim"]], "in_place (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.override_sharding_config"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "matmulmulticorereusemulticast1dprogramconfig (class in ttnn)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig"]], "compute_with_storage_grid_size (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.compute_with_storage_grid_size"]], "from_json() (ttnn.matmulmulticorereusemulticast1dprogramconfig method)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.from_json"]], "fuse_batch (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.fuse_batch"]], "fused_activation (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.fused_activation"]], "gather_in0 (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.gather_in0"]], "hop_cores (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.hop_cores"]], "in0_block_w (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.in0_block_w"]], "mcast_in0 (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.mcast_in0"]], "num_global_cb_receivers (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.num_global_cb_receivers"]], "out_block_h (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.out_block_h"]], "out_block_w (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.out_block_w"]], "out_subblock_h (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.out_subblock_h"]], "out_subblock_w (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.out_subblock_w"]], "per_core_m (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.per_core_M"]], "per_core_n (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.per_core_N"]], "to_json() (ttnn.matmulmulticorereusemulticast1dprogramconfig method)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.to_json"]], "untilize_out (ttnn.matmulmulticorereusemulticast1dprogramconfig property)": [[9, "ttnn.MatmulMultiCoreReuseMultiCast1DProgramConfig.untilize_out"]], "matmulmulticorereusemulticastdramshardedprogramconfig (class in ttnn)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig"]], "from_json() (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig method)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.from_json"]], "fused_activation (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig property)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.fused_activation"]], "in0_block_w (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig property)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.in0_block_w"]], "per_core_m (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig property)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.per_core_M"]], "per_core_n (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig property)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.per_core_N"]], "to_json() (ttnn.matmulmulticorereusemulticastdramshardedprogramconfig method)": [[10, "ttnn.MatmulMultiCoreReuseMultiCastDRAMShardedProgramConfig.to_json"]], "matmulmulticorereusemulticastprogramconfig (class in ttnn)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig"]], "compute_with_storage_grid_size (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.compute_with_storage_grid_size"]], "from_json() (ttnn.matmulmulticorereusemulticastprogramconfig method)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.from_json"]], "fuse_batch (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.fuse_batch"]], "fused_activation (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.fused_activation"]], "in0_block_w (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.in0_block_w"]], "out_block_h (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.out_block_h"]], "out_block_w (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.out_block_w"]], "out_subblock_h (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.out_subblock_h"]], "out_subblock_w (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.out_subblock_w"]], "per_core_m (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.per_core_M"]], "per_core_n (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.per_core_N"]], "to_json() (ttnn.matmulmulticorereusemulticastprogramconfig method)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.to_json"]], "transpose_mcast (ttnn.matmulmulticorereusemulticastprogramconfig property)": [[11, "ttnn.MatmulMultiCoreReuseMultiCastProgramConfig.transpose_mcast"]], "matmulmulticorereuseprogramconfig (class in ttnn)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig"]], "compute_with_storage_grid_size (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.compute_with_storage_grid_size"]], "from_json() (ttnn.matmulmulticorereuseprogramconfig method)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.from_json"]], "in0_block_w (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.in0_block_w"]], "out_subblock_h (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.out_subblock_h"]], "out_subblock_w (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.out_subblock_w"]], "per_core_m (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.per_core_M"]], "per_core_n (ttnn.matmulmulticorereuseprogramconfig property)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.per_core_N"]], "to_json() (ttnn.matmulmulticorereuseprogramconfig method)": [[12, "ttnn.MatmulMultiCoreReuseProgramConfig.to_json"]], "setdefaultdevice() (in module ttnn)": [[13, "ttnn.SetDefaultDevice"]], "softmaxdefaultprogramconfig (class in ttnn)": [[14, "ttnn.SoftmaxDefaultProgramConfig"]], "softmaxprogramconfig (class in ttnn)": [[15, "ttnn.SoftmaxProgramConfig"]], "softmaxshardedmulticoreprogramconfig (class in ttnn)": [[16, "ttnn.SoftmaxShardedMultiCoreProgramConfig"]], "block_w (ttnn.softmaxshardedmulticoreprogramconfig property)": [[16, "ttnn.SoftmaxShardedMultiCoreProgramConfig.block_w"]], "abs (in module ttnn)": [[17, "ttnn.abs"]], "abs_bw (in module ttnn)": [[18, "ttnn.abs_bw"]], "acos (in module ttnn)": [[19, "ttnn.acos"]], "acos_bw (in module ttnn)": [[20, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[21, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[22, "ttnn.acosh_bw"]], "add (in module ttnn)": [[23, "ttnn.add"]], "add_bw (in module ttnn)": [[24, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[25, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[26, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[27, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[28, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[29, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[30, "ttnn.addcmul_bw"]], "addmm (in module ttnn)": [[31, "ttnn.addmm"]], "alt_complex_rotate90 (in module ttnn)": [[32, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[33, "ttnn.angle"]], "angle_bw (in module ttnn)": [[34, "ttnn.angle_bw"]], "arange (in module ttnn)": [[35, "ttnn.arange"]], "argmax (in module ttnn)": [[36, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[37, "ttnn.as_tensor"]], "asin (in module ttnn)": [[38, "ttnn.asin"]], "asin_bw (in module ttnn)": [[39, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[40, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[41, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[42, "ttnn.assign_bw"]], "atan (in module ttnn)": [[43, "ttnn.atan"]], "atan2 (in module ttnn)": [[44, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[45, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[46, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[47, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[48, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[49, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[50, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[51, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[52, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[53, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[54, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[55, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[56, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[57, "ttnn.cbrt"]], "ceil (in module ttnn)": [[58, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[59, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[60, "ttnn.celu"]], "celu_bw (in module ttnn)": [[61, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[62, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[63, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[64, "ttnn.clip"]], "clip_bw (in module ttnn)": [[65, "ttnn.clip_bw"]], "clone (in module ttnn)": [[66, "ttnn.clone"]], "close_device() (in module ttnn)": [[67, "ttnn.close_device"]], "concat (in module ttnn)": [[68, "ttnn.concat"]], "concat_bw (in module ttnn)": [[69, "ttnn.concat_bw"]], "conj (in module ttnn)": [[70, "ttnn.conj"]], "conj_bw (in module ttnn)": [[71, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[72, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[73, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[74, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[75, "ttnn.cos"]], "cos_bw (in module ttnn)": [[76, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[77, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[78, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[79, "ttnn.create_sharded_memory_config"]], "cumprod (in module ttnn)": [[80, "ttnn.cumprod"]], "cumsum (in module ttnn)": [[81, "ttnn.cumsum"]], "deallocate (in module ttnn)": [[82, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[83, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[84, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[85, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[86, "ttnn.digamma_bw"]], "div (in module ttnn)": [[87, "ttnn.div"]], "div_bw (in module ttnn)": [[88, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[89, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[90, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[91, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[92, "ttnn.elu"]], "elu_bw (in module ttnn)": [[93, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[94, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[95, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[96, "ttnn.empty"]], "empty_like (in module ttnn)": [[97, "ttnn.empty_like"]], "eq (in module ttnn)": [[98, "ttnn.eq"]], "eq_ (in module ttnn)": [[99, "ttnn.eq_"]], "eqz (in module ttnn)": [[100, "ttnn.eqz"]], "erf (in module ttnn)": [[101, "ttnn.erf"]], "erf_bw (in module ttnn)": [[102, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[103, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[104, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[105, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[106, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[107, "ttnn.exp"]], "exp2 (in module ttnn)": [[108, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[109, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[110, "ttnn.exp_bw"]], "conv3d (in module ttnn.experimental)": [[111, "ttnn.experimental.conv3d"]], "dropout (in module ttnn.experimental)": [[112, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[113, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[114, "ttnn.experimental.rotary_embedding"]], "expm1 (in module ttnn)": [[115, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[116, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[117, "ttnn.fill"]], "fill_bw (in module ttnn)": [[118, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[119, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[120, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[121, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[122, "ttnn.floor"]], "floor_bw (in module ttnn)": [[123, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[124, "ttnn.floor_div"]], "fmod (in module ttnn)": [[125, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[126, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[127, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[128, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[129, "ttnn.frac"]], "frac_bw (in module ttnn)": [[130, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[131, "ttnn.from_device"]], "from_torch (in module ttnn)": [[132, "ttnn.from_torch"]], "full (in module ttnn)": [[133, "ttnn.full"]], "full_like (in module ttnn)": [[134, "ttnn.full_like"]], "gather (in module ttnn)": [[135, "ttnn.gather"]], "gcd (in module ttnn)": [[136, "ttnn.gcd"]], "ge (in module ttnn)": [[137, "ttnn.ge"]], "ge_ (in module ttnn)": [[138, "ttnn.ge_"]], "geglu (in module ttnn)": [[139, "ttnn.geglu"]], "gelu (in module ttnn)": [[140, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[141, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[142, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[143, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[144, "ttnn.glu"]], "group_norm (in module ttnn)": [[145, "ttnn.group_norm"]], "gt (in module ttnn)": [[146, "ttnn.gt"]], "gt_ (in module ttnn)": [[147, "ttnn.gt_"]], "gtz (in module ttnn)": [[148, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[149, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[150, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[151, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[152, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[153, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[154, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[155, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[156, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[157, "ttnn.heaviside"]], "hypot (in module ttnn)": [[158, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[159, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[160, "ttnn.i0"]], "i0_bw (in module ttnn)": [[161, "ttnn.i0_bw"]], "identity (in module ttnn)": [[162, "ttnn.identity"]], "imag (in module ttnn)": [[163, "ttnn.imag"]], "imag_bw (in module ttnn)": [[164, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[165, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[166, "ttnn.is_imag"]], "is_real (in module ttnn)": [[167, "ttnn.is_real"]], "isclose (in module ttnn)": [[168, "ttnn.isclose"]], "isfinite (in module ttnn)": [[169, "ttnn.isfinite"]], "isinf (in module ttnn)": [[170, "ttnn.isinf"]], "isnan (in module ttnn)": [[171, "ttnn.isnan"]], "isneginf (in module ttnn)": [[172, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[173, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[174, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[175, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[176, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[177, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[178, "ttnn.lcm"]], "ldexp (in module ttnn)": [[179, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[180, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[181, "ttnn.le"]], "le_ (in module ttnn)": [[182, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[183, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[184, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[185, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[186, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[187, "ttnn.lez"]], "lgamma (in module ttnn)": [[188, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[189, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[190, "ttnn.linear"]], "load_tensor (in module ttnn)": [[191, "ttnn.load_tensor"]], "log (in module ttnn)": [[192, "ttnn.log"]], "log10 (in module ttnn)": [[193, "ttnn.log10"]], "log10_bw (in module ttnn)": [[194, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[195, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[196, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[197, "ttnn.log2"]], "log2_bw (in module ttnn)": [[198, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[199, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[200, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[201, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[202, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[203, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[204, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[205, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[206, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[207, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[208, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[209, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[210, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[211, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[212, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[213, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[214, "ttnn.logit"]], "logit_bw (in module ttnn)": [[215, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[216, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[217, "ttnn.lt"]], "lt_ (in module ttnn)": [[218, "ttnn.lt_"]], "ltz (in module ttnn)": [[219, "ttnn.ltz"]], "mac (in module ttnn)": [[220, "ttnn.mac"]], "manage_device() (in module ttnn)": [[221, "ttnn.manage_device"]], "matmul (in module ttnn)": [[222, "ttnn.matmul"]], "matmul_batched_weights (in module ttnn)": [[223, "ttnn.matmul_batched_weights"]], "max (in module ttnn)": [[224, "ttnn.max"]], "max_bw (in module ttnn)": [[225, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[226, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[227, "ttnn.maximum"]], "mean (in module ttnn)": [[228, "ttnn.mean"]], "min (in module ttnn)": [[229, "ttnn.min"]], "min_bw (in module ttnn)": [[230, "ttnn.min_bw"]], "minimum (in module ttnn)": [[231, "ttnn.minimum"]], "mish (in module ttnn)": [[232, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[233, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[234, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[235, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[236, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[237, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[238, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[239, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[240, "ttnn.multiply"]], "ne (in module ttnn)": [[241, "ttnn.ne"]], "ne_ (in module ttnn)": [[242, "ttnn.ne_"]], "neg (in module ttnn)": [[243, "ttnn.neg"]], "neg_bw (in module ttnn)": [[244, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[245, "ttnn.nextafter"]], "nez (in module ttnn)": [[246, "ttnn.nez"]], "nonzero (in module ttnn)": [[247, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[248, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[249, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[250, "ttnn.ones"]], "ones_like (in module ttnn)": [[251, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[252, "ttnn.open_device"]], "outer (in module ttnn)": [[253, "ttnn.outer"]], "pad (in module ttnn)": [[254, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[255, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[256, "ttnn.permute"]], "polar (in module ttnn)": [[257, "ttnn.polar"]], "polar_bw (in module ttnn)": [[258, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[259, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[260, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[261, "ttnn.polyval"]], "pow (in module ttnn)": [[262, "ttnn.pow"]], "pow_bw (in module ttnn)": [[263, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[264, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[265, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[266, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[267, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[268, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[269, "ttnn.prod"]], "prod_bw (in module ttnn)": [[270, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[271, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[272, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[273, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[274, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[275, "ttnn.real"]], "real_bw (in module ttnn)": [[276, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[277, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[278, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[279, "ttnn.reciprocal_bw"]], "register_post_operation_hook() (in module ttnn)": [[280, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[281, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[282, "ttnn.reglu"]], "relu (in module ttnn)": [[283, "ttnn.relu"]], "relu6 (in module ttnn)": [[284, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[285, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[286, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[287, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[288, "ttnn.relu_min"]], "remainder (in module ttnn)": [[289, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[290, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[291, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[292, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[293, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[294, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[295, "ttnn.rms_norm"]], "round (in module ttnn)": [[296, "ttnn.round"]], "round_bw (in module ttnn)": [[297, "ttnn.round_bw"]], "rpow (in module ttnn)": [[298, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[299, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[300, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[301, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[302, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[303, "ttnn.rsub_bw"]], "scale_causal_mask_hw_dims_softmax_in_place (in module ttnn)": [[304, "ttnn.scale_causal_mask_hw_dims_softmax_in_place"]], "scale_mask_softmax (in module ttnn)": [[305, "ttnn.scale_mask_softmax"]], "scale_mask_softmax_in_place (in module ttnn)": [[306, "ttnn.scale_mask_softmax_in_place"]], "scatter (in module ttnn)": [[307, "ttnn.scatter"]], "selu (in module ttnn)": [[308, "ttnn.selu"]], "selu_bw (in module ttnn)": [[309, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[310, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[311, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[312, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[313, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[314, "ttnn.sign"]], "sign_bw (in module ttnn)": [[315, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[316, "ttnn.signbit"]], "silu (in module ttnn)": [[317, "ttnn.silu"]], "silu_bw (in module ttnn)": [[318, "ttnn.silu_bw"]], "sin (in module ttnn)": [[319, "ttnn.sin"]], "sin_bw (in module ttnn)": [[320, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[321, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[322, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[323, "ttnn.slice"]], "softmax (in module ttnn)": [[324, "ttnn.softmax"]], "softmax_in_place (in module ttnn)": [[325, "ttnn.softmax_in_place"]], "softplus (in module ttnn)": [[326, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[327, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[328, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[329, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[330, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[331, "ttnn.softsign_bw"]], "sort (in module ttnn)": [[332, "ttnn.sort"]], "sparse_matmul (in module ttnn)": [[333, "ttnn.sparse_matmul"]], "sqrt (in module ttnn)": [[334, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[335, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[336, "ttnn.square"]], "square_bw (in module ttnn)": [[337, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[338, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[339, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[340, "ttnn.std"]], "sub_bw (in module ttnn)": [[341, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[342, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[343, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[344, "ttnn.subtract"]], "sum (in module ttnn)": [[345, "ttnn.sum"]], "swiglu (in module ttnn)": [[346, "ttnn.swiglu"]], "swish (in module ttnn)": [[347, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[348, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[349, "ttnn.tan"]], "tan_bw (in module ttnn)": [[350, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[351, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[352, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[353, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[354, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[355, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[356, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[357, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[358, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[359, "ttnn.to_device"]], "to_layout (in module ttnn)": [[360, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[361, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[362, "ttnn.to_torch"]], "topk (in module ttnn)": [[363, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[364, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[365, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[366, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[367, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[368, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[369, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[370, "ttnn.tril"]], "triu (in module ttnn)": [[371, "ttnn.triu"]], "trunc (in module ttnn)": [[372, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[373, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[374, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[375, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[376, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[377, "ttnn.upsample"]], "var (in module ttnn)": [[378, "ttnn.var"]], "where (in module ttnn)": [[379, "ttnn.where"]], "where_bw (in module ttnn)": [[380, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[381, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[382, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[383, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[384, "ttnn.zeros_like"]], "shape (class in ttnn)": [[391, "ttnn.Shape"]], "rank (ttnn.shape property)": [[391, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[391, "ttnn.Shape.to_rank"]]}})