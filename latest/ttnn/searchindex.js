Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.SoftmaxDefaultProgramConfig", "ttnn/api/ttnn.SoftmaxProgramConfig", "ttnn/api/ttnn.SoftmaxShardedMultiCoreProgramConfig", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.cumprod", "ttnn/api/ttnn.cumsum", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gather", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scale_causal_mask_hw_dims_softmax_in_place", "ttnn/api/ttnn.scale_mask_softmax", "ttnn/api/ttnn.scale_mask_softmax_in_place", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softmax_in_place", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sort", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.SoftmaxDefaultProgramConfig.rst", "ttnn/api/ttnn.SoftmaxProgramConfig.rst", "ttnn/api/ttnn.SoftmaxShardedMultiCoreProgramConfig.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.cumprod.rst", "ttnn/api/ttnn.cumsum.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gather.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scale_causal_mask_hw_dims_softmax_in_place.rst", "ttnn/api/ttnn.scale_mask_softmax.rst", "ttnn/api/ttnn.scale_mask_softmax_in_place.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softmax_in_place.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sort.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/2025_dx_rework/ttnn_add_tensors.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_conv.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_basic_operations.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_mlp_inference_mnist.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_multihead_attention.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_simplecnn_inference.ipynb", "ttnn/tutorials/2025_dx_rework/ttnn_visualizer.md", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.SoftmaxDefaultProgramConfig", "ttnn.SoftmaxProgramConfig", "ttnn.SoftmaxShardedMultiCoreProgramConfig", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.cumprod", "ttnn.cumsum", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.conv3d", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gather", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scale_causal_mask_hw_dims_softmax_in_place", "ttnn.scale_mask_softmax", "ttnn.scale_mask_softmax_in_place", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softmax_in_place", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sort", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Add Tensors", "Basic Convolution", "More Basic Tensor Operations", "MLP Inference", "Multi-Head Attention", "Running a Simple CNN Inference on CIFAR-10", "TT-NN Visualizer", "Using TT-NN"], "terms": {"what": [0, 379, 383, 392], "i": [0, 6, 7, 8, 9, 11, 12, 20, 22, 31, 40, 44, 45, 48, 62, 63, 64, 69, 74, 82, 83, 89, 90, 93, 109, 112, 114, 115, 122, 123, 125, 127, 130, 132, 134, 138, 139, 140, 141, 154, 156, 161, 162, 172, 175, 176, 181, 185, 199, 200, 201, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 231, 233, 235, 246, 248, 249, 251, 253, 255, 256, 258, 263, 264, 267, 272, 274, 275, 276, 281, 282, 287, 288, 289, 292, 297, 298, 299, 300, 301, 317, 318, 319, 326, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 346, 353, 355, 356, 357, 358, 360, 361, 362, 370, 371, 375, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393], "get": [0, 6, 8, 305, 359, 378, 381, 385, 387, 392], "start": [0, 30, 180, 317, 378, 381, 383, 385, 390, 392], "1": [0, 6, 7, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 73, 75, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 309, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 356, 360, 361, 362, 366, 371, 372, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 390, 391, 392], "instal": [0, 379, 383, 385, 392, 393], "build": [0, 387, 392], "2": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 263, 265, 266, 267, 268, 270, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 355, 360, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 384, 386, 387, 388, 389, 390, 391], "explor": [0, 392], "our": [0, 379, 381, 382, 384, 386, 387, 388, 389, 391], "model": [0, 3, 227, 228, 379, 382, 383, 385, 386, 387, 389, 391], "demo": [0, 381, 383, 392], "where": [0, 2, 6, 30, 44, 69, 74, 91, 92, 122, 123, 140, 172, 185, 217, 241, 258, 298, 299, 301, 353, 373, 379, 383, 384, 391, 392], "To": [0, 6, 356, 382, 384, 385, 388, 392, 393], "go": [0, 301], "from": [0, 2, 4, 6, 30, 32, 62, 63, 67, 68, 69, 75, 76, 90, 127, 130, 169, 170, 186, 259, 260, 261, 262, 296, 297, 298, 299, 301, 318, 337, 369, 378, 379, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392], "here": [0, 2, 4, 381, 383, 386, 387, 388, 389, 391, 392], "prerequisit": [0, 385], "set": [0, 6, 9, 10, 63, 69, 114, 217, 233, 250, 259, 260, 263, 304, 341, 356, 359, 362, 378, 383, 385, 389, 391, 392, 393], "up": [0, 3, 115, 301, 383, 385, 387, 391], "hardwar": [0, 2, 4, 246, 378, 379, 380, 384, 386, 389, 391, 392, 393], "softwar": [0, 387, 388, 389, 390, 391], "depend": [0, 259, 260, 261, 262, 353, 379, 383, 384, 385], "option": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 387, 391, 392, 393], "script": [0, 379, 383, 385, 386, 387, 388, 389, 390, 391], "recommend": [0, 6, 175, 378, 385, 392, 393], "manual": [0, 4, 378, 385, 393], "metalium": [0, 4], "There": [0, 4, 217, 378, 384], "ar": [0, 6, 7, 9, 20, 39, 44, 47, 50, 61, 63, 75, 76, 83, 115, 130, 140, 172, 185, 217, 220, 241, 250, 256, 274, 275, 292, 299, 317, 341, 356, 362, 370, 378, 379, 380, 383, 384, 385, 387, 389, 390, 391, 392, 393], "four": 0, "binari": [0, 19, 21, 39, 46, 47, 49, 50, 51, 82, 84, 93, 94, 119, 120, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 221, 225, 234, 235, 236, 239, 247, 255, 256, 258, 283, 296, 331, 335, 337, 374], "step": [0, 30, 317, 379, 382, 392], "latest": [0, 383], "wheel": [0, 393], "For": [0, 4, 6, 14, 24, 32, 45, 68, 75, 76, 83, 121, 127, 130, 136, 154, 181, 189, 191, 193, 194, 196, 199, 200, 210, 211, 217, 257, 264, 268, 273, 284, 299, 300, 319, 321, 326, 328, 356, 362, 375, 378, 379, 382, 383, 384, 387, 389, 391, 392], "user": [0, 4, 6, 157, 185, 217, 227, 228, 246, 351, 379, 380, 382, 387, 388, 389, 390, 391, 392], "onli": [0, 4, 6, 7, 20, 22, 23, 25, 31, 40, 45, 57, 58, 59, 60, 63, 64, 74, 82, 83, 90, 115, 127, 132, 134, 139, 140, 141, 154, 175, 176, 180, 181, 199, 200, 201, 212, 215, 217, 218, 219, 222, 223, 224, 231, 248, 253, 261, 262, 272, 276, 284, 297, 298, 332, 333, 334, 336, 338, 339, 341, 344, 346, 361, 362, 371, 372, 375, 378, 379, 383, 384, 391, 392, 393], "environ": [0, 6, 380, 385, 392, 393], "docker": [0, 393], "releas": [0, 77, 393], "imag": [0, 69, 161, 251, 379, 383, 384, 385, 387, 391, 393], "sourc": [0, 3, 130, 169, 301, 392], "clone": [0, 157, 362, 392], "repositori": [0, 1, 380, 385, 392], "librari": [0, 3, 385, 391], "3": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 250, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 355, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 384, 385, 386, 387, 389, 390, 391], "virtual": [0, 385], "setup": [0, 379, 380, 385, 392], "anaconda": 0, "packag": 0, "you": [0, 1, 2, 4, 320, 379, 380, 383, 384, 385, 389, 391, 392, 393], "all": [0, 4, 6, 11, 31, 44, 130, 138, 172, 217, 218, 222, 223, 227, 228, 248, 255, 263, 264, 289, 299, 300, 333, 338, 341, 356, 371, 378, 379, 382, 383, 384, 389, 390, 391, 392], "verifi": [0, 382, 391], "your": [0, 379, 380, 383, 385, 392], "try": [0, 6, 379, 387], "execut": [0, 6, 12, 274, 275, 356, 379, 383, 389, 390, 391, 392, 393], "program": [0, 3, 4, 10, 11, 12, 185, 217, 298, 300, 319, 357, 358, 383, 386, 387, 388, 389, 390, 391], "exampl": [0, 76, 126, 130, 218, 222, 223, 250, 263, 287, 301, 326, 333, 338, 341, 352, 371, 379, 380, 382, 383, 384, 385, 392], "interest": 0, "contribut": [0, 2, 380], "multi": [0, 12, 32, 319, 370, 384, 385, 389], "card": [0, 379], "configur": [0, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 385, 387, 391, 392], "topologi": 0, "machin": [0, 383, 392], "requir": [0, 4, 20, 22, 37, 44, 64, 74, 83, 114, 115, 128, 227, 228, 231, 244, 297, 298, 334, 336, 373, 376, 379, 383, 388, 392], "overview": [0, 392], "why": 0, "It": [0, 3, 4, 6, 7, 10, 11, 12, 67, 68, 69, 227, 228, 355, 389, 391, 392], "matter": 0, "vm": 0, "us": [0, 3, 4, 6, 7, 8, 9, 10, 11, 45, 63, 67, 68, 69, 74, 83, 89, 90, 92, 96, 98, 102, 107, 108, 109, 115, 127, 129, 135, 136, 140, 154, 157, 185, 187, 188, 190, 192, 217, 220, 227, 228, 245, 246, 248, 259, 260, 261, 262, 267, 268, 274, 275, 286, 294, 298, 299, 300, 304, 305, 318, 319, 320, 326, 350, 351, 354, 355, 356, 361, 362, 368, 369, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "basic": [0, 381, 385], "convert": [0, 3, 4, 6, 32, 61, 127, 130, 227, 228, 259, 260, 261, 262, 326, 354, 355, 384, 385, 387, 389, 391], "torch": [0, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 377, 378, 384, 385, 387, 388, 389, 391], "tensor": [0, 3, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 383, 385, 389, 390, 391], "run": [0, 3, 4, 44, 127, 227, 274, 275, 344, 346, 356, 379, 380, 381, 382, 383, 385, 386, 388, 389], "an": [0, 2, 3, 4, 63, 67, 68, 69, 89, 106, 115, 116, 120, 138, 216, 217, 251, 258, 263, 283, 298, 352, 355, 379, 380, 381, 382, 383, 384, 385, 387, 390, 391, 392], "oper": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 384, 385, 389, 390, 391], "devic": [0, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 392], "__getitem__": 0, "slice": [0, 6, 7], "4": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 381, 384, 387, 388, 389, 390, 391, 392], "enabl": [0, 3, 6, 12, 344, 346, 356, 381, 382, 383, 387, 388, 389, 390, 391, 392], "cach": [0, 3, 32, 62, 109, 169, 170, 227, 228, 383, 384, 387, 388, 389, 390, 391, 392], "5": [0, 6, 30, 44, 58, 60, 74, 75, 76, 80, 89, 91, 129, 144, 145, 163, 209, 232, 258, 268, 301, 322, 323, 326, 388, 389, 390, 391], "debug": [0, 3, 4, 382, 391, 392], "intermedi": [0, 299, 300], "6": [0, 30, 232, 290, 326, 384, 387, 388, 389, 390, 391], "trace": [0, 3, 246, 383], "graph": [0, 3, 227, 385], "7": [0, 89, 128, 290, 381, 387, 388, 389, 390, 391], "tt_lib": [0, 114, 115, 352], "8": [0, 12, 30, 74, 89, 248, 298, 300, 319, 383, 384, 387, 388, 391], "log": [0, 6, 196, 374, 383, 386, 389, 391, 392], "9": [0, 57, 59, 72, 89, 91, 315, 389, 390], "support": [0, 1, 3, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 356, 361, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 381, 384, 391, 392], "python": [0, 3, 381, 382, 383, 384, 385, 386, 388, 392], "10": [0, 30, 77, 89, 126, 130, 138, 156, 185, 217, 253, 271, 301, 348, 352, 353, 354, 381, 385, 387, 389, 392], "chang": [0, 6, 288, 350, 351, 368, 369, 384], "string": [0, 6, 45, 82, 136, 227, 228, 267, 268, 304], "represent": [0, 320, 384, 392], "11": [0, 91, 381], "visual": [0, 3, 385], "web": 0, "browser": [0, 392], "12": [0, 64, 140, 172, 248, 289, 298, 300, 378, 381, 385, 390], "regist": [0, 3, 4, 274, 275], "pre": [0, 4, 220, 275, 381, 385, 391], "post": [0, 274, 383], "hook": [0, 274, 275], "13": [0, 387, 388, 389, 390, 391], "queri": [0, 362, 390], "14": [0, 64, 387, 388, 389, 390, 391], "fall": [0, 175, 319], "back": [0, 4, 319, 359, 383, 385, 387, 389, 391], "15": [0, 387, 388, 391], "captur": 0, "c": [0, 3, 7, 44, 67, 68, 69, 106, 114, 115, 220, 305, 356, 370, 381, 383, 384, 387, 391], "function": [0, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 387, 388, 389, 391], "buffer": [0, 4, 6, 77, 246, 319, 383, 384, 385], "alloc": [0, 4, 30, 91, 92, 128, 129, 244, 245, 300, 319, 376, 377, 384, 392], "etc": [0, 3, 4, 301, 384, 391], "shape": [0, 30, 31, 44, 63, 69, 74, 75, 76, 91, 92, 112, 122, 123, 128, 129, 130, 138, 172, 185, 217, 220, 241, 244, 245, 248, 249, 250, 285, 286, 287, 288, 289, 298, 300, 317, 319, 351, 356, 359, 362, 369, 376, 377, 378, 383, 386, 387, 388, 389, 390, 391, 392], "layout": [0, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 383, 386, 387, 388, 389, 390, 391, 392, 393], "data": [0, 3, 6, 12, 19, 30, 31, 32, 61, 67, 68, 69, 89, 90, 91, 92, 93, 114, 115, 127, 128, 129, 131, 132, 138, 141, 172, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 218, 221, 222, 223, 225, 234, 235, 244, 245, 259, 260, 261, 262, 263, 267, 289, 296, 331, 333, 337, 338, 350, 351, 353, 354, 355, 356, 368, 369, 370, 371, 374, 376, 377, 378, 383, 385, 388, 391, 392, 393], "type": [0, 3, 4, 6, 7, 11, 19, 30, 31, 32, 45, 61, 67, 68, 69, 75, 76, 83, 89, 90, 91, 92, 93, 106, 114, 115, 122, 127, 128, 129, 130, 131, 132, 136, 138, 141, 172, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 218, 221, 222, 223, 225, 234, 235, 244, 245, 246, 250, 259, 260, 261, 262, 263, 267, 271, 288, 289, 296, 326, 331, 333, 337, 338, 341, 350, 351, 353, 354, 355, 356, 368, 369, 371, 374, 376, 377, 378, 383, 389, 391, 392], "limit": [0, 14, 24, 31, 44, 45, 83, 121, 136, 154, 172, 185, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 263, 264, 268, 273, 284, 289, 321, 328, 356, 375, 379], "bfloat8_b": [0, 6, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 45, 53, 55, 64, 70, 71, 72, 78, 79, 80, 81, 83, 85, 87, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 110, 111, 112, 117, 121, 124, 125, 127, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 224, 226, 231, 234, 235, 236, 237, 238, 239, 240, 255, 256, 257, 258, 264, 265, 266, 268, 272, 273, 276, 277, 278, 280, 281, 284, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 355, 363, 364, 365, 367, 371, 372, 373, 375, 378, 383, 390], "storag": [0, 12], "shard": [0, 6, 12, 20, 63, 74, 140, 172, 185, 217, 220, 259, 260, 261, 262, 289, 300, 319, 352, 354, 362, 392], "memori": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 387, 390, 391], "config": [0, 6, 10, 12, 65, 89, 90, 106, 122, 123, 172, 217, 251, 259, 260, 288, 298, 300, 317, 357, 358, 359, 378, 381, 387, 391, 392, 393], "api": [0, 4, 360, 378, 380, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393], "rank": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 355, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 384], "to_rank": [0, 384], "open_devic": [0, 9, 62, 77, 89, 90, 126, 186, 271, 301, 341, 352, 353, 354, 386, 387, 388, 389, 390, 391, 393], "close_devic": [0, 386, 387, 388, 389, 390, 391, 393], "manage_devic": [0, 393], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 384], "core": [0, 4, 6, 12, 74, 185, 217, 246, 319, 353, 354, 356, 368, 378, 383, 384, 387, 388, 389, 390, 391, 392], "as_tensor": 0, "from_torch": [0, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 363, 364, 365, 366, 367, 372, 373, 374, 375, 377, 378, 384, 388, 389, 390, 391, 393], "to_torch": [0, 4, 248, 378, 387, 388, 389, 390, 391, 393], "to_devic": [0, 28, 29, 65, 66, 77, 85, 89, 126, 158, 159, 160, 161, 162, 171, 185, 217, 220, 230, 241, 250, 251, 252, 254, 269, 270, 271, 293, 353, 354, 390], "from_devic": 0, "to_layout": [0, 77, 127, 355, 384, 390, 391], "dump_tensor": 0, "load_tensor": 0, "dealloc": [0, 6, 220, 271, 384, 390, 393], "realloc": [0, 220], "to_memory_config": [0, 298, 300, 384], "creation": [0, 12, 30, 91, 92, 127, 128, 129, 244, 245, 376, 377, 384, 385, 389], "arang": [0, 388], "empti": [0, 4, 6, 393], "empty_lik": 0, "zero": [0, 6, 63, 67, 68, 69, 82, 107, 116, 129, 216, 241, 250, 259, 260, 261, 262, 267, 272, 317, 384, 387, 388, 393], "zeros_lik": 0, "ones": [0, 86, 122, 384, 388], "ones_lik": 0, "full": [0, 6, 263, 379, 383, 384, 385, 392, 393], "full_lik": 0, "matrix": [0, 3, 6, 89, 185, 217, 384, 388, 392, 393], "multipl": [0, 3, 4, 6, 61, 77, 115, 128, 134, 139, 173, 217, 227, 244, 259, 260, 261, 262, 276, 339, 353, 356, 376, 381, 383, 388, 392], "matmul": [0, 185, 388, 390, 392], "linear": [0, 320, 378, 389, 390, 391], "pointwis": 0, "unari": [0, 4, 13, 15, 17, 27, 33, 35, 38, 42, 48, 52, 53, 55, 57, 59, 70, 72, 78, 80, 87, 95, 96, 98, 100, 102, 103, 110, 112, 117, 124, 134, 135, 137, 139, 143, 144, 146, 148, 150, 152, 155, 157, 164, 165, 166, 167, 168, 178, 182, 183, 187, 188, 190, 192, 195, 203, 204, 209, 214, 226, 232, 237, 240, 242, 243, 253, 265, 267, 268, 272, 276, 277, 278, 281, 282, 290, 292, 294, 302, 305, 306, 308, 310, 311, 313, 315, 320, 322, 324, 327, 329, 339, 340, 342, 344, 346, 348, 363, 364, 365, 367], "ab": [0, 14], "aco": [0, 16], "acosh": [0, 18], "asin": [0, 34], "asinh": [0, 36], "atan": [0, 41], "atanh": [0, 43], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 54, 220], "celu": [0, 56], "clamp": [0, 58], "clip": [0, 60], "co": 0, "cosh": [0, 73], "deg2rad": [0, 79], "digamma": [0, 81], "experiment": [0, 6, 298, 379], "dropout": 0, "gelu_bw": 0, "elu": [0, 88], "eqz": 0, "erf": [0, 97], "erfc": [0, 99], "erfinv": [0, 101], "exp": [0, 367, 393], "exp2": [0, 104], "expm1": [0, 111], "fill": [0, 113, 115, 116, 128, 129, 244, 245, 285, 317, 376, 377, 383, 386, 388], "floor": [0, 82, 83, 118, 119, 267, 268], "frac": [0, 39, 44, 82, 125, 140, 172, 318, 319], "geglu": 0, "gelu": [0, 6, 108, 134, 136, 378], "glu": 0, "gez": 0, "gtz": 0, "hardshrink": [0, 145, 179], "hardsigmoid": [0, 147], "hardswish": [0, 149], "hardtanh": [0, 151], "heavisid": 0, "i0": [0, 156], "ident": [0, 172, 300], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 179], "lez": 0, "lgamma": [0, 184], "log10": [0, 189], "log1p": [0, 191], "log2": [0, 193], "log_sigmoid": 0, "logical_not": [0, 204], "logical_not_": 0, "logit": [0, 210, 389, 391], "ltz": 0, "mish": [0, 6], "multigammaln": 0, "neg": [0, 238, 257], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 254], "prelu": 0, "rad2deg": [0, 266], "rdiv": [0, 268], "reciproc": [0, 273, 295, 384], "reglu": 0, "relu": [0, 6, 19, 178, 234, 276, 280, 281, 282, 320, 337, 367, 389, 391], "relu_max": 0, "relu_min": 0, "relu6": [0, 279], "remaind": [0, 284], "round": [0, 37, 82, 83, 267, 268, 291, 384], "rsqrt": 0, "selu": [0, 303], "sigmoid": [0, 6, 196, 307], "sigmoid_accur": 0, "sign": [0, 309], "signbit": 0, "silu": [0, 6, 312, 339, 393], "sin": [0, 314], "sinh": [0, 316], "softplu": [0, 6, 321], "softshrink": [0, 323], "softsign": [0, 325], "sqrt": [0, 6, 44, 140, 153, 172], "squar": [0, 6, 230, 289, 295, 328, 330, 331, 357, 358, 384], "swiglu": 0, "swish": 0, "tan": [0, 343], "tanh": [0, 6, 45, 108, 136, 345], "tanhshrink": [0, 347], "threshold": [0, 320, 321, 349], "tril": 0, "triu": 0, "trunc": [0, 82, 83, 267, 268], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 162, 251, 270, 379], "angl": [0, 29], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 66], "polar": [0, 252], "alt_complex_rotate90": 0, "add": [0, 20, 248, 299, 300, 357, 358, 379, 381, 382, 385, 388, 390, 393], "addalpha": [0, 22], "subalpha": [0, 336], "multipli": [0, 6, 21, 23, 25, 185, 217, 231, 298, 299, 300, 335, 370, 384, 393], "subtract": [0, 296, 297, 334, 362, 393], "div": 0, "div_no_nan": [0, 85], "floor_div": 0, "fmod": [0, 121], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 293], "rsub": 0, "ldexp": [0, 175], "logical_and": 0, "logical_or": 0, "logical_xor": 0, "bitwise_and": [0, 47, 50], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 200], "logaddexp2": [0, 199], "hypot": [0, 154], "xlogi": [0, 375], "squared_differ": [0, 332], "gt": 0, "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": 0, "le": 0, "eq": 0, "ne": 0, "isclos": 0, "nextaft": 0, "maximum": [0, 6, 31, 57, 58, 59, 60, 151, 219, 220], "minimum": [0, 4, 57, 58, 59, 60, 151, 224, 384], "outer": 0, "pow": 0, "polyv": 0, "scatter": 0, "atan2": [0, 40], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 23, 25, 180, 215, 372], "addcdiv": [0, 24], "addcmul": [0, 26], "mac": 0, "lerp": [0, 181], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 171, 230], "l1_loss": 0, "mse_loss": 0, "reduct": [0, 3, 6, 31, 75, 76, 171, 218, 222, 223, 230, 263, 301, 333, 338, 356, 371], "cumprod": 0, "max": [0, 57, 58, 59, 60, 150, 151, 220, 281, 391], "mean": [0, 6, 44, 140, 171, 172, 230, 289, 384, 390], "min": [0, 57, 58, 59, 60, 150, 151, 281, 282], "std": [0, 4, 218, 222, 223, 250, 304, 338, 356, 371, 391], "sum": [0, 76, 229, 301], "var": 0, "argmax": [0, 389, 391], "prod": [0, 74, 264], "topk": 0, "cumsum": 0, "movement": [0, 392], "concat": [0, 64, 382], "nonzero": 0, "pad": [0, 6, 61, 67, 68, 69, 89, 115, 122, 123, 127, 172, 220, 249, 250, 259, 260, 261, 262, 288, 289, 300, 317, 351, 353, 356, 384, 387, 391], "permut": [0, 220, 362, 387, 390, 391], "reshap": [0, 6, 220, 362, 387, 389, 390, 391], "repeat": [0, 3, 286, 287, 388], "repeat_interleav": 0, "tiliz": [0, 32, 44, 140, 390], "tilize_with_val_pad": 0, "fill_rm": [0, 114], "fill_ones_rm": 0, "until": [0, 301, 355, 369], "untilize_with_unpad": 0, "indexed_fil": 0, "gather": 0, "sort": [0, 356], "normal": [0, 44, 140, 157, 172, 289, 298, 299, 300, 318, 319, 389, 391], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "softmax": [0, 10, 11, 12, 298, 299, 300, 319, 357, 358, 390], "scale_mask_softmax": 0, "softmax_in_plac": [0, 10, 12], "scale_mask_softmax_in_plac": [0, 298], "scale_causal_mask_hw_dims_softmax_in_plac": 0, "softmaxprogramconfig": [0, 298, 300, 319, 357, 358], "softmaxdefaultprogramconfig": [0, 298, 300, 319, 357, 358], "softmaxshardedmulticoreprogramconfig": [0, 298, 300, 319], "block_w": [0, 12, 298, 300, 319], "moreh": [0, 229], "moreh_sum": 0, "transform": [0, 3, 185, 251, 298, 378, 389, 390, 391], "split_query_key_value_and_split_head": [0, 390], "concatenate_head": [0, 390], "attention_softmax": 0, "attention_softmax_": [0, 390], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 3], "embed": [0, 90, 109], "convolut": [0, 3, 63, 67, 68, 69, 106, 220, 259, 260, 261, 262, 385], "conv1d": [0, 6], "conv2d": [0, 6, 7, 69, 259, 260, 261, 262, 387, 391], "conv3d": 0, "conv_transpose2d": [0, 6], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 67, 68, 69, 259, 260, 261, 262, 387, 391], "act_block_h_overrid": [0, 6, 391], "act_block_w_div": [0, 6, 391], "activ": [0, 6, 19, 93, 131, 132, 141, 151, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 296, 331, 337, 374, 378, 381, 385, 389, 391, 392], "core_grid": [0, 6, 74, 140, 185, 217, 378, 390, 391], "deallocate_activ": [0, 6, 220, 391], "enable_act_double_buff": [0, 6, 391], "enable_kernel_stride_fold": [0, 6, 391], "enable_split_read": [0, 6, 391], "enable_weights_double_buff": [0, 6, 391], "full_inner_dim": [0, 6], "in_plac": [0, 6, 220, 391], "output_layout": [0, 6, 140, 391], "override_sharding_config": [0, 6, 391], "reallocate_halo_output": [0, 6, 220, 391], "reshard_if_not_optim": [0, 6, 391], "shard_layout": [0, 6, 391], "transpose_shard": [0, 6, 391], "weights_dtyp": [0, 6, 259, 260, 387, 391], "conv2dsliceconfig": 0, "slicetypeenum": [0, 7], "sliceheight": [0, 7], "slicewidth": [0, 7], "name": [0, 4, 7, 32, 86, 186, 227, 228, 360, 378, 382, 383, 389, 391, 392, 393], "valu": [0, 6, 7, 21, 22, 23, 24, 25, 26, 30, 31, 44, 56, 57, 58, 59, 60, 63, 65, 75, 76, 80, 85, 88, 91, 92, 112, 114, 115, 122, 127, 128, 129, 130, 138, 144, 145, 150, 151, 152, 160, 161, 162, 163, 169, 170, 179, 183, 211, 218, 220, 222, 223, 233, 244, 245, 246, 248, 250, 253, 256, 257, 267, 281, 282, 288, 292, 293, 301, 302, 317, 320, 321, 322, 323, 326, 333, 335, 336, 338, 348, 349, 351, 362, 363, 364, 371, 376, 377, 379, 384, 386, 388, 389, 390, 391, 392, 393], "num_slic": [0, 7], "slice_typ": [0, 7], "pool": [0, 138, 220, 370, 385], "global_avg_pool2d": 0, "max_pool2d": [0, 391], "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 79, 266, 385, 389, 391], "model_preprocess": [0, 378, 390], "preprocess_model": 0, "preprocess_model_paramet": [0, 378], "report": [0, 68, 217, 379, 385, 389, 393], "set_printopt": [0, 393], "register_pre_operation_hook": [0, 393], "register_post_operation_hook": [0, 393], "tutori": [0, 380, 386, 387, 388, 389, 390, 391, 392], "import": [0, 4, 75, 76, 130, 220, 301, 326, 378, 379, 381, 383, 384, 385, 390, 393], "necessari": [0, 61, 379, 385, 391], "open": [0, 3, 216, 246, 385, 390, 392, 393], "tenstorr": [0, 2, 4, 6, 378, 379, 380, 381, 385, 392, 393], "perform": [0, 6, 12, 14, 16, 18, 20, 22, 24, 26, 28, 29, 34, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 64, 66, 71, 72, 73, 75, 76, 79, 80, 81, 83, 85, 88, 94, 97, 99, 101, 104, 105, 111, 113, 116, 118, 120, 121, 125, 130, 133, 134, 136, 138, 139, 142, 144, 145, 147, 149, 150, 151, 154, 156, 157, 158, 159, 175, 177, 179, 181, 183, 184, 189, 191, 193, 194, 196, 199, 200, 204, 209, 210, 211, 213, 216, 217, 219, 220, 224, 231, 232, 233, 236, 238, 242, 243, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 273, 276, 279, 280, 283, 284, 286, 291, 292, 293, 295, 297, 298, 299, 300, 302, 303, 305, 307, 309, 312, 314, 315, 316, 317, 321, 322, 323, 325, 328, 330, 332, 334, 336, 339, 340, 343, 344, 345, 346, 347, 348, 349, 356, 363, 364, 366, 373, 375, 378, 379, 381, 382, 385, 387, 388, 389, 390, 391], "addit": [0, 130, 172, 217, 300, 301, 319, 326, 378, 381, 385, 388, 391], "close": [0, 62, 216, 381, 385], "The": [0, 3, 4, 6, 7, 8, 9, 12, 27, 30, 31, 32, 55, 61, 62, 67, 68, 69, 77, 86, 87, 89, 90, 91, 92, 108, 112, 115, 127, 128, 129, 130, 138, 140, 152, 178, 185, 216, 217, 218, 220, 222, 223, 233, 244, 245, 246, 249, 259, 260, 261, 262, 263, 274, 275, 281, 282, 285, 298, 299, 300, 301, 318, 319, 326, 333, 338, 341, 352, 355, 356, 360, 361, 370, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 392, 393], "output": [0, 4, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 392, 393], "more": [0, 1, 3, 4, 6, 14, 24, 44, 45, 68, 83, 121, 136, 140, 154, 172, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 268, 272, 273, 284, 289, 319, 321, 328, 375, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392], "host": [0, 67, 68, 126, 248, 317, 341, 381, 383, 384, 385, 387], "tile": [0, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 389, 391, 392], "creat": [0, 4, 6, 30, 61, 74, 75, 76, 91, 92, 112, 128, 129, 130, 244, 245, 300, 326, 376, 377, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392], "nativ": [0, 3, 384, 385], "base": [0, 4, 6, 7, 10, 11, 12, 44, 63, 74, 130, 217, 249, 384, 385, 390], "arithmet": [0, 385], "simul": [0, 385, 387, 389, 390, 391, 392], "broadcast": [0, 19, 20, 21, 83, 93, 130, 132, 141, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 234, 235, 287, 298, 299, 300, 331, 334, 335, 337, 360, 374, 385, 387, 389, 391, 393], "row": [0, 6, 54, 106, 113, 115, 116, 118, 125, 140, 241, 291, 309, 366, 383, 384, 385, 392], "vector": [0, 4, 217, 255, 305, 385, 389], "expans": [0, 385], "mlp": [0, 385], "infer": [0, 44, 68, 379, 383, 385], "load": [0, 3, 186, 385, 392], "mnist": [0, 385], "test": [0, 4, 378, 379, 382, 383, 385, 388, 390, 392, 393], "pretrain": [0, 385, 391], "weight": [0, 6, 44, 67, 68, 69, 89, 90, 106, 140, 180, 185, 258, 259, 260, 261, 262, 378, 385, 387], "accuraci": [0, 379, 385, 391], "track": [0, 385, 391], "loop": [0, 385], "flatten": [0, 385, 387, 391], "head": [0, 357, 358, 359, 360, 362, 385], "attent": [0, 298, 299, 300, 357, 358, 360, 361, 362, 385], "write": [0, 1, 4, 74, 185, 217, 378, 384, 385], "initi": [0, 92, 227, 228, 378, 385, 386, 387, 388, 389, 392], "first": [0, 127, 134, 139, 185, 217, 241, 248, 276, 339, 378, 381, 383, 385, 389, 391, 392, 393], "iter": [0, 385, 389], "subsequ": [0, 385, 389, 393], "optim": [0, 6, 12, 298, 344, 346, 384, 385, 391, 392], "version": [0, 7, 140, 227, 228, 298, 361, 381, 383, 385, 387, 388, 389, 391, 392], "process": [0, 12, 63, 75, 76, 140, 259, 260, 298, 299, 300, 383, 385, 389, 391], "paramet": [0, 3, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 385, 391], "check": [0, 2, 4, 217, 379, 381, 385, 389, 391], "match": [0, 6, 61, 75, 76, 172, 217, 218, 222, 223, 227, 228, 288, 289, 333, 338, 371, 384, 385, 386, 388, 389], "origin": [0, 218, 222, 223, 227, 228, 249, 263, 326, 333, 338, 371, 379, 382, 385], "implement": [0, 6, 67, 217, 248, 301, 360, 361, 362, 378, 382, 383, 385, 392], "seed": [0, 107, 385], "reproduc": [0, 385], "forward": [0, 378, 385], "method": [0, 4, 271, 344, 346, 385], "input": [0, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 379, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393], "simpl": [0, 381, 385, 386, 387, 388, 389], "cnn": [0, 385, 387], "cifar": [0, 385], "dataset": [0, 384, 385, 389, 392], "defin": [0, 4, 32, 318, 382, 384, 385], "stage": [0, 385, 392], "sampl": [0, 385, 389], "profil": [0, 157, 304, 385, 393], "gener": [0, 6, 89, 107, 115, 217, 251, 298, 379, 383, 385, 387, 388, 389, 390, 391], "result": [0, 10, 12, 30, 32, 44, 115, 127, 129, 130, 157, 185, 217, 220, 245, 259, 260, 261, 262, 263, 267, 272, 318, 319, 344, 346, 377, 383, 384, 385, 386, 387, 388, 389, 391], "analysi": [0, 383, 385], "upload": [0, 383, 385], "tab": [0, 383, 385], "recap": [0, 385], "onboard": 0, "new": [0, 92, 129, 245, 285, 288, 377, 379, 381, 383], "pytorch": [0, 3, 67, 68, 69, 217, 259, 260, 261, 262, 326, 356, 360, 362, 387, 388, 389, 391, 393], "rewrit": 0, "switch": [0, 248, 320], "ad": [0, 67, 68, 69, 185, 259, 260, 261, 262, 382], "faq": 0, "need": [0, 1, 2, 7, 12, 185, 217, 379, 383, 384, 387, 390, 391, 392, 393], "bind": [0, 387, 388, 389, 390, 391], "golden": [0, 378, 392, 393], "perf": [0, 6, 379, 392], "header": 0, "profile_thi": 0, "descript": [0, 114, 115, 382], "uplift": 0, "bug": 0, "featur": [0, 3, 6, 298, 381, 382, 392, 393], "propos": [0, 382], "request": [0, 353, 382], "troubleshoot": [0, 379], "tip": 0, "commun": [0, 381], "develop": [0, 3, 6, 380, 381, 382, 383, 385, 386, 392], "index": [0, 130, 169, 170, 301, 326, 361, 383, 391], "modul": [0, 4, 69, 227, 228, 378, 389, 391, 392], "search": [0, 392], "page": [0, 381, 392], "If": [1, 2, 4, 6, 7, 31, 61, 67, 68, 69, 74, 75, 76, 130, 172, 185, 217, 218, 222, 223, 227, 228, 246, 248, 250, 263, 264, 289, 299, 317, 318, 326, 333, 338, 341, 355, 356, 361, 362, 371, 380, 381, 382, 383, 384, 391, 392, 393], "would": [1, 319, 382, 383, 384, 391], "like": [1, 116, 301, 320, 378, 383, 384, 386, 387, 391, 392, 393], "thi": [1, 4, 6, 7, 8, 9, 10, 11, 12, 31, 44, 61, 63, 67, 68, 69, 90, 108, 109, 112, 122, 123, 138, 157, 175, 220, 249, 259, 260, 261, 262, 263, 281, 282, 298, 299, 300, 301, 319, 320, 326, 360, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "project": [1, 2, 3, 380, 392], "pleas": [1, 2, 217, 379, 380, 382, 393], "review": [1, 380, 382, 386, 388], "standard": [1, 2, 10, 282, 319, 379, 380, 381, 391], "gain": 1, "access": [1, 2, 3, 381], "read": [1, 74, 380, 384], "section": [1, 2, 379, 384, 385, 392], "detail": [1, 4, 14, 24, 44, 45, 83, 121, 136, 140, 154, 172, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 268, 273, 284, 289, 321, 328, 375, 380, 391, 392, 393], "contact": 1, "u": [1, 382, 389], "have": [2, 4, 75, 76, 77, 90, 123, 130, 172, 180, 217, 259, 260, 263, 267, 298, 301, 350, 351, 356, 368, 369, 379, 381, 383, 384, 391, 392], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 6, 217, 320, 379, 382, 383, 387], "file": [2, 4, 32, 86, 186, 379, 381, 383, 386, 387, 388, 389, 391, 392, 393], "github": [2, 379, 380, 381, 392], "can": [2, 3, 4, 6, 7, 12, 30, 45, 57, 58, 59, 60, 67, 68, 69, 82, 83, 92, 129, 136, 140, 217, 245, 248, 259, 260, 261, 262, 267, 268, 274, 275, 320, 341, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "out": [2, 4, 6, 75, 76, 107, 130, 282, 317, 326, 356, 386, 387, 390, 391], "relev": [2, 379], "ever": 2, "help": [2, 382, 385, 392], "we": [2, 6, 123, 127, 217, 298, 355, 379, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393], "offici": [2, 392], "discord": 2, "channel": [2, 6, 44, 67, 68, 69, 114, 115, 138, 220, 259, 260, 261, 262, 370, 383, 387, 391], "repres": [2, 3, 383, 384, 391], "both": [2, 6, 20, 67, 68, 69, 75, 76, 217, 220, 256, 259, 260, 261, 262, 319, 378, 379, 383, 384, 390, 392], "metal": [2, 3, 380, 381, 385, 387, 388, 389, 390, 391, 392], "join": 2, "discuss": [2, 379], "board": 2, "member": [2, 7], "bounc": 2, "idea": [2, 379], "off": [2, 281, 290, 378, 384], "each": [2, 7, 44, 63, 115, 130, 138, 220, 248, 285, 287, 317, 381, 383, 384, 385, 389, 391, 392], "other": [2, 4, 6, 130, 217, 378, 379, 380, 384, 387, 388, 391, 392, 393], "refer": [2, 3, 14, 24, 45, 68, 77, 83, 92, 112, 121, 136, 154, 189, 191, 193, 194, 196, 199, 200, 210, 211, 217, 233, 257, 264, 268, 273, 284, 321, 328, 375, 381, 382, 384, 391, 392, 393], "code": [2, 4, 274, 275, 326, 356, 362, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393], "conduct": 2, "when": [2, 4, 6, 7, 8, 9, 44, 63, 67, 68, 69, 74, 83, 109, 140, 154, 201, 216, 217, 220, 221, 227, 250, 256, 263, 268, 344, 346, 353, 379, 382, 384, 390, 393], "interact": [2, 392], "neural": [3, 387, 389, 391, 392], "network": [3, 389, 391, 392], "built": [3, 271, 381, 391], "design": [3, 12, 298, 385, 386, 392], "feel": [3, 392], "familiar": 3, "experienc": 3, "kei": [3, 362, 378, 384, 390, 391], "includ": [3, 4, 44, 61, 379, 384, 388, 389, 391, 392], "than": [3, 6, 7, 63, 80, 114, 115, 132, 133, 141, 142, 176, 177, 183, 212, 213, 233, 263, 298, 319, 383, 390, 393], "200": 3, "fuse": [3, 6, 299, 300, 378, 390], "A": [3, 4, 6, 30, 128, 129, 130, 217, 218, 222, 223, 244, 245, 320, 333, 338, 361, 371, 376, 377, 379, 381, 382, 384, 392], "differ": [3, 6, 11, 69, 217, 305, 331, 344, 346, 381, 384, 388, 389, 391, 393], "wai": [3, 227, 228, 378, 381, 385], "distribut": [3, 74, 172, 185, 217, 384, 392], "abil": [3, 392], "custom": [3, 4, 274, 275, 381, 387, 389, 390, 391, 392], "mesh": [3, 127, 355, 381, 387, 388, 389, 390, 391], "tool": [3, 381, 383, 392], "comput": [3, 4, 12, 21, 23, 25, 39, 44, 61, 67, 68, 69, 75, 76, 82, 84, 106, 119, 130, 131, 138, 140, 153, 163, 172, 173, 174, 180, 185, 197, 198, 201, 202, 205, 206, 207, 208, 215, 217, 218, 221, 222, 223, 225, 239, 247, 255, 259, 260, 261, 262, 263, 289, 298, 299, 300, 318, 319, 331, 333, 335, 338, 357, 358, 361, 362, 371, 372, 374, 383, 388, 389, 391, 392], "util": [3, 384, 389, 391, 392], "significantli": [3, 6, 12, 390], "speed": 3, "comparison": [3, 163, 382], "mode": [3, 37, 44, 45, 83, 96, 98, 102, 135, 136, 171, 187, 188, 190, 192, 220, 230, 268, 294, 305, 344, 346, 387, 388, 389, 390, 391, 392], "long": [3, 382], "sequenc": [3, 4, 299, 300, 360, 361], "against": [3, 130, 379, 392, 393], "known": [3, 69], "document": [4, 379, 381, 382, 392], "meant": 4, "contributor": 4, "Not": [4, 236, 378, 393], "mai": [4, 6, 77, 83, 154, 175, 217, 268, 272, 300, 319, 344, 346, 352, 378, 384, 387, 388, 389, 390, 391, 393], "grayskul": [4, 32, 378, 393], "wormhol": [4, 32, 378, 381, 393], "take": [4, 6, 359, 379, 380, 384, 387, 390, 391], "one": [4, 57, 58, 59, 60, 130, 263, 380, 384, 385, 388], "produc": [4, 172, 272, 344, 346, 379, 389], "call": [4, 6, 127, 274, 275, 355, 382, 383, 384, 390, 392, 393], "optiona": 4, "b": [4, 109, 287, 360, 361, 381, 387, 391], "composit": 4, "struct": 4, "specifi": [4, 6, 30, 61, 75, 76, 86, 91, 92, 128, 129, 130, 185, 217, 218, 222, 223, 227, 228, 244, 245, 248, 249, 250, 263, 285, 301, 318, 326, 333, 338, 341, 351, 360, 361, 371, 376, 377, 378, 381, 383, 384, 390], "how": [4, 7, 379, 383, 384, 386, 388, 389, 390, 391, 392, 393], "simpli": [4, 353, 392], "ttnn": [4, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393], "register_oper": 4, "exist": [4, 246, 381, 383, 389, 391], "bind_registered_oper": 4, "auto": 4, "attach": [4, 227, 228], "attach_golden_funct": 4, "let": [4, 384, 386, 387, 388, 389, 390, 391], "": [4, 6, 12, 61, 67, 68, 69, 140, 172, 218, 222, 223, 227, 228, 289, 299, 301, 333, 338, 360, 361, 371, 379, 381, 384, 386, 388, 389, 390, 391, 392], "just": [4, 259, 260, 261, 262, 390, 391], "copi": [4, 61, 126, 157, 352, 392], "In": [4, 107, 217, 288, 353, 358, 378, 383, 384, 387, 389, 391, 392], "order": [4, 74, 217, 254, 297, 326, 356, 383, 384, 390, 392, 393], "follow": [4, 6, 31, 69, 115, 217, 218, 222, 223, 263, 288, 298, 299, 300, 326, 333, 338, 356, 371, 378, 380, 381, 382, 383, 384, 385, 389, 391, 392, 393], "directori": [4, 381, 385, 392], "structur": [4, 6, 7, 378, 389, 392], "shown": [4, 384, 386, 387, 388, 389, 390, 391], "below": [4, 217, 379, 383, 384, 386, 387, 388, 389, 390, 391], "cpp": [4, 387, 388, 389, 390, 391, 392], "categori": [4, 392], "operation_nam": 4, "_device_oper": 4, "hpp": 4, "program_factory_0": 4, "_program_factori": 4, "mani": [4, 378], "factori": 4, "But": 4, "concret": [4, 217], "found": [4, 378, 389, 391, 392], "example_device_oper": 4, "spdx": [4, 393], "filecopyrighttext": [4, 393], "2023": 4, "inc": [4, 393], "licens": [4, 393], "identifi": [4, 392, 393], "apach": [4, 393], "0": [4, 6, 7, 9, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 75, 76, 77, 78, 80, 82, 83, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110, 112, 113, 114, 115, 117, 122, 124, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 144, 145, 146, 148, 152, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 179, 180, 182, 183, 186, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 209, 211, 212, 214, 216, 218, 220, 221, 222, 223, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 244, 245, 246, 248, 250, 251, 255, 256, 257, 263, 264, 265, 267, 268, 269, 271, 272, 277, 278, 281, 282, 287, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 308, 310, 311, 312, 313, 317, 320, 322, 323, 324, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393], "pragma": 4, "onc": [4, 259, 260, 261, 262, 389, 392], "variant": [4, 140], "device_oper": 4, "decor": [4, 382], "namespac": 4, "exampledeviceoper": 4, "attribut": [4, 378, 383, 384], "store": [4, 6, 44, 130, 383, 384, 390], "variabl": [4, 381, 392, 393], "aren": [4, 8], "t": [4, 8, 157, 217, 227, 228, 383, 384, 390], "operation_attributes_t": 4, "bool": [4, 20, 22, 31, 37, 44, 64, 67, 68, 69, 74, 75, 76, 77, 82, 83, 96, 98, 102, 130, 135, 140, 163, 171, 185, 187, 188, 190, 192, 217, 218, 220, 222, 223, 227, 228, 230, 231, 248, 261, 262, 263, 294, 297, 298, 299, 300, 305, 318, 319, 326, 333, 334, 336, 338, 350, 351, 356, 357, 358, 360, 361, 362, 368, 369, 371, 373, 391], "int": [4, 12, 13, 15, 17, 19, 20, 21, 22, 27, 30, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 67, 68, 69, 70, 74, 75, 76, 78, 82, 83, 87, 89, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 143, 146, 148, 152, 155, 157, 160, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 182, 185, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 216, 217, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 246, 248, 249, 250, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 272, 276, 277, 278, 281, 282, 286, 290, 294, 296, 297, 305, 306, 308, 310, 311, 312, 313, 317, 318, 320, 324, 326, 327, 328, 329, 331, 334, 335, 336, 337, 339, 341, 342, 344, 345, 346, 350, 351, 355, 356, 357, 358, 360, 361, 362, 365, 367, 368, 369, 370, 372, 373, 374, 377, 384, 387, 391], "some_other_attribut": 4, "argument": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 384], "pass": [4, 6, 67, 68, 108, 109, 115, 274, 275, 362, 378, 382, 384, 387, 389, 391], "don": [4, 217], "thei": [4, 7, 217, 379, 384, 390], "tensor_args_t": 4, "const": [4, 304], "input_tensor": [4, 13, 14, 15, 16, 17, 18, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 122, 124, 125, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 177, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 209, 210, 211, 213, 214, 220, 226, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 387, 391, 393], "howev": [4, 248], "show": [4, 217, 384, 390, 392], "els": [4, 82, 389, 391], "done": [4, 6, 379, 381, 383], "io_tensor": 4, "optional_output_tensor": [4, 185, 217], "vector_of_tensor": 4, "tupl": [4, 67, 68, 69, 74, 220, 248, 259, 260, 261, 262, 326, 356, 362, 387, 391], "tuple_of_tensor": 4, "vector_of_optional_tensor": 4, "some_crazy_tuple_of_tensor": 4, "return": [4, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 387, 388, 390, 391], "spec": [4, 74, 127, 172], "singl": [4, 218, 222, 223, 333, 338, 361, 371, 378, 379, 382, 383, 384], "tensorspec": [4, 127], "spec_return_value_t": 4, "tensor_return_value_t": 4, "note": [4, 6, 66, 130, 159, 217, 218, 222, 223, 244, 245, 270, 288, 333, 338, 371, 381, 383, 384, 390, 392, 393], "should": [4, 6, 69, 134, 139, 157, 163, 180, 217, 220, 241, 248, 256, 267, 276, 298, 339, 379, 382, 383, 386, 390, 391, 392], "same": [4, 6, 19, 21, 23, 25, 39, 46, 47, 49, 50, 51, 67, 68, 69, 75, 76, 82, 84, 90, 92, 93, 94, 112, 114, 119, 129, 130, 131, 132, 133, 141, 142, 153, 157, 163, 173, 174, 176, 177, 180, 185, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 221, 225, 227, 228, 234, 235, 236, 239, 241, 245, 247, 255, 256, 259, 260, 261, 262, 263, 296, 298, 300, 301, 319, 331, 335, 337, 353, 356, 360, 372, 374, 377, 381, 383, 384, 388, 389, 390, 392], "pattern": [4, 63, 227, 298, 382, 389, 391], "e": [4, 31, 172, 217, 218, 222, 223, 263, 318, 319, 333, 338, 371, 381, 383, 384, 389, 391, 392, 393], "singlecor": 4, "share": [4, 384], "between": [4, 30, 44, 67, 68, 69, 217, 259, 260, 261, 262, 354, 391, 392], "override_runtime_argu": 4, "shared_variables_t": 4, "tt_metal": [4, 341, 370, 381, 383, 392], "kernelhandl": 4, "unary_reader_kernel_id": 4, "unary_writer_kernel_id": 4, "cached_program_t": 4, "cachedprogram": 4, "static": 4, "operation_attribut": 4, "tensor_arg": 4, "tensor_return_valu": 4, "void": 4, "cached_program": 4, "multicor": [4, 248, 350, 351, 356, 368, 369], "size_t": 4, "num_cor": [4, 6], "num_cores_i": 4, "program_factory_t": 4, "mandatori": 4, "select": [4, 6, 10, 44, 382, 389], "arg": [4, 115, 140, 218, 222, 223, 250, 259, 260, 261, 262, 274, 275, 333, 338, 341, 371, 391, 393], "select_program_factori": 4, "valid": [4, 6, 114, 115, 217, 227, 228, 356, 378, 379, 383, 384], "usual": 4, "validate_on_program_cache_miss": 4, "reus": [4, 259, 260, 261, 262, 300, 392], "less": [4, 6, 176, 177, 212, 213, 263, 383, 393], "validate_on_program_cache_hit": 4, "compute_output_spec": 4, "create_output_tensor": 4, "map": [4, 32], "abl": 4, "prim": 4, "after": [4, 6, 12, 106, 220, 248, 274, 382, 383, 384, 387, 389, 391, 392, 393], "op": [4, 6, 7, 8, 31, 67, 68, 69, 74, 90, 140, 220, 341, 360, 361, 367, 382, 383, 387, 392, 393], "keep": [4, 31, 218, 222, 223, 263, 333, 338, 371, 378, 384], "mind": [4, 390], "overload": [4, 341], "queue_id": [4, 13, 15, 17, 19, 20, 21, 22, 27, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 69, 70, 78, 82, 83, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 124, 128, 129, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 305, 306, 308, 310, 311, 312, 313, 317, 320, 324, 327, 328, 329, 331, 334, 335, 336, 337, 342, 344, 345, 346, 350, 351, 356, 360, 361, 365, 367, 368, 369, 372, 373, 374, 377], "automat": [4, 10, 216, 353, 379, 381, 383, 384], "primit": 4, "so": [4, 6, 115, 378], "also": [4, 6, 67, 68, 69, 75, 76, 233, 298, 379, 383, 384, 385, 392], "invok": 4, "case": [4, 10, 82, 127, 163, 217, 239, 258, 298, 353, 378, 379, 384, 391, 392, 393], "hash": [4, 227, 228, 383], "stl": 4, "hash_t": 4, "compute_program_hash": 4, "create_op_performance_model": 4, "opperformancemodel": 4, "make": [4, 227, 228, 319, 320, 356, 362, 378, 384, 392, 393], "avail": [4, 6, 370, 385, 392, 393], "constexpr": 4, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 4, "true": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 384, 389, 391, 392, 393], "logical_shap": 4, "tensorlayout": 4, "dtype": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 384, 386, 387, 388, 389, 390, 391, 393], "pageconfig": 4, "memoryconfig": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "output_spec": 4, "create_device_tensor": 4, "42": [4, 389], "single_core_program_factori": 4, "work_split": 4, "tensor_accessor_arg": 4, "output_tensor": [4, 13, 15, 17, 19, 21, 27, 31, 33, 35, 38, 42, 46, 47, 48, 49, 50, 51, 53, 55, 63, 70, 75, 78, 82, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 107, 110, 112, 113, 117, 123, 124, 128, 129, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 234, 235, 237, 238, 240, 245, 256, 257, 265, 267, 272, 277, 278, 281, 282, 290, 294, 295, 296, 305, 306, 308, 310, 311, 312, 313, 319, 320, 324, 327, 328, 329, 331, 335, 337, 342, 344, 345, 346, 356, 365, 367, 372, 373, 374, 377, 393], "src_buffer": 4, "dst_buffer": 4, "dataformat": 4, "cb_data_format": 4, "datatype_to_dataformat_convert": 4, "uint32_t": [4, 107], "single_tile_s": 4, "tiles": 4, "cb_data_format_output": 4, "single_tile_size_output": 4, "num_til": 4, "physical_volum": 4, "constant": [4, 44, 140, 172, 384], "tile_hw": 4, "corecoord": [4, 12, 298, 300], "compute_with_storage_grid_s": [4, 12, 298, 299, 300, 319], "y": [4, 39, 251, 298, 299, 300, 383, 384, 390], "all_cor": 4, "core_group_1": 4, "core_group_2": 4, "num_tiles_per_core_group_1": 4, "num_tiles_per_core_group_2": 4, "split_work_to_cor": 4, "src0_cb_index": 4, "cbindex": 4, "c_0": 4, "num_input_til": 4, "circularbufferconfig": 4, "cb_src0_config": 4, "set_page_s": 4, "createcircularbuff": 4, "output_cb_index": 4, "c_2": 4, "num_output_til": 4, "cb_output_config": 4, "reader_compile_time_arg": 4, "tensoraccessorarg": 4, "append_to": 4, "writer_compile_time_arg": 4, "createkernel": 4, "eltwis": [4, 120, 258, 283, 386], "kernel": [4, 6, 44, 61, 67, 68, 69, 106, 108, 140, 185, 217, 218, 220, 222, 223, 259, 260, 261, 262, 298, 299, 300, 318, 319, 333, 338, 371, 381, 383, 387, 391, 392], "dataflow": 4, "reader_unary_interleaved_start_id": 4, "readerdatamovementconfig": 4, "writer_unary_interleaved_start_id": 4, "writerdatamovementconfig": 4, "compute_kernel_args_group_1": 4, "per_core_block_cnt": 4, "per_core_block_s": 4, "math_approx_mod": 4, "fals": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 389, 391, 392, 393], "eltwise_sfpu": 4, "computeconfig": 4, "math_fidel": 4, "mathfidel": 4, "hifi4": [4, 383], "compile_arg": 4, "rang": [4, 19, 30, 46, 47, 48, 49, 50, 51, 72, 114, 115, 131, 156, 173, 175, 190, 203, 221, 226, 232, 234, 253, 290, 292, 315, 337, 342, 343, 356, 384], "compute_kernel_args_group_2": 4, "num_tiles_written": 4, "num_tiles_per_cor": 4, "contain": [4, 6, 30, 31, 75, 76, 89, 130, 220, 272, 301, 381, 384, 388, 391, 392], "tt_assert": 4, "setruntimearg": 4, "address": [4, 392], "move": [4, 6, 122, 123, 379, 387, 390, 391], "shared_vari": 4, "runtime_arg": 4, "getruntimearg": 4, "multi_core_program_factori": 4, "idevic": [4, 259, 260, 341], "written": [4, 169, 170, 185, 217, 390], "compositeexampleoper": 4, "composite_exampl": 4, "another_copi": 4, "_pybind": 4, "example_pybind": 4, "pybind": 4, "pybind_fwd": 4, "py": [4, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "pybind11": 4, "bind_example_oper": 4, "r": [4, 251, 381, 392], "doc": [4, 392], "expos": 4, "logic": [4, 201, 202, 205, 206, 208, 217, 227, 228], "self": [4, 378, 384], "correct": [4, 218, 222, 223, 333, 338, 371, 389, 391], "specif": [4, 6, 12, 31, 217, 246, 298, 326, 361, 379, 384, 385, 391, 392], "pybind_overload_t": 4, "decltyp": 4, "examples_pybind": 4, "py_modul": 4, "final": [4, 217, 378, 379, 382, 389, 391, 392], "wherev": 4, "want": [4, 381, 393], "compar": [4, 93, 132, 141, 176, 212, 217, 235, 389, 391], "its": [4, 61, 69, 92, 221, 248, 317, 378, 379, 382, 383, 384, 389, 391, 393], "equival": [4, 326, 356, 362, 384, 385], "signatur": 4, "And": [4, 378, 384], "ignor": 4, "kwarg": [4, 259, 260, 261, 262, 274, 275, 341, 393], "def": [4, 378, 387, 388, 390, 391, 393], "golden_funct": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "befor": [4, 6, 32, 75, 76, 248, 259, 260, 261, 262, 275, 299, 320, 379, 384], "some": [4, 341, 381, 388, 393], "preprocess": [4, 6, 32, 67, 68, 69, 227, 228, 259, 260, 261, 262, 384, 391], "postprocess": 4, "pack": [4, 368, 369], "preprocess_golden_function_input": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "ttnn_input_tensor": 4, "postprocess_golden_function_output": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "torch_output_tensor": [4, 393], "becaus": [4, 384, 390], "wa": [4, 379, 383, 384], "class": [6, 7, 10, 11, 12, 378, 379, 383, 384, 389], "pybind11_object": [6, 7, 10, 11, 12, 384], "flag": [6, 381], "properti": [6, 7, 12, 384], "control": [6, 12, 381], "size": [6, 7, 12, 30, 67, 68, 69, 75, 76, 89, 90, 130, 217, 218, 220, 222, 223, 246, 258, 259, 260, 261, 262, 263, 300, 317, 333, 338, 360, 361, 362, 370, 371, 384, 386, 391, 393], "block": [6, 12, 67, 68, 69, 74, 216, 217, 220, 259, 260, 261, 262, 272, 300, 384], "height": [6, 7, 12, 61, 63, 67, 68, 69, 74, 114, 115, 128, 138, 172, 217, 220, 244, 259, 260, 261, 262, 289, 298, 353, 376, 383, 384, 387, 391], "chunk": [6, 360, 361], "l1": [6, 7, 74, 185, 217, 246, 298, 300, 319, 352, 354, 384, 387, 390, 391, 392], "divid": [6, 7, 83, 357, 358, 392], "among": 6, "further": 6, "subdivid": 6, "within": [6, 30, 47, 50, 220, 379, 384, 392], "possibl": [6, 217, 355, 378], "which": [6, 47, 50, 74, 75, 76, 128, 129, 130, 185, 217, 220, 227, 228, 244, 245, 267, 317, 318, 326, 360, 361, 376, 377, 378, 383, 384, 386, 387, 388, 389, 391, 392], "equal": [6, 93, 94, 132, 133, 163, 172, 176, 177, 235, 236, 299, 300, 326, 393], "output_matrix_height_per_cor": 6, "lead": 6, "larg": [6, 7, 300, 320, 378, 384, 388], "temporari": 6, "circular": [6, 319, 392], "oom": 6, "must": [6, 12, 27, 44, 67, 68, 75, 76, 90, 106, 130, 172, 233, 257, 259, 260, 263, 267, 288, 289, 298, 299, 300, 301, 317, 326, 350, 351, 352, 356, 368, 369, 381, 384, 392], "32": [6, 12, 31, 61, 63, 64, 77, 106, 115, 126, 128, 134, 138, 139, 172, 185, 217, 241, 242, 243, 244, 247, 248, 250, 258, 264, 271, 276, 286, 287, 289, 300, 317, 318, 319, 339, 352, 353, 354, 356, 367, 376, 384, 386, 387, 388, 389, 391, 393], "evenli": [6, 30], "reduc": [6, 7, 31, 140, 218, 222, 223, 263, 301, 333, 338, 356, 371], "width": [6, 7, 12, 61, 67, 68, 69, 74, 114, 115, 128, 138, 172, 217, 220, 244, 259, 260, 261, 262, 298, 299, 300, 353, 356, 359, 376, 383, 387, 391], "prevent": [6, 381], "greater": [6, 63, 80, 114, 115, 132, 133, 141, 142, 183, 233, 393], "n150": 6, "thats": 6, "64": [6, 31, 63, 74, 77, 126, 134, 139, 172, 185, 217, 250, 271, 276, 289, 317, 318, 339, 352, 353, 354, 356, 384, 389, 390, 391, 393], "2048": [6, 391, 393], "divisor": [6, 131, 268], "halv": 6, "appli": [6, 7, 13, 15, 17, 19, 27, 33, 35, 38, 44, 48, 53, 55, 61, 67, 68, 69, 70, 75, 76, 78, 87, 93, 95, 96, 98, 100, 102, 103, 106, 107, 108, 109, 110, 112, 117, 124, 131, 132, 134, 135, 137, 138, 139, 141, 143, 146, 148, 152, 155, 164, 165, 166, 167, 168, 173, 174, 176, 178, 182, 185, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 217, 218, 220, 221, 222, 223, 225, 226, 234, 235, 237, 240, 248, 259, 260, 261, 262, 265, 272, 276, 277, 278, 281, 282, 290, 294, 296, 298, 299, 300, 305, 306, 308, 310, 311, 313, 318, 319, 320, 324, 327, 329, 331, 333, 337, 338, 339, 342, 344, 346, 365, 367, 371, 374, 379, 389, 391], "sigmoid_approx": 6, "grid": [6, 12, 185, 217, 360, 361, 368, 378, 384, 391], "boolean": [6, 161, 162, 344, 346, 356], "indic": [6, 31, 89, 90, 130, 220, 241, 301, 317, 326, 356, 369, 392], "whether": [6, 31, 75, 76, 77, 185, 217, 218, 220, 222, 223, 227, 228, 261, 262, 298, 299, 300, 318, 319, 333, 338, 350, 351, 356, 361, 362, 368, 369, 371, 391], "conv": [6, 67, 68, 69, 387, 391], "halo": [6, 7, 220], "micro": 6, "anoth": [6, 381, 384], "doubl": 6, "allow": [6, 217, 379, 382, 388, 389], "stall": 6, "reader": [6, 227], "improv": [6, 320, 379, 392], "increas": [6, 392], "usag": [6, 379, 381, 392], "fold": 6, "stride": [6, 67, 68, 69, 220, 259, 260, 261, 262, 387, 391], "dimens": [6, 7, 12, 27, 31, 61, 63, 64, 75, 76, 128, 130, 134, 138, 139, 160, 217, 218, 222, 223, 244, 248, 250, 258, 263, 264, 276, 285, 287, 288, 298, 299, 300, 301, 317, 318, 319, 326, 333, 338, 339, 353, 355, 356, 359, 360, 361, 362, 371, 376, 384, 387, 388, 389], "under": [6, 379, 382, 383, 392, 393], "without": [6, 92], "notic": 6, "caution": 6, "product": [6, 75, 217, 263, 360, 361], "22378": 6, "nhwc": [6, 387, 391], "format": [6, 7, 32, 39, 67, 68, 69, 106, 122, 123, 127, 130, 220, 259, 260, 261, 262, 272, 298, 326, 382, 384, 387, 389, 391], "n": [6, 7, 44, 63, 67, 68, 69, 75, 76, 106, 114, 115, 218, 220, 222, 223, 241, 254, 255, 333, 338, 356, 370, 371, 381, 383, 388, 391], "h": [6, 7, 44, 67, 68, 69, 106, 114, 115, 220, 289, 356, 370, 384, 387, 391], "w": [6, 7, 44, 67, 68, 69, 106, 114, 115, 220, 289, 356, 370, 383, 387, 391], "ic": 6, "oc": 6, "pad_h": [6, 220], "pad_w": [6, 220], "implicit": 6, "via": [6, 381, 389, 391, 392], "current": [6, 31, 61, 63, 74, 130, 140, 227, 228, 261, 262, 301, 352, 361, 384, 393], "condit": [6, 288, 379], "met": [6, 288], "dram": [6, 7, 352, 354, 384, 392], "divis": [6, 7, 12, 119, 134, 139, 267, 276, 339, 384], "writer": 6, "carri": [6, 282], "bottleneck": [6, 392], "By": [6, 320, 382, 384], "default": [6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 383, 384, 391, 393], "inner": 6, "dim": [6, 31, 63, 64, 74, 75, 76, 130, 134, 139, 160, 172, 218, 222, 223, 250, 263, 264, 276, 287, 289, 301, 317, 318, 326, 333, 338, 339, 356, 362, 371, 384, 389, 390, 391], "kernel_h": [6, 220], "constraint": [6, 172, 217, 298, 300, 384], "space": [6, 30, 67, 68, 69, 259, 260, 261, 262, 384], "re": [6, 378, 380, 392], "overwrit": 6, "ani": [6, 114, 115, 248, 379, 384, 392], "either": [6, 7, 74, 217, 353, 381, 384, 392], "row_major": [6, 30, 31, 74, 91, 92, 127, 128, 129, 172, 218, 222, 223, 242, 243, 244, 263, 289, 298, 299, 300, 333, 338, 350, 351, 368, 369, 371, 376, 377, 383, 384], "expect": [6, 69, 106, 115, 220, 362, 379, 382, 387, 389, 392], "next": [6, 239, 381, 384, 391], "fragment": 6, "ideal": [6, 220, 384], "face": [6, 384], "determin": [6, 7, 69, 217, 227, 228, 384, 391], "reshard": 6, "alreadi": [6, 69, 227, 228, 246, 391], "anywai": 6, "previou": [6, 90, 389, 392], "due": [6, 272, 383, 384], "v": [6, 115, 361, 391, 392], "dilat": [6, 67, 68, 69, 220, 259, 260, 261, 262, 391], "tensormemorylayout": [6, 220, 298, 300], "own": [6, 384], "heurist": 6, "height_shard": [6, 298, 300], "block_shard": [6, 220], "width_shard": 6, "orient": [6, 74, 298, 384], "major": [6, 54, 106, 113, 115, 116, 118, 125, 140, 241, 291, 309, 366, 384, 392], "column": [6, 383, 384, 388], "bia": [6, 44, 45, 67, 68, 69, 106, 140, 185, 259, 260, 261, 262, 378, 387, 389, 390, 391], "respons": [6, 391], "prepar": [6, 379, 387, 391], "bfloat16": [6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 387, 388, 389, 390, 391, 393], "unspecifi": 6, "float32": [6, 17, 27, 30, 31, 35, 42, 44, 55, 75, 76, 78, 91, 92, 93, 112, 120, 124, 131, 132, 141, 144, 146, 148, 150, 157, 172, 173, 176, 187, 188, 190, 192, 212, 218, 221, 222, 223, 225, 235, 256, 265, 289, 290, 298, 299, 300, 301, 310, 318, 319, 322, 324, 333, 338, 344, 346, 365, 371, 376, 377, 378, 383, 384, 386, 388, 389, 393], "place": [7, 44, 94, 133, 142, 169, 170, 177, 213, 220, 236, 290, 298, 300, 319, 352, 358, 384], "too": [7, 393], "fit": [7, 287], "conv2d_dram": 7, "happen": 7, "number": [7, 19, 20, 23, 25, 45, 63, 67, 68, 69, 82, 83, 84, 93, 94, 114, 115, 119, 120, 121, 130, 132, 133, 140, 141, 142, 174, 176, 177, 181, 197, 198, 201, 205, 207, 212, 213, 215, 217, 218, 220, 221, 222, 223, 225, 231, 234, 235, 236, 241, 248, 250, 257, 258, 259, 260, 261, 262, 283, 284, 285, 287, 288, 296, 301, 331, 333, 334, 337, 338, 351, 356, 357, 358, 371, 372, 374, 382, 383, 384, 387, 389, 390, 391, 392], "along": [7, 75, 76, 130, 218, 222, 223, 264, 299, 300, 301, 317, 318, 319, 326, 333, 338, 356, 359, 371, 384, 391], "correspond": [7, 89, 90, 361, 392], "calcul": [7, 74, 383], "last": [7, 27, 31, 61, 128, 134, 139, 172, 244, 276, 288, 289, 299, 300, 318, 319, 326, 339, 353, 356, 362, 376, 383, 384], "smaller": [7, 384, 388], "rest": [7, 115], "prefer": [7, 381, 386, 392], "much": [7, 383], "larger": [7, 388], "_ttnn": [8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 384], "multi_devic": [8, 9, 122, 123, 246, 341], "meshdevic": [8, 9, 32, 62, 67, 68, 69, 91, 92, 122, 123, 127, 128, 129, 186, 216, 244, 245, 246, 341, 352, 355, 376, 377, 391], "plan": [8, 9, 122, 123, 249, 392], "deprec": [8, 9, 122, 123, 249], "futur": [8, 9, 122, 123, 249], "arg0": [9, 384], "none": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "tt": [9, 341, 350, 351, 368, 369, 370, 380, 385, 386, 389, 391], "device_id": [9, 62, 77, 89, 90, 126, 216, 246, 271, 301, 341, 352, 353, 354, 386, 387, 388, 389, 390, 391, 393], "provid": [10, 11, 12, 31, 44, 112, 130, 172, 185, 217, 218, 222, 223, 227, 228, 263, 264, 289, 298, 299, 300, 318, 333, 338, 341, 351, 356, 371, 379, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393], "behavior": [10, 384], "suitabl": [10, 259, 260, 261, 262], "most": [10, 217, 384, 388, 390, 391], "appropri": [10, 217, 379, 381, 391], "characterist": [10, 272, 392], "program_config": [10, 12, 172, 185, 217, 289, 298, 300, 319, 357, 358, 360, 361], "common": [11, 131, 173, 379, 391], "interfac": [11, 389, 391], "customiz": 12, "fine": [12, 382], "grain": 12, "over": [12, 44, 67, 68, 69, 106, 138, 140, 172, 218, 222, 223, 264, 289, 318, 333, 338, 360, 361, 371, 381, 392], "capabl": 12, "subblock_w": [12, 298, 300, 319], "sub": [12, 341, 368, 384], "block_h": [12, 298, 300, 319], "vertic": 12, "granular": 12, "horizont": 12, "modifi": [12, 300, 304, 319, 320], "compat": [12, 391], "proper": [12, 381], "impact": [12, 379], "compute_grid": [12, 319], "24": [12, 298, 300, 391], "sharded_tensor": 12, "python_fully_qualified_nam": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "abs_t": 13, "object": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382], "default_preprocess_golden_function_input": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "_golden_funct": [13, 16, 19, 24, 26, 28, 29, 30, 35, 38, 52, 53, 61, 63, 65, 66, 68, 70, 72, 78, 80, 83, 89, 91, 92, 93, 95, 96, 98, 100, 102, 103, 109, 110, 113, 117, 126, 127, 129, 132, 135, 137, 140, 141, 143, 146, 148, 151, 155, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 172, 174, 176, 181, 182, 183, 185, 187, 188, 190, 192, 195, 197, 198, 202, 203, 206, 208, 212, 214, 217, 219, 226, 231, 232, 234, 235, 237, 240, 244, 245, 248, 250, 251, 252, 254, 257, 265, 269, 270, 271, 272, 277, 278, 285, 286, 287, 288, 289, 294, 298, 299, 300, 305, 306, 308, 310, 311, 313, 315, 318, 319, 320, 321, 324, 327, 329, 337, 340, 342, 344, 352, 353, 354, 355, 357, 358, 359, 362, 363, 364, 370, 373, 376, 377], "default_postprocess_golden_function_output": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "is_cpp_oper": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "is_experiment": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "element": [13, 15, 17, 27, 31, 33, 35, 38, 48, 53, 55, 63, 67, 68, 69, 70, 75, 76, 78, 87, 95, 96, 98, 100, 102, 103, 107, 110, 112, 117, 124, 130, 134, 135, 137, 138, 139, 140, 143, 146, 148, 152, 155, 164, 165, 166, 167, 168, 178, 182, 187, 188, 190, 192, 195, 203, 214, 226, 237, 240, 241, 248, 255, 256, 259, 260, 261, 262, 263, 265, 267, 272, 276, 277, 278, 281, 282, 287, 290, 294, 305, 306, 308, 310, 311, 313, 320, 324, 326, 327, 329, 339, 342, 344, 346, 356, 365, 367, 369, 384, 388], "wise": [13, 15, 17, 27, 33, 35, 38, 48, 53, 55, 70, 78, 87, 95, 96, 98, 100, 102, 103, 107, 110, 112, 117, 124, 134, 135, 137, 139, 143, 146, 148, 152, 155, 164, 165, 166, 167, 168, 178, 182, 187, 188, 190, 192, 195, 203, 214, 226, 237, 240, 256, 265, 267, 272, 276, 277, 278, 281, 282, 290, 294, 305, 306, 308, 310, 311, 313, 320, 324, 327, 329, 339, 342, 344, 346, 365, 367, 388], "mathrm": [13, 15, 17, 19, 21, 27, 33, 35, 38, 39, 42, 46, 47, 48, 49, 50, 51, 53, 55, 70, 75, 76, 78, 82, 84, 87, 93, 94, 95, 96, 98, 100, 102, 103, 107, 110, 112, 117, 119, 120, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 146, 148, 152, 153, 155, 157, 163, 164, 165, 166, 167, 168, 173, 174, 176, 177, 178, 180, 182, 187, 188, 190, 192, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 226, 234, 235, 236, 237, 239, 240, 247, 255, 256, 258, 265, 272, 276, 277, 278, 281, 282, 283, 290, 294, 296, 305, 306, 308, 310, 311, 313, 320, 324, 327, 329, 331, 335, 337, 339, 342, 344, 346, 365, 367, 374], "_tensor": [13, 15, 17, 19, 21, 27, 33, 35, 38, 39, 46, 47, 48, 49, 50, 51, 53, 55, 70, 78, 82, 84, 87, 93, 94, 95, 96, 98, 100, 102, 103, 107, 110, 112, 117, 119, 120, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 146, 148, 152, 153, 155, 157, 163, 164, 165, 166, 167, 168, 173, 174, 176, 177, 178, 180, 182, 187, 188, 190, 192, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 226, 234, 235, 236, 237, 239, 240, 247, 255, 256, 258, 265, 272, 276, 277, 278, 281, 282, 283, 290, 294, 296, 305, 306, 308, 310, 311, 313, 320, 324, 327, 329, 331, 335, 337, 339, 342, 344, 346, 365, 367, 374], "_i": [13, 15, 17, 19, 33, 35, 38, 39, 42, 46, 47, 48, 49, 50, 51, 53, 55, 70, 75, 76, 78, 82, 87, 93, 95, 96, 98, 100, 102, 103, 107, 110, 112, 117, 124, 131, 132, 134, 135, 137, 138, 139, 141, 143, 146, 148, 152, 153, 155, 157, 164, 165, 166, 167, 168, 173, 176, 178, 182, 187, 188, 190, 192, 195, 201, 202, 203, 205, 206, 207, 208, 212, 214, 226, 234, 235, 237, 239, 240, 255, 256, 265, 272, 276, 277, 278, 281, 282, 290, 294, 296, 305, 306, 308, 310, 311, 313, 320, 324, 327, 329, 337, 339, 342, 344, 346, 365, 367, 374], "verb": [13, 15, 17, 33, 35, 38, 42, 46, 47, 48, 49, 50, 51, 53, 55, 70, 78, 84, 87, 100, 103, 107, 110, 112, 117, 119, 120, 124, 131, 134, 139, 146, 148, 152, 155, 157, 164, 165, 166, 167, 168, 173, 174, 178, 180, 195, 197, 198, 226, 237, 258, 265, 272, 276, 277, 278, 281, 282, 283, 290, 305, 306, 308, 310, 311, 313, 324, 327, 329, 331, 339, 342, 365, 367], "complextensor": [13, 14, 20, 28, 29, 65, 66, 82, 83, 158, 159, 161, 162, 231, 251, 252, 269, 270, 272, 273, 334], "keyword": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "memory_config": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 388, 390, 393], "prealloc": [13, 15, 17, 19, 20, 21, 22, 27, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 70, 75, 76, 78, 82, 83, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110, 112, 113, 117, 124, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 245, 256, 257, 265, 267, 272, 277, 278, 281, 282, 290, 294, 295, 296, 297, 305, 306, 308, 310, 311, 312, 313, 320, 324, 326, 327, 328, 329, 331, 334, 335, 336, 337, 342, 344, 345, 346, 356, 365, 367, 372, 373, 374, 377], "command": [13, 15, 17, 19, 20, 21, 22, 27, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 70, 78, 82, 83, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110, 112, 113, 114, 115, 117, 124, 127, 128, 129, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 305, 306, 308, 310, 311, 312, 313, 320, 324, 327, 328, 329, 331, 334, 335, 336, 337, 341, 342, 344, 345, 346, 350, 351, 355, 356, 360, 361, 365, 367, 368, 369, 372, 373, 374, 377, 383, 393], "queue": [13, 15, 17, 19, 20, 21, 22, 27, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 69, 70, 78, 82, 83, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 124, 127, 128, 129, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 248, 250, 256, 257, 265, 267, 272, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 305, 306, 308, 310, 311, 312, 313, 320, 324, 327, 328, 329, 331, 334, 335, 336, 337, 341, 342, 344, 345, 346, 350, 351, 355, 356, 360, 361, 365, 367, 368, 369, 372, 373, 374, 377], "id": [13, 15, 17, 19, 20, 21, 22, 27, 31, 33, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 55, 63, 64, 69, 70, 78, 82, 83, 87, 89, 90, 93, 95, 96, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 124, 127, 128, 129, 131, 132, 135, 136, 137, 141, 143, 146, 148, 152, 155, 157, 160, 164, 165, 166, 167, 168, 171, 173, 174, 176, 178, 182, 187, 188, 190, 192, 195, 197, 198, 201, 203, 205, 207, 212, 214, 216, 220, 221, 225, 226, 230, 231, 234, 235, 237, 238, 240, 241, 245, 246, 248, 250, 256, 257, 265, 267, 272, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 305, 306, 308, 310, 311, 312, 313, 320, 324, 327, 328, 329, 331, 334, 335, 336, 337, 341, 342, 344, 345, 346, 350, 351, 355, 356, 360, 361, 365, 367, 368, 369, 372, 373, 374, 377, 383, 387, 388, 389, 390, 391, 392], "tile_layout": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 253, 255, 256, 257, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 353, 356, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 384, 386, 388, 389, 390, 391, 393], "unary_backward": [14, 16, 18, 34, 36, 41, 43, 54, 56, 58, 60, 71, 73, 79, 81, 85, 88, 97, 99, 101, 104, 105, 111, 113, 116, 118, 125, 136, 145, 147, 149, 151, 156, 179, 184, 189, 191, 193, 194, 196, 210, 211, 233, 238, 254, 257, 264, 266, 268, 273, 279, 280, 286, 291, 293, 295, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 343, 345, 347, 349, 366], "abs_bw_t": 14, "_golden_function_ab": 14, "backward": [14, 16, 18, 20, 22, 24, 26, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 79, 81, 83, 85, 88, 90, 97, 99, 101, 104, 105, 108, 111, 113, 116, 118, 121, 125, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 252, 254, 257, 264, 266, 268, 270, 273, 279, 280, 284, 286, 291, 293, 295, 297, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 332, 334, 336, 343, 345, 347, 349, 366, 373, 375], "given": [14, 16, 18, 20, 22, 24, 26, 29, 31, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 69, 71, 73, 75, 76, 79, 81, 83, 85, 88, 92, 97, 99, 101, 104, 105, 111, 113, 116, 118, 121, 125, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 227, 228, 231, 233, 238, 246, 249, 252, 254, 257, 264, 266, 268, 270, 273, 279, 280, 284, 286, 287, 291, 293, 295, 297, 301, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 332, 334, 336, 343, 345, 347, 349, 356, 361, 366, 370, 373, 375, 378, 388, 391], "grad_tensor": [14, 16, 18, 20, 22, 24, 26, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 79, 81, 83, 85, 88, 90, 97, 99, 101, 104, 105, 108, 111, 113, 116, 118, 121, 125, 136, 145, 147, 149, 151, 154, 156, 159, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 252, 254, 257, 264, 266, 268, 270, 273, 279, 280, 284, 286, 291, 293, 295, 297, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 332, 334, 336, 343, 345, 347, 349, 366, 373, 375], "gradient": [14, 16, 18, 20, 22, 24, 26, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 69, 71, 73, 79, 81, 83, 85, 88, 90, 97, 99, 101, 104, 105, 108, 111, 113, 116, 118, 121, 125, 130, 136, 145, 147, 149, 151, 154, 156, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 254, 257, 264, 266, 268, 273, 279, 280, 284, 286, 291, 293, 295, 297, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 332, 334, 336, 343, 345, 347, 349, 366, 373, 375], "list": [14, 16, 18, 19, 20, 22, 24, 26, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 63, 64, 66, 71, 73, 74, 79, 81, 83, 85, 88, 89, 91, 93, 97, 99, 101, 104, 105, 111, 113, 116, 118, 121, 123, 125, 131, 132, 136, 141, 145, 147, 149, 151, 154, 156, 159, 173, 174, 175, 176, 179, 181, 184, 185, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201, 205, 207, 210, 211, 212, 217, 219, 220, 221, 224, 225, 231, 233, 234, 235, 238, 241, 248, 249, 250, 252, 254, 257, 258, 263, 264, 266, 268, 270, 273, 279, 280, 284, 286, 291, 293, 295, 296, 297, 303, 307, 309, 312, 314, 316, 317, 321, 323, 325, 328, 330, 331, 332, 334, 336, 337, 341, 343, 345, 347, 349, 356, 361, 366, 367, 368, 369, 373, 374, 375, 380, 392], "about": [14, 24, 45, 121, 136, 189, 191, 193, 194, 196, 199, 200, 210, 211, 257, 264, 272, 273, 284, 321, 328, 375, 384, 386, 387, 388, 392], "requires_grad": [14, 16, 18, 20, 22, 24, 26, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 71, 73, 79, 81, 83, 88, 90, 97, 99, 101, 104, 105, 108, 111, 113, 116, 118, 121, 125, 136, 145, 147, 149, 151, 154, 156, 175, 179, 181, 184, 189, 191, 193, 194, 196, 199, 200, 210, 211, 219, 224, 231, 233, 238, 257, 264, 266, 268, 273, 279, 280, 284, 286, 291, 295, 297, 303, 307, 309, 312, 314, 316, 321, 323, 325, 328, 330, 332, 334, 336, 343, 345, 347, 349, 366, 373, 375], "acos_t": 15, "_golden_function_aco": 15, "rand": [15, 17, 27, 31, 33, 35, 38, 42, 44, 48, 52, 53, 64, 70, 72, 75, 76, 78, 89, 95, 100, 103, 110, 117, 124, 134, 137, 139, 143, 146, 148, 155, 164, 165, 166, 167, 168, 172, 182, 183, 195, 203, 204, 214, 218, 222, 223, 226, 237, 240, 242, 243, 247, 258, 263, 264, 265, 276, 277, 278, 286, 287, 289, 298, 299, 300, 308, 310, 311, 313, 315, 318, 319, 324, 327, 329, 333, 338, 339, 340, 342, 356, 363, 364, 365, 371, 387, 388, 389, 391, 393], "acos_bw_t": 16, "invers": [16, 18, 34, 36, 41, 43], "cosin": [16, 18, 71, 73, 109], "input_tensor_a": [16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 54, 56, 64, 71, 73, 79, 81, 82, 83, 84, 88, 93, 94, 97, 99, 101, 104, 111, 116, 118, 119, 120, 121, 125, 131, 132, 133, 141, 142, 145, 147, 149, 153, 154, 156, 160, 163, 173, 174, 175, 176, 177, 179, 181, 184, 185, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 219, 220, 221, 224, 225, 231, 233, 234, 235, 236, 239, 247, 255, 257, 258, 266, 268, 273, 279, 280, 283, 284, 291, 296, 297, 303, 307, 309, 314, 316, 323, 325, 330, 331, 332, 334, 335, 336, 337, 343, 347, 366, 372, 373, 374, 375, 393], "acosh_t": 17, "_golden_function_acosh": [17, 18], "acosh_bw_t": 18, "hyperbol": [18, 36, 43, 73, 316, 345], "add_t": 19, "input_tensor_b": [19, 20, 21, 22, 23, 24, 25, 26, 37, 39, 40, 45, 46, 47, 49, 50, 51, 64, 82, 83, 84, 93, 94, 119, 120, 121, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 181, 185, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 283, 284, 296, 297, 331, 332, 334, 335, 336, 337, 372, 373, 374, 375, 393], "_a": [19, 21, 39, 46, 47, 49, 50, 51, 82, 84, 93, 94, 119, 120, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 234, 235, 236, 239, 247, 258, 283, 296, 331, 335, 337, 374], "_b": [19, 21, 39, 46, 47, 49, 50, 51, 82, 84, 93, 94, 119, 120, 131, 132, 133, 141, 142, 153, 163, 173, 174, 176, 177, 197, 198, 201, 202, 205, 206, 207, 208, 212, 213, 234, 235, 236, 239, 247, 258, 283, 296, 331, 335, 337, 374], "datatyp": [19, 30, 32, 44, 61, 67, 68, 69, 75, 76, 89, 90, 91, 92, 93, 127, 128, 129, 131, 132, 138, 140, 141, 172, 173, 174, 176, 185, 197, 198, 201, 205, 207, 212, 217, 221, 225, 234, 235, 244, 245, 259, 260, 261, 262, 289, 296, 319, 331, 337, 353, 354, 374, 376, 377, 386, 388, 391, 392], "str": [19, 32, 37, 83, 86, 93, 108, 131, 132, 141, 173, 174, 176, 185, 186, 197, 198, 201, 205, 207, 212, 217, 221, 225, 227, 228, 234, 235, 296, 304, 331, 337, 374, 391], "int32": [19, 31, 46, 47, 48, 49, 50, 51, 75, 76, 93, 95, 131, 132, 137, 141, 143, 173, 176, 182, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 218, 221, 222, 223, 225, 234, 235, 240, 301, 310, 329, 331, 333, 337, 338, 371], "uint32": [19, 31, 47, 50, 75, 76, 89, 90, 95, 130, 157, 160, 203, 204, 218, 222, 223, 240, 326, 333, 337, 338, 356, 371, 383, 384], "4294967295": [19, 203, 337], "uint16": [19, 31, 46, 49, 51, 93, 95, 128, 130, 157, 201, 202, 203, 205, 206, 207, 208, 234, 235, 240, 244, 326, 329, 331, 337, 356, 376, 384], "65535": [19, 46, 49, 51, 203, 234, 337], "tensor1": [19, 20, 21, 22, 23, 24, 25, 26, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 82, 83, 84, 93, 94, 119, 120, 121, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 180, 181, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 283, 284, 296, 297, 331, 332, 334, 335, 336, 337, 372, 373, 374, 375], "tensor2": [19, 20, 21, 22, 23, 24, 25, 26, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 82, 83, 84, 93, 94, 119, 120, 121, 131, 132, 133, 141, 142, 153, 154, 160, 163, 173, 174, 175, 176, 177, 180, 181, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 215, 217, 219, 221, 224, 225, 231, 234, 235, 236, 239, 247, 258, 283, 284, 296, 297, 331, 332, 334, 335, 336, 337, 372, 373, 374, 375], "scalar": [19, 20, 23, 25, 46, 47, 49, 50, 51, 82, 83, 84, 85, 93, 94, 119, 120, 121, 128, 129, 132, 133, 141, 142, 174, 176, 177, 180, 181, 197, 198, 201, 205, 207, 212, 213, 215, 218, 221, 222, 223, 225, 231, 234, 235, 236, 254, 258, 263, 267, 268, 283, 284, 296, 331, 333, 334, 337, 338, 371, 374, 393], "binary_backward": [20, 22, 37, 40, 45, 64, 83, 121, 154, 175, 199, 200, 219, 224, 231, 284, 297, 332, 334, 336, 375], "add_bw_t": 20, "_golden_function_bw": [20, 22, 37, 40, 45, 64, 121, 154, 175, 199, 200, 224, 284, 297, 332, 334, 336, 375], "are_required_output": [20, 22, 37, 64, 83, 231, 297, 334, 336, 373], "input_grad": [20, 22, 37, 64, 83, 108, 231, 297, 334, 336], "other_grad": [20, 22, 37, 64, 83, 231, 297, 334, 336], "bfloat4_b": [20, 22, 23, 25, 27, 40, 45, 64, 83, 127, 154, 175, 180, 181, 199, 200, 215, 219, 224, 231, 297, 332, 334, 336, 344, 346, 355, 372, 375], "addalpha_t": 21, "_golden_function_addalpha": 21, "alpha": [21, 22, 24, 26, 55, 56, 83, 87, 88, 302, 335, 336], "float": [21, 22, 23, 24, 25, 26, 44, 55, 56, 57, 58, 59, 60, 85, 87, 88, 107, 112, 115, 122, 127, 128, 129, 140, 144, 145, 150, 151, 152, 163, 172, 178, 179, 180, 209, 211, 218, 222, 223, 248, 250, 254, 255, 256, 258, 267, 268, 281, 282, 289, 292, 293, 298, 299, 300, 302, 320, 321, 322, 323, 333, 335, 336, 338, 348, 349, 360, 361, 363, 364, 371, 384], "addalpha_bw_t": 22, "addcdiv_t": 23, "_golden_function_addcdiv": 23, "input_tensor_c": [23, 24, 25, 26, 181, 215, 372, 373], "tensor3": [23, 24, 25, 26, 180, 181, 215, 372, 373], "ternary_backward": [24, 26, 181, 373], "addcdiv_bw_t": 24, "addcmul_t": 25, "_golden_function_addcmul": 25, "addcmul_bw_t": 26, "alt_complex_rotate90_t": 27, "_golden_function_alt_complex_rotate90": 27, "_": [27, 378, 383, 390], "2i": 27, "even": [27, 77, 216, 217], "complex_unari": [28, 65, 158, 161, 162, 251, 269], "angle_t": 28, "complex": [28, 29, 65, 66, 158, 159, 251, 252, 269, 270, 387, 391], "complex_unary_backward": [29, 66, 159, 252, 270], "angle_bw_t": 29, "arange_t": 30, "inclus": [30, 384], "end": [30, 75, 76, 82, 163, 180, 239, 317, 369, 379, 383, 388, 390, 392], "exclus": [30, 248], "consecut": [30, 384], "dram_memory_config": [30, 61, 91, 92, 185, 217, 352, 384, 388], "print": [30, 32, 63, 91, 92, 126, 127, 128, 129, 185, 216, 217, 244, 245, 246, 250, 285, 287, 304, 317, 352, 353, 355, 376, 377, 383, 384, 387, 391, 393], "00000": [30, 386], "argmax_t": 31, "_create_golden_funct": [31, 218, 222, 223, 333, 338, 371], "local": [31, 35, 38, 52, 53, 70, 72, 78, 80, 95, 96, 98, 100, 102, 103, 110, 117, 135, 137, 143, 146, 148, 155, 157, 164, 165, 166, 167, 168, 182, 183, 187, 188, 190, 192, 195, 203, 214, 218, 222, 223, 226, 232, 237, 240, 265, 277, 278, 294, 305, 306, 308, 310, 311, 313, 315, 320, 324, 327, 329, 333, 338, 340, 342, 344, 356, 363, 364, 371, 378, 379, 384, 385, 387, 388, 389, 390, 391, 392], "keepdim": [31, 218, 222, 223, 263, 333, 338, 371], "row_major_layout": [31, 32, 61, 86, 89, 122, 123, 127, 128, 244, 353, 376, 384, 387, 390, 391], "yield": [31, 218, 222, 223, 333, 338, 371, 391], "output_onedim": 31, "output_alldim": 31, "cache_file_nam": 32, "pathlib": [32, 86, 186], "path": [32, 86, 186, 381, 383, 389, 391, 392, 393], "callabl": [32, 227, 228], "serial": 32, "mesh_mapp": [32, 127], "cpptensortomesh": 32, "tensortomesh": [32, 127], "truncat": [32, 366], "mantissa": 32, "bit": 32, "bfp": [32, 384], "rais": [32, 355], "runtim": [32, 392], "error": [32, 171, 216, 217, 230, 355, 379, 387, 388, 389, 390, 391], "rte": 32, "bfp8": 32, "bfp4": 32, "randn": [32, 77, 90, 92, 126, 127, 138, 185, 217, 220, 245, 271, 301, 352, 353, 354, 355, 367, 377, 390], "375": [32, 127], "30469": [32, 127], "714844": [32, 127], "761719": [32, 127], "53125": [32, 127], "652344": [32, 127], "asin_t": 33, "_golden_function_asin": 33, "asin_bw_t": 34, "lambda": [34, 36, 43, 54, 56, 58, 60, 73, 85, 88, 99, 145, 179, 189, 191, 193, 211, 268, 293, 309, 314, 316, 323, 325, 378], "sine": [34, 36, 109, 316], "asinh_t": 35, "register_ttnn_cpp_unary_funct": [35, 38, 52, 53, 70, 72, 78, 80, 95, 96, 98, 100, 102, 103, 110, 117, 135, 137, 143, 146, 148, 155, 157, 164, 165, 166, 167, 168, 182, 183, 187, 188, 190, 192, 195, 203, 214, 226, 232, 237, 240, 265, 277, 278, 294, 305, 306, 308, 310, 311, 313, 315, 320, 324, 327, 329, 340, 342, 344, 363, 364], "asinh_bw_t": 36, "assign_bw_t": 37, "assign": 37, "other_tensor": [37, 83], "round_mod": [37, 82, 83, 267, 268], "atan_t": 38, "atan2_t": 39, "_golden_function_atan2": 39, "arctan": 39, "left": [39, 82, 131, 173, 382], "right": [39, 82, 131, 173], "x": [39, 44, 69, 140, 172, 185, 217, 251, 298, 299, 300, 360, 361, 381, 383, 384, 387, 390], "atan2_bw_t": 40, "atan_bw_t": 41, "_golden_function_atan": 41, "tangenr": 41, "atanh_t": 42, "_golden_function_atanh": 42, "bflaot8_b": 42, "atanh_bw_t": 43, "tangent": [43, 345], "batch_norm_t": 44, "batch": [44, 67, 68, 69, 114, 115, 160, 185, 217, 220, 259, 260, 261, 262, 298, 299, 300, 361, 383, 387, 391], "norm": [44, 172, 289], "see": [44, 140, 172, 289, 379, 380, 382, 383, 387, 388, 389, 390, 391, 392], "spatial": [44, 138, 370, 387], "text": [44, 82, 140, 163, 172, 239, 247, 318, 319, 379], "gamma": [44, 140, 233], "beta": [44, 140, 320, 321], "epsilon": [44, 140, 172, 289], "mu": [44, 140, 172], "sigma": [44, 140, 172], "cdot": [44, 75, 76, 140, 172, 374, 388], "varianc": [44, 140, 172, 384], "respect": [44, 69, 90, 140, 172, 217, 384, 386], "learnabl": [44, 140, 172], "scale": [44, 107, 140, 172, 218, 222, 223, 298, 299, 300, 302, 320, 333, 338, 360, 361, 371, 391], "shift": [44, 140, 172], "small": [44, 140, 172, 246, 387], "ep": [44, 209, 211], "1e": [44, 140, 163, 172, 289], "05": [44, 388], "momentum": 44, "running_mean": 44, "train": [44, 389, 391, 392], "updat": [44, 170, 379, 382, 389, 391, 393], "running_var": 44, "evalu": 44, "compute_kernel_config": [44, 61, 106, 109, 140, 172, 185, 217, 218, 222, 223, 289, 298, 299, 300, 318, 319, 333, 338, 360, 361, 371], "devicecomputekernelconfig": [44, 67, 68, 69, 106, 109, 140, 172, 185, 217, 259, 260, 261, 262, 289, 298, 299, 300, 318, 319, 360, 361], "These": [44, 217, 379, 383, 385, 388, 389, 392, 393], "interleav": [44, 63, 106, 172, 289, 298, 301, 352, 354, 362, 384], "bias_gelu_bw_t": 45, "bias_gelu": 45, "approxim": [45, 96, 98, 102, 108, 135, 136, 187, 188, 190, 192, 294, 305, 344, 346], "bitwise_and_t": 46, "_golden_function_bitwise_and": 46, "integ": [46, 47, 49, 50, 51, 248, 361], "bitwise_left_shift_t": 47, "_golden_function_bitwise_left_shift": 47, "ha": [47, 50, 69, 217, 227, 228, 261, 262, 341, 362, 378, 379, 383, 384, 385, 393], "shift_bit": [47, 50], "31": [47, 50, 386, 388], "bitwise_not_t": 48, "_golden_function_bitwise_not": 48, "2147483647": [48, 131], "bitwise_or_t": 49, "_golden_function_bitwise_or": 49, "bitwise_right_shift_t": 50, "_golden_function_bitwise_right_shift": 50, "bitwise_xor_t": 51, "_golden_function_bitwise_xor": 51, "cbrt_t": 52, "ceil_t": 53, "ceil_bw_t": 54, "celu_t": 55, "_golden_function_celu": 55, "celu_bw_t": 56, "formula": [56, 88, 145, 179, 180, 211, 321, 323], "clamp_t": 57, "_golden_function_clamp": 57, "min_tensor": [57, 59], "max_tensor": [57, 59], "clamp_bw_t": 58, "clip_t": 59, "_golden_function_clip": 59, "clip_bw_t": 60, "data_mov": [61, 63, 114, 115, 130, 160, 241, 248, 250, 285, 287, 288, 301, 317, 326, 350, 351, 368, 369], "clone_t": 61, "doe": [61, 127, 355, 379, 383, 392], "alter": 61, "unpad": [61, 123, 353, 369], "two": [61, 63, 134, 139, 217, 276, 288, 299, 300, 339, 353, 362, 378, 381, 384, 385, 386, 389, 390, 391, 392], "ensur": [61, 326, 341, 379, 381, 384, 387, 391, 392], "adjust": [61, 320, 392], "target": [61, 122, 123, 263, 379, 391], "l1_memory_config": [61, 352, 378, 384, 390, 393], "remov": [62, 355, 369], "success": [62, 387], "concat_t": 63, "concaten": [63, 64, 359, 362], "group": [63, 67, 68, 69, 140, 259, 260, 261, 262, 384, 387, 391], "split": [63, 134, 139, 276, 339, 362, 384], "partit": 63, "independ": 63, "altern": [63, 217, 388, 389, 393], "recombin": 63, "dure": [63, 127, 163, 355, 384, 392], "residu": 63, "concat_bw_t": 64, "30": [64, 91, 130, 301, 386, 388, 391], "conj_t": 65, "conjug": 65, "conj_bw_t": 66, "conv1d_t": 67, "1d": [67, 217, 241, 258, 389], "signal": [67, 68, 106, 138], "compos": [67, 68, 69, 106, 138, 355, 389, 391], "sever": [67, 68, 69, 106, 138, 390, 391], "plane": [67, 68, 69, 106, 138], "2d": [67, 68, 69, 130, 138, 217, 370, 384, 387, 391], "input_length": 67, "weight_tensor": [67, 68, 69, 106, 261, 262, 387, 391], "out_channel": [67, 68, 69, 259, 260, 261, 262, 387, 391], "in_channel": [67, 68, 69, 259, 260, 261, 262, 387, 391], "kernel_height": [67, 68, 261, 262], "kernel_width": [67, 68, 261, 262], "bias_tensor": [67, 68, 69, 106, 387, 391], "batch_siz": [67, 68, 69, 90, 138, 220, 259, 260, 261, 262, 289, 359, 362, 378, 387, 389, 390, 391], "length": [67, 258, 360, 361], "kernel_s": [67, 68, 69, 220, 259, 260, 261, 262, 387, 391], "convolv": [67, 68, 69, 220, 259, 260, 261, 262], "cross": [67, 68, 69, 259, 260, 261, 262], "correl": [67, 68, 69, 259, 260, 261, 262, 379, 392], "side": [67, 68, 69, 259, 260, 261, 262, 383], "pad_length": 67, "pad_left": [67, 68, 69, 259, 260, 261, 262], "pad_right": [67, 68, 69, 259, 260, 261, 262], "connect": [67, 68, 69, 259, 260, 261, 262, 389, 391, 392], "conv_config": [67, 68, 69, 259, 260, 261, 262, 387, 391], "compute_config": [67, 68, 69, 259, 260, 261, 262], "return_output_dim": [67, 68, 69], "return_weights_and_bia": [67, 68, 69], "bias": [67, 378, 389, 390, 391], "conv2d_t": 68, "inform": [68, 130, 272, 381, 392], "tech": 68, "input_height": [68, 69, 259, 260, 261, 262, 387, 391], "input_width": [68, 69, 259, 260, 261, 262, 387, 391], "pad_height": [68, 69, 259, 260, 261, 262], "pad_width": [68, 69, 259, 260, 261, 262], "pad_top": [68, 69, 259, 260, 261, 262], "pad_bottom": [68, 69, 259, 260, 261, 262], "conv_transpose2d_t": 69, "transpos": [69, 109, 185, 217, 250, 362, 384, 389, 391], "seen": [69, 74], "fraction": 69, "deconvolut": 69, "o": [69, 381, 383, 389, 390, 391], "g": [69, 217, 381, 383, 384, 389, 391, 392], "k_h": 69, "k_w": 69, "equat": 69, "h_out": 69, "h_in": 69, "output_pad": 69, "w_out": 69, "w_in": 69, "mirror_kernel": 69, "mirror": 69, "intern": [69, 140, 300, 380], "been": [69, 227, 228, 301, 341, 379, 392], "cos_t": 70, "cos_bw_t": 71, "_golden_function_co": 71, "cosh_t": 72, "cosh_bw_t": 73, "coregrid": [74, 140, 185, 217, 390], "corerangeset": [74, 298, 300, 356, 368], "strategi": [74, 217, 383, 384, 391], "shardstrategi": 74, "shardorient": [74, 298, 300], "use_height_and_width_as_shard_shap": 74, "travers": 74, "math": [74, 383], "320": 74, "cumprod_t": 75, "cumul": [75, 76], "_1": [75, 76], "time": [75, 163, 227, 285, 301, 379, 383, 390, 392, 393], "_2": [75, 76], "desir": [75, 76, 92, 114, 115, 122, 123, 127, 353, 354, 355], "cast": [75, 76], "reverse_ord": [75, 76], "accumul": [75, 76], "begin": [75, 76, 82, 163, 239, 383, 388], "axi": [75, 76, 287, 388], "tensor_input": [75, 76], "tensor_output": [75, 76], "With": [75, 76, 385], "preallocated_output": [75, 76], "cumsum_t": 76, "pycapsul": [77, 126, 271, 352], "resourc": [77, 392], "explicitli": 77, "whose": [77, 92], "forc": 77, "deg2rad_t": 78, "deg2rad_bw_t": 79, "_golden_function_deg2rad": 79, "degre": [79, 266], "radian": [79, 266], "digamma_t": 80, "digamma_bw_t": 81, "_golden_function_digamma": 81, "div_t": 82, "_golden_function_div": 82, "_mode": 82, "accurate_mod": 82, "non": [82, 217, 220, 241, 257, 267, 272, 292], "div_bw_t": 83, "pcc": [83, 154, 175, 268, 379, 382, 392], "degrad": [83, 154, 175, 268, 387, 388, 389, 390, 391], "div_no_nan_t": 84, "_golden_function_div_no_nan": 84, "div_no_nan_bw_t": 85, "denomin": [85, 267], "dump": [86, 227, 392, 393], "file_nam": [86, 186, 393], "save": [86, 319], "tensorbin": [86, 186], "elu_t": 87, "_golden_function_elu": 87, "elu_bw_t": 88, "embedding_t": 89, "retriev": 89, "word": 89, "padding_idx": 89, "token": [89, 170, 361], "embeddings_typ": 89, "embeddingstyp": 89, "106445": 89, "988281": 89, "59375": [89, 388], "212891": 89, "964844": 89, "199219": 89, "996094": 89, "78362e": 89, "38": [89, 384, 386, 390], "89785e": 89, "39": [89, 390], "04479e": 89, "25815e": 89, "71833e": 89, "59995e": 89, "60398e": 89, "83671e": 89, "22242e": 89, "88263e": 89, "35917e": 89, "49994e": 89, "embedding_backward": 90, "embedding_bw_t": 90, "extract": [90, 130, 391], "vocabulari": 90, "output_gradient_tensor": 90, "seq_len": [90, 109], "embedding_dim": 90, "num_embed": 90, "1024": [90, 391], "4096": 90, "3200": 90, "input_shap": [90, 220, 298, 299, 300], "input_index": 90, "randint": [90, 301], "weights_shap": 90, "weights_ttnn": 90, "grad_shap": 90, "grad_data": 90, "empty_t": 91, "uniniti": [91, 92], "bfloat_8": 91, "21": [91, 391], "67": 91, "empty_like_t": 92, "87": [92, 389, 391], "45": [92, 342, 343], "22": [92, 381, 387, 388, 389, 390, 391], "60": [92, 130], "75": [92, 126], "25": [92, 353, 383, 391], "eq_t": 93, "eq__t": 94, "_golden_function_eq_": 94, "input_a": [94, 133, 142, 160, 177, 213, 218, 222, 223, 236, 333, 338, 371], "input_b": [94, 133, 142, 160, 177, 213, 236], "eqz_t": 95, "_tensor_i": [95, 137, 143, 182, 203, 214, 240], "erf_t": 96, "fast_and_approximate_mod": [96, 98, 102, 135, 187, 188, 190, 192, 294, 305, 344, 346], "fast": [96, 98, 102, 135, 187, 188, 190, 192, 294, 305], "erf_bw_t": 97, "_golden_function_erf": 97, "erfc_t": 98, "erfc_bw_t": 99, "erfinv_t": 100, "erfinv_bw_t": 101, "_golden_function_erfinv": 101, "exp_t": 102, "exp2_t": 103, "exp2_bw_t": 104, "_golden_function_exp2": 104, "exp_bw_t": 105, "_golden_function_exp": 105, "exponenti": 105, "conv3d_t": 106, "3d": 106, "d": [106, 381], "kd": 106, "kh": [106, 387], "kw": [106, 387], "c_in": 106, "c_out": 106, "conv3dconfig": 106, "dropout_t": 107, "rng": 107, "probabl": 107, "averag": [107, 138, 383], "total_elem": 107, "124": 107, "prob": 107, "gelu_bw_t": [108, 136], "_golden_function_gelu": [108, 136], "algorithm": [108, 370], "rotary_embedding_t": 109, "rotari": 109, "cos_cach": 109, "sin_cach": 109, "token_idx": 109, "assum": [109, 123, 341, 370], "head_dim": 109, "cod_cach": 109, "token_index": 109, "expm1_t": 110, "expm1_bw_t": 111, "_golden_function_expm1": 111, "fill_t": 112, "_golden_function_fil": 112, "fill_valu": [112, 128, 129, 384, 386, 388], "wormhole_b0": 112, "system": [112, 134, 139, 267, 276, 281, 282, 292, 339, 381, 383, 392], "fill_bw_t": 113, "fill_ones_rm_t": 114, "val_hi": [114, 115], "val_lo": [114, 115], "count": [114, 115, 172, 383], "ye": [114, 115], "hone": [114, 115], "high": [114, 115, 381, 384, 386, 388, 392, 393], "region": [114, 115, 246], "wone": [114, 115], "fill_rm_t": 115, "nchw": [115, 391], "hw": 115, "hfill": 115, "wfill": 115, "hi": 115, "lo": 115, "low": 115, "fill_zero_bw_t": 116, "_golden_function_fill_zero": 116, "floor_t": 117, "floor_bw_t": 118, "_golden_function_floor": 118, "floor_div_t": 119, "_golden_function_floor_div": 119, "fmod_t": 120, "_golden_function_fmod": 120, "fmod_bw_t": 121, "padded_shap": [122, 249], "pad_valu": [122, 127, 250, 288, 317, 351], "target_layout": [122, 123], "target_mem_config": [122, 123], "padded_tensor": 122, "output_mem_config": [122, 123], "unpadded_tensor": 123, "frac_t": 124, "_golden_function_frac": [124, 125], "frac_bw_t": 125, "param": [126, 248, 352], "tensor_on_devic": [126, 352], "tensor_on_host": [126, 352], "365234": 126, "130859": 126, "itself": 127, "twice": [127, 383], "purpos": [127, 379, 382, 384], "second": [127, 134, 139, 185, 217, 248, 258, 276, 288, 339, 383, 390, 391, 393], "now": [127, 326, 355, 370, 384, 386, 390, 392], "mapper": 127, "cq_id": [127, 341, 355], "full_t": 128, "_golden_function_ful": 128, "filled_tensor": [128, 129], "full_like_t": 129, "templat": [129, 245, 377, 383], "gather_t": 130, "except": [130, 217, 299, 300, 390], "exce": 130, "do": [130, 379, 392], "sparse_grad": 130, "spars": 130, "20": [130, 226, 248, 301, 320, 321, 381, 383, 391, 392], "40": [130, 220], "50": 130, "70": 130, "80": [130, 175, 381, 391], "index_tensor": 130, "input_tensor_ttnn": [130, 326], "index_tensor_ttnn": 130, "gathered_tensor": 130, "gcd_t": 131, "_golden_function_gcd": 131, "greatest": 131, "2147483648": 131, "tensorint32default": [131, 173], "ge_t": 132, "ge__t": 133, "_golden_function_ge_": 133, "geglu_t": 134, "_golden_function_geglu": 134, "part": [134, 139, 276, 339, 379, 383, 390], "gelu_t": 135, "uint8": [136, 157, 295, 317], "gez_t": 137, "global_avg_pool2d_t": 138, "golden_global_avg_pool2d": 138, "adapt": 138, "across": [138, 383, 384, 388], "entir": [138, 341, 392], "typic": [138, 172, 298, 384, 391], "glu_t": 139, "_golden_function_glu": 139, "group_norm_t": 140, "_postprocess_golden_function_output": [140, 248], "num_group": 140, "input_mask": 140, "mask": [140, 357, 358, 361, 387, 388, 389, 390, 391, 392], "look": [140, 217, 356, 379, 380, 383, 384, 392], "inplac": [140, 202, 204, 206, 208], "num_out_block": 140, "negative_mask": 140, "cb": [140, 383], "overlap": 140, "fact": 140, "rm": [140, 289, 381], "gt_t": 141, "gt__t": 142, "_golden_function_gt_": 142, "gtz_t": 143, "hardshrink_t": 144, "_golden_function_hardshrink": 144, "lambd": [144, 145, 322, 323], "hardshrink_bw_t": 145, "hardsigmoid_t": 146, "hardsigmoid_bw_t": 147, "_golden_function_hardsigmoid": 147, "hardswish_t": 148, "hardswish_bw_t": 149, "_golden_function_hardswish": 149, "hardtanh_t": 150, "_golden_function_hardtanh": 150, "min_val": 150, "max_val": 150, "hardtanh_bw_t": 151, "heaviside_t": 152, "_golden_function_heavisid": 152, "hypot_t": 153, "_golden_function_hypot": 153, "hypot_bw_t": 154, "i0_t": 155, "i0_bw_t": 156, "_golden_function_i0": 156, "identity_t": 157, "sfpu": 157, "shouldn": 157, "instead": [157, 282, 390], "sinc": 157, "lower": [157, 248, 381], "float16": 157, "imag_t": 158, "imag_bw_t": 159, "imaginari": 159, "indexed_fill_t": 160, "replac": [160, 348], "denot": 160, "batch_id": 160, "is_imag_t": 161, "is_real_t": 162, "isclose_t": 163, "_golden_function_isclos": 163, "leq": 163, "atol": 163, "rtol": 163, "otherwis": [163, 263, 341, 356, 390, 393], "rel": 163, "toler": 163, "05f": 163, "absolut": [163, 171], "08f": 163, "equal_nan": 163, "nan": 163, "treat": [163, 217, 298], "isfinite_t": 164, "isinf_t": 165, "isnan_t": 166, "isneginf_t": 167, "isposinf_t": 168, "fill_cache_for_user__t": 169, "popul": [169, 227, 383], "batch_index": 169, "update_cache_for_token__t": 170, "update_index": 170, "batch_offset": 170, "l1_loss_t": 171, "_golden_function_l1_loss": 171, "input_refer": [171, 230], "input_predict": [171, 230], "layer_norm_t": 172, "layer": [172, 289, 383, 387, 389, 391], "programconfig": [172, 289], "pre_all_gath": 172, "bf16": 172, "unshard": [172, 289, 300, 384], "cannot": [172, 289], "tile_height": 172, "tile_width": [172, 289, 299, 300], "stick": 172, "align": [172, 217, 299, 300, 383], "lcm_t": 173, "_golden_function_lcm": 173, "least": [173, 217, 383], "32767": 173, "32768": 173, "ldexp_t": 174, "ldexp_bw_t": 175, "outsid": 175, "le_t": 176, "le__t": 177, "_golden_function_le_": 177, "leaky_relu_t": 178, "_golden_function_leaky_relu": 178, "negative_slop": [178, 179], "slope": 178, "leaki": 178, "leaky_relu_bw_t": 179, "01": [179, 392], "lerp_t": 180, "_golden_function_lerp": 180, "point": [180, 320, 383, 384], "interpol": 180, "lerp_bw_t": 181, "lez_t": 182, "lgamma_t": 183, "lgamma_bw_t": 184, "_golden_function_lgamma": 184, "linear_t": 185, "behaviour": [185, 217], "transpose_a": [185, 217], "transpose_b": [185, 217], "matmulprogramconfig": [185, 217], "output_til": [185, 217], "128": [185, 217, 387, 388, 389, 390, 391, 393], "log_t": 187, "log10_t": 188, "log10_bw_t": 189, "log1p_t": 190, "1e7": 190, "log1p_bw_t": 191, "log2_t": 192, "log2_bw_t": 193, "log_bw_t": 194, "_golden_function_log": 194, "logarithm": [194, 233], "log_sigmoid_t": 195, "log_sigmoid_bw_t": 196, "_golden_function_log_sigmoid": 196, "logaddexp_t": 197, "logaddexp2_t": 198, "logaddexp2_bw_t": 199, "logaddexp_bw_t": 200, "logical_and_t": 201, "_golden_function_logical_and": 201, "AND": [201, 202], "use_legaci": 201, "logical_and__t": 202, "logical_not_t": 203, "logical_not__t": 204, "_golden_function_logical_not_": 204, "logical_or_t": 205, "_golden_function_logical_or": 205, "OR": [205, 206, 288], "logical_or__t": 206, "logical_xor_t": 207, "_golden_function_logical_xor": 207, "land": [207, 208], "lnot": [207, 208], "lor": [207, 208], "logical_xor__t": 208, "xor": 208, "logit_t": 209, "_golden_function_logit": [209, 210], "logit_bw_t": 210, "logiteps_bw_t": 211, "logitep": 211, "lt_t": 212, "lt__t": 213, "_golden_function_lt_": 213, "ltz_t": 214, "mac_t": 215, "_golden_function_mac": 215, "context": [216, 274, 275], "manag": [216, 274, 275, 379, 381, 391], "exit": 216, "occur": 216, "matmul_t": 217, "dimension": [217, 233, 384], "dot": [217, 360, 361], "although": 217, "combin": [217, 389], "work": [217, 317, 378, 379, 381, 393], "variou": [217, 388], "abov": [217, 381, 384], "criteria": 217, "messag": [217, 383, 391, 392], "unexpect": 217, "obviou": 217, "scenario": [217, 384], "relat": 217, "swap": 217, "j": [217, 318, 319], "implicitli": 217, "extend": 217, "patch": 217, "leverag": 217, "accord": [217, 250, 285, 301, 392], "n_size": 217, "m_size": 217, "k_size": 217, "p": [217, 384, 392], "though": 217, "chosen": [217, 383], "carefulli": 217, "fix": [217, 387, 392], "problem": 217, "max_t": 218, "computekernelconfig": [218, 222, 223, 333, 338, 371], "factor": [218, 222, 223, 298, 299, 300, 333, 338, 371], "bessel": [218, 222, 223, 333, 338, 371], "max_bw_t": 219, "max_pool2d_t": 220, "golden_maxpool2d": 220, "window": [220, 387, 391], "nhw": 220, "scheme": [220, 259, 260, 261, 262], "input_h": [220, 391], "input_w": [220, 391], "ceil_mod": [220, 391], "applied_shard_schem": 220, "deallocate_input": 220, "return_indic": 220, "createdevic": 220, "l1_small_siz": [220, 246, 387, 391], "8192": [220, 356, 387, 391], "kernel_w": 220, "stride_h": 220, "stride_w": 220, "dilation_h": 220, "dilation_w": 220, "nchw_shape": 220, "256": [220, 391], "in_n": 220, "in_c": 220, "in_h": 220, "in_w": 220, "input_perm": 220, "input_reshap": 220, "tt_input": 220, "tt_input_dev": 220, "tt_output": [220, 299, 300], "in_place_halo": 220, "maximum_t": 221, "_golden_function_maximum": 221, "tensorsupport": 221, "16777216": 221, "mean_t": 222, "min_t": 223, "min_bw_t": 224, "minimum_t": 225, "_golden_function_minimum": 225, "mish_t": 226, "inf": [226, 232], "initialize_model": [227, 228, 378], "nn": [227, 228, 380, 385, 386, 389, 391], "model_nam": [227, 228, 378], "convert_to_ttnn": [227, 228, 378], "custom_preprocessor": [227, 228, 378], "dict": [227, 228, 391], "parameterdict": [227, 228], "prefix": [227, 228], "run_model": 227, "reader_patterns_cach": 227, "disabl": [227, 228, 387, 388, 389, 390, 391, 392, 393], "git": [227, 228, 381], "doesn": [227, 228], "invalid": [227, 228], "preprocessor": [227, 228], "put": [227, 228, 378, 386, 387, 388, 389, 390, 391], "submodul": [227, 228, 381, 389, 391], "appear": [227, 228], "ttnn_module_arg": 227, "tmp": [227, 392], "model_graph": 227, "svg": [227, 393], "avoid": [227, 300, 319, 320, 383, 384, 387, 388, 392], "recomput": 227, "moreh_sum_t": 229, "mse_loss_t": 230, "_golden_function_mse_loss": 230, "mul_bw_t": 231, "multigammaln_t": 232, "multigammaln_bw_t": 233, "_golden_function_mvlgamma": 233, "multivari": 233, "mvlgamma": 233, "5f": 233, "multiply_t": 234, "ne_t": 235, "ne__t": 236, "_golden_function_ne_": 236, "neg_t": 237, "neg_bw_t": 238, "_golden_function_neg": 238, "nextafter_t": 239, "_golden_function_nextaft": 239, "_float": 239, "neq": 239, "nez_t": 240, "nonzero_t": 241, "well": [241, 381, 382, 388], "normalize_global_t": 242, "_golden_function_normalize_glob": 242, "normalize_hw_t": 243, "_golden_function_normalize_hw": 243, "ones_t": 244, "ones_like_t": 245, "trace_region_s": 246, "dispatch_core_config": 246, "dispatchcoreconfig": 246, "0x7fb2d8788ef0": 246, "worker_l1_s": 246, "default_l1_small_s": 246, "default_trace_region_s": 246, "allocat": 246, "dispatch_core_typ": 246, "dispatchcoretyp": 246, "dispatch": [246, 383], "worker": [246, 387, 388, 389, 390, 391], "0x7fbac5bfc1b0": 246, "outer_t": 247, "_golden_function_out": 247, "otim": 247, "pad_t": 248, "_preprocess_golden_function_input": 248, "locat": [248, 380, 383, 385, 392, 393], "mutual": 248, "output_tensor_shap": [248, 351], "input_tensor_start": 248, "union": 248, "use_multicor": [248, 350, 351, 368, 369], "pad_input": 248, "assert": [248, 390, 393], "unpadded_shap": 249, "annot": [249, 379], "fixeds": 249, "permute_t": 250, "nullopt": [250, 356, 391], "tthe": 250, "broken": 250, "random": [250, 387, 389, 391], "garbag": 250, "polar_t": 251, "cartesian": 251, "theta": 251, "polar_bw_t": 252, "polygamma_t": 253, "_golden_function_polygamma": 253, "decim": [253, 290], "k": [253, 318, 319, 356, 360, 361, 391], "polygamma_bw_t": 254, "polyval_t": 255, "_golden_function_polyv": 255, "coeffici": [255, 379], "coeff": 255, "sum_": [255, 318, 319], "polynomi": 255, "pow_t": 256, "_golden_function_pow": 256, "expon": [256, 257, 292, 293, 384], "pow_bw_t": 257, "power": [257, 367, 392], "prelu_t": 258, "_golden_function_prelu": 258, "arrai": [258, 388], "invoc": [259, 260, 261, 262], "exact": [259, 260, 261, 262, 384], "input_memory_config": [259, 260, 261, 262], "input_layout": [259, 260, 261, 262], "input_dtyp": [259, 260, 261, 262], "output_dtyp": [259, 260, 261, 262], "convtranspose2d": [260, 261], "conv_tranpose2d": 261, "weights_format": [261, 262], "iohw": 261, "has_bia": [261, 262], "term": [261, 262, 382], "oihw": 262, "prod_t": 263, "everi": [263, 379, 383, 388, 390, 392, 393], "squeez": [263, 355], "output_all_dim": 263, "prod_bw_t": 264, "particular": [264, 378, 393], "taken": 264, "all_dims_output": 264, "rad2deg_t": 265, "rad2deg_bw_t": 266, "_golden_function_rad2deg": 266, "rdiv_t": 267, "_golden_function_rdiv": 267, "consid": 267, "numer": [267, 298, 299, 300, 318, 319, 320, 380, 384], "rounding_mod": 267, "rdiv_bw_t": 268, "real_t": 269, "real_bw_t": 270, "new_tensor": 271, "my_memory_config": 271, "reciprocal_t": 272, "inaccur": [272, 384], "fp": 272, "reciprocal_bw_t": 273, "_golden_function_reciproc": 273, "being": [274, 275, 383, 384], "reglu_t": 276, "_golden_function_reglu": 276, "relu_t": 277, "relu6_t": 278, "relu6_bw_t": 279, "_golden_function_relu6": 279, "relu_bw_t": 280, "_golden_function_relu": 280, "relu_max_t": 281, "_golden_function_relu_max": 281, "upper_limit": 281, "cap": 281, "relu_min_t": 282, "_golden_function_relu_min": 282, "lower_limit": 282, "remainder_t": 283, "_golden_function_remaind": 283, "modulu": 283, "remainder_bw_t": 284, "whb0": 284, "repeat_t": 285, "repetit": [285, 287], "repetition_vector": 285, "smallvector": 285, "repeat_bw_t": 286, "repeat_interleave_t": 287, "he": 287, "expand": [287, 384, 388], "torch_input_tensor": [287, 393], "torch_result": 287, "reshape_t": 288, "cost": 288, "view": [288, 383, 389, 391, 392, 393], "new_shap": 288, "kwtype": 288, "rms_norm_t": 289, "root": [289, 295, 328, 357, 358, 389, 391, 392], "round_t": 290, "_golden_function_round": [290, 291], "No": [290, 387, 389], "round_bw_t": 291, "rpow_t": 292, "_golden_function_rpow": 292, "upto": 292, "28": [292, 389], "posit": [292, 361], "rpow_bw_t": 293, "rsqrt_t": 294, "rsqrt_bw_t": 295, "_golden_function_rsqrt": 295, "rsub_t": 296, "_golden_function_rsub": 296, "rsub_bw_t": 297, "subract": 297, "revers": 297, "scale_causal_mask_hw_dims_softmax_in_place_t": 298, "special": [298, 379, 384], "causal": [298, 299, 300, 357, 358, 360], "affect": [298, 383], "better": [298, 305, 392], "hw_dims_onli": 298, "d_k": 298, "numeric_st": [298, 299, 300, 318, 319], "stabl": [298, 299, 300, 318, 319, 326, 386], "constrain": 298, "compute_grid_s": [298, 299, 300], "num_cores_r": [298, 299, 300], "384": [298, 299, 300, 378, 390], "768": [298, 299, 300, 390], "attention_mask_t": [298, 299, 300], "input_til": 298, "grid_coord": [298, 300], "shard_grid": [298, 300], "corerang": [298, 300], "shard_shap": [298, 300], "shard_spec": [298, 300], "shardspec": [298, 300], "sharded_mem_config": [298, 300], "buffertyp": [298, 300], "input_shard": [298, 300], "tt_output_shard": 298, "scale_mask_softmax_t": 299, "commonli": [299, 300], "mechan": [299, 300], "effici": [299, 300, 319, 381, 388, 389], "inherit": [299, 318], "is_causal_mask": [299, 300], "fuse_head": [299, 300], "scale_mask_softmax_in_place_t": 300, "directli": [300, 319, 385, 386, 387, 388, 389, 390, 391], "restrict": [300, 381], "veri": [300, 319, 320, 383], "scatter_t": 301, "onto": 301, "src": 301, "destin": 301, "amax": 301, "amin": 301, "info": [301, 326, 386, 387, 388, 389, 390, 391, 392], "input_torch": 301, "index_torch": 301, "int64": 301, "source_torch": 301, "input_ttnn": 301, "index_ttnn": 301, "source_ttnn": 301, "selu_t": 302, "_golden_function_selu": [302, 303], "0507": 302, "67326": 302, "selu_bw_t": 303, "short": [304, 393], "sigmoid_t": 305, "vector_mod": 305, "rc": [305, 381], "sigmoid_accurate_t": 306, "sigmoid_bw_t": 307, "_golden_function_sigmoid": 307, "sign_t": 308, "sign_bw_t": 309, "signbit_t": 310, "silu_t": 311, "silu_bw_t": 312, "_golden_function_silu": 312, "sin_t": 313, "sin_bw_t": 314, "sinh_t": 315, "sinh_bw_t": 316, "slice_t": 317, "slice_start": 317, "input_tensor_shap": 317, "slice_end": 317, "slice_step": 317, "unmodifi": 317, "undefin": 317, "16": [317, 384, 388, 390, 391], "softmax_t": 318, "x_i": [318, 319], "x_j": [318, 319], "softmax_in_place_t": 319, "wide": 319, "consum": 319, "90": [319, 391], "softplus_t": 320, "steep": 320, "higher": [320, 383, 384], "steeper": 320, "approach": [320, 378, 382, 393], "hard": 320, "stabil": [320, 382], "softplus_bw_t": 321, "softshrink_t": 322, "_golden_function_softshrink": 322, "softshrink_bw_t": 323, "softsign_t": 324, "softsign_bw_t": 325, "sort_t": 326, "ascend": 326, "descend": 326, "preserv": 326, "sorted_tensor": 326, "sorted_tensor_desc": 326, "indices_desc": 326, "input_tensor_tnn": 326, "input_tensor_2d": 326, "input_tensor_2d_ttnn": 326, "sorted_tensor_dim": 326, "indices_dim": 326, "sqrt_t": 327, "sqrt_bw_t": 328, "_golden_function_sqrt": 328, "square_t": 329, "255": 329, "square_bw_t": 330, "_golden_function_squar": 330, "squared_difference_t": 331, "_golden_function_squared_differ": 331, "squared_difference_bw_t": 332, "std_t": 333, "sub_bw_t": 334, "subalpha_t": 335, "_golden_function_subalpha": 335, "subalpha_bw_t": 336, "subtract_t": 337, "sum_t": 338, "swiglu_t": 339, "_golden_function_swiglu": 339, "swish_t": 340, "queueid": 341, "sub_device_id": 341, "subdeviceid": 341, "synchron": [341, 392, 393], "wait": [341, 383], "complet": [341, 385, 386, 387, 388, 389, 390, 391, 392], "associ": [341, 392], "ran": [341, 383, 390], "chip": [341, 387, 388, 389, 390, 391, 392], "set_sub_device_stall_group": 341, "queu": 341, "tan_t": 342, "tan_bw_t": 343, "_golden_function_tan": 343, "tanh_t": 344, "faster": [344, 346, 383, 390], "minor": [344, 346], "precis": [344, 346, 384, 389], "approx": [344, 346], "tanh_bw_t": 345, "_golden_function_tanh": 345, "tanhshrink_t": 346, "_golden_function_tanhshrink": [346, 347], "tanhshrink_bw_t": 347, "threshold_t": 348, "_golden_function_threshold": [348, 349], "threshold_bw_t": 349, "tilize_t": 350, "_nop_golden_funct": 350, "acceler": [350, 351, 368, 369, 381, 389], "tilize_with_val_padding_t": 351, "800781": 352, "455078": 352, "585938": 352, "to_layout_t": 353, "organ": [353, 379, 384], "becom": [353, 392], "42188": 353, "398438": 353, "to_memory_config_t": 354, "torch_rank": [355, 393], "Will": 355, "reach": 355, "mesh_compos": 355, "cppmeshtotensor": 355, "ttnn_tensor": 355, "torch_tensor": [355, 388], "3008": 355, "8438": [355, 388], "3242": 355, "9023": 355, "5820": 355, "5312": 355, "topk_t": 356, "_create_golden_function_topk": 356, "largest": [356, 384], "smallest": 356, "sure": [356, 393], "top": 356, "sub_core_grid": [356, 368], "indices_tensor": 356, "bfloat8": 356, "output_value_tensor": 356, "output_index_tensor": 356, "4d": 356, "65536": 356, "topk_valu": 356, "topk_indic": 356, "attention_softmax_t": 357, "head_siz": [357, 358, 359, 362, 390], "attention_mask": [357, 358, 390], "causal_mask": [357, 358], "attention_softmax__t": 358, "concatenate_heads_t": 359, "num_head": [359, 362, 390], "sequence_s": [359, 362, 378, 390], "scaled_dot_product_attention_t": 360, "mimick": 360, "flashattent": 360, "accept": [360, 361, 379, 382, 391], "sdpaprogramconfig": [360, 361], "q": [360, 361], "parallel": [360, 361, 383, 388, 392], "nqh": 360, "input_tensor_q": [360, 361], "dh": [360, 361], "input_tensor_k": [360, 361], "nkv": [360, 361], "input_tensor_v": [360, 361], "attn_mask": [360, 361], "impli": 360, "is_caus": [360, 361], "scaled_dot_product_attention_decode_t": 361, "decod": 361, "flash": [361, 381], "mqa": 361, "sdpamulticoreprogramconfig": 361, "nh": 361, "cur_po": 361, "cur_pos_tensor": 361, "pnh": 361, "skip": 361, "split_query_key_value_and_split_heads_t": 362, "hidden_s": [362, 378, 390], "Then": [362, 378, 381, 392], "them": [362, 381, 383, 386, 388, 389], "readi": [362, 379], "score": 362, "kv_input_tensor": 362, "q1": 362, "k1": 362, "v1": [362, 381], "qn": 362, "kn": 362, "vn": 362, "cat": [362, 390], "num_kv_head": 362, "contigu": [362, 384, 391], "transpose_kei": 362, "num": 362, "tril_t": 363, "diagon": [363, 364], "triu_t": 364, "trunc_t": 365, "_golden_function_trunc": [365, 366], "trunc_bw_t": 366, "unary_chain_t": 367, "ops_chain": 367, "unarywithparam": 367, "chain": 367, "unaryoptyp": 367, "untilize_t": 368, "use_pack_until": [368, 369], "untilize_with_unpadding_t": 369, "output_tensor_end": 369, "upsample_t": 370, "form": 370, "nearest": 370, "scale_factor": 370, "array2d": 370, "var_t": 371, "where_t": 372, "_golden_function_wher": 372, "where_bw_t": 373, "xlogy_t": 374, "_golden_function_xlogi": 374, "xlogy_bw_t": 375, "zeros_t": 376, "zeros_like_t": 377, "basi": 378, "rewritten": 378, "bert": 378, "modeling_bert": 378, "bertintermedi": 378, "__init__": 378, "super": 378, "dens": 378, "intermediate_s": 378, "hidden_st": [378, 390], "tdd": 378, "pytest": [378, 379, 383, 392, 393], "torch_bert": 378, "utility_funct": 378, "torch_random": 378, "utils_for_test": 378, "assert_with_pcc": 378, "mark": [378, 379], "parametr": 378, "phiyodr": 378, "finetun": 378, "squad2": 378, "test_bert_intermedi": 378, "manual_se": [378, 387, 390, 391, 393], "bertconfig": 378, "from_pretrain": 378, "eval": 378, "torch_hidden_st": [378, 390], "torch_output": [378, 390], "bert_intermedi": 378, "9999": [378, 392, 393], "dictionari": [378, 391], "turn": 378, "ttnn_bert": 378, "999": [378, 389], "someth": 378, "ttnn_optimized_bert": 378, "isinst": 378, "preprocess_linear_weight": [378, 390], "preprocess_linear_bia": [378, 390], "num_cores_x": [378, 390], "ff1_weight": 378, "ff1_bia": 378, "best": 378, "integr": [378, 379], "incredibli": 379, "excit": 379, "exploratori": 379, "folder": [379, 383], "freedom": 379, "showcas": 379, "few": [379, 384, 391], "question": 379, "answer": 379, "highlight": [379, 384], "successfulli": [379, 386], "migrat": [379, 393], "good": 379, "readm": [379, 381], "md": [379, 381], "describ": [379, 391], "credit": 379, "author": 379, "might": 379, "encount": 379, "demonstr": [379, 383, 386, 388, 389, 391], "adequ": 379, "achiev": [379, 382], "pearson": 379, "ci": 379, "pipelin": [379, 383, 389], "unit": [379, 381], "metric": 379, "meet": 379, "continu": [379, 381, 382], "upon": 379, "commit": 379, "ongo": 379, "complianc": 379, "catch": 379, "regress": 379, "earli": 379, "collect": [379, 383, 385, 389, 392], "varieti": 379, "instruct": [379, 380, 381, 383, 385, 393], "measur": 379, "run_device_perf_model": 379, "run_perform": 379, "sh": [379, 381, 383, 392, 393], "models_device_performance_bare_met": 379, "schedul": 379, "clear": [379, 382, 387, 388, 389, 390, 391], "incorpor": 379, "autom": 379, "extern": [379, 382, 384], "servic": 379, "workflow": [379, 381, 392], "impl": 379, "yaml": 379, "models_performance_bare_met": 379, "run_demos_single_card_n150_test": 379, "run_demos_single_card_n300_test": 379, "run_t3000_demo_test": 379, "test_ttnn_functional_resnet50": 379, "resnet50testinfra": 379, "friendli": 380, "ml": [380, 381], "workload": 380, "http": [380, 381, 392], "com": [380, 381], "guid": [380, 381, 385, 392], "choic": 380, "jupyt": 380, "notebook": 380, "advanc": [381, 392], "comprehens": [381, 392], "stack": 381, "deploy": 381, "find": [381, 392], "asset": 381, "tag": 381, "quick": [381, 387, 391], "download": [381, 389, 391], "curl": 381, "fssl": 381, "chmod": 381, "podman": 381, "warn": [381, 383, 387, 388, 389, 390, 391], "galaxi": 381, "4u": 381, "blackhol": 381, "driver": [381, 387, 388, 389, 390, 391, 392], "kmd": [381, 387, 388, 389, 390, 391, 392], "firmwar": 381, "smi": 381, "ubuntu": 381, "04": [381, 388], "33": 381, "fw_pack": 381, "v2": 381, "18": 381, "fwbundl": 381, "v18": 381, "v3": 381, "17": [381, 391], "fw": [381, 383, 387, 388, 389, 390, 391], "34": [381, 387, 388, 389, 390, 391, 392], "visit": [381, 392], "compon": 381, "immedi": 381, "ai": [381, 387, 388, 389, 390, 391], "closer": 381, "conveni": 381, "who": [381, 384], "linux": 381, "distro": 381, "glibc": 381, "newer": 381, "pip": [381, 392, 393], "cpu": [381, 383, 387, 388, 389, 390, 391], "governor": 381, "export": [381, 392, 393], "pythonpath": 381, "pwd": 381, "python_env": [381, 392], "dev": 381, "txt": [381, 392], "sudo": [381, 383], "apt": 381, "cpufrequtil": 381, "cpupow": 381, "frequenc": 381, "registri": 381, "pull": [381, 382, 387], "ghcr": 381, "io": [381, 383], "amd64": 381, "bash": 381, "recurs": 381, "simplest": 381, "install_depend": 381, "build_met": [381, 383, 392], "cmake": 381, "mkdir": 381, "cd": [381, 383], "ninja": 381, "dcmake_build_typ": 381, "relwithdebuginfo": 381, "dcmake_cxx_compil": 381, "compil": [381, 389, 390, 393], "envirion": 381, "python_env_dir": 381, "path_to_your_env_directori": 381, "create_venv": 381, "bin": 381, "driven": [381, 382], "recip": 381, "conda": 381, "forg": 381, "tt_metal_hom": [381, 383, 386, 387, 388, 389, 390, 391], "python3": [381, 385, 386, 387, 388, 389, 390, 391], "m": [381, 392], "run_op_on_devic": 381, "eth": 381, "rout": 381, "loudbox": 381, "quietbox": 381, "iommu": [381, 387, 388, 389, 390, 391, 392], "level": [381, 383, 386, 388, 392], "isol": 381, "passthrough": 381, "On": 381, "translat": 381, "viommu": 381, "hypervisor": 381, "secur": 381, "dma": 381, "pcie": 381, "guest": 381, "corrupt": 381, "reliabl": [381, 382], "intel_iommu": 381, "amd_iommu": 381, "provis": 381, "remap": 381, "intel": 381, "vt": 381, "amd": 381, "vi": [381, 392], "intend": 382, "maintain": 382, "while": [382, 389], "simultan": [382, 392], "tune": 382, "themselv": [382, 384], "goal": 382, "ask": 382, "popular": 382, "kent": 382, "beck": 382, "benefit": 382, "submit": 382, "label": [382, 384, 389, 391], "fulli": [382, 383, 389, 391], "fallback": 382, "branch": 382, "brief": 382, "4730": 382, "rst": 382, "referenc": 382, "sweep": 382, "codeown": 382, "pr": 382, "reflect": 382, "merg": 382, "main": [382, 386, 387, 388, 389, 390, 391, 392, 393], "comment": 382, "resnet": 383, "test_perf_resnet": 383, "test_perf_bare_met": 383, "0185": 383, "finish": 383, "csv": [383, 392], "consol": 383, "similar": [383, 390, 392], "give": [383, 392], "shorter": 383, "append": 383, "cli": 383, "explain": 383, "reset": 383, "tt_smi": 383, "tensix_reset": 383, "tensix": [383, 388], "skew": 383, "timer": 383, "reboot": 383, "wh": 383, "analyz": [383, 392], "1000": [383, 387, 388, 389, 390, 391], "fixtur": 383, "ttl": 383, "readdeviceprofil": 383, "total": [383, 389, 391], "drop": 383, "around": [383, 390], "120": [383, 391], "eighth": 383, "receiv": 383, "mention": 383, "risc": 383, "those": [383, 391], "flow": [383, 392], "come": 383, "python_fallback": 383, "tt_dnn_cpu": 383, "tt_dnn_devic": 383, "global": [383, 392], "fidel": 383, "field": 383, "lofi": 383, "hifi2": 383, "hifi3": 383, "clock": 383, "stamp": 383, "durat": [383, 390, 393], "nanosecond": 383, "end_t": 383, "start_t": 383, "cycl": 383, "earliest": 383, "core_frequ": 383, "marker": 383, "brisc": 383, "ncrisc": 383, "trisc0": 383, "trisc1": 383, "trisc2": 383, "front": 383, "spent": [383, 390], "cb_wait_front": 383, "reserv": 383, "cb_reserve_back": 383, "datamov": 383, "input_0_memori": 383, "z": 383, "channels_last": 383, "dev_0_dram": 383, "dec_0_l1": 383, "noc": 383, "timelin": 383, "npe": 383, "subdirectori": 383, "npe_viz": 383, "traffic": 383, "congest": 383, "properli": [383, 387], "item": [383, 389, 391], "aggreg": 383, "timestamp": [383, 392], "ops_perf_results_2025_06_25_14_04_34": 383, "2025_06_25_14_04_34": 383, "actual": [384, 389, 391], "4x4": 384, "32x32": [384, 388], "still": 384, "transit": 384, "2x2": 384, "illustr": 384, "insid": [384, 393], "isn": 384, "16x16": 384, "per": [384, 392], "li": 384, "fashion": [384, 390], "face0": 384, "face1": 384, "face2": 384, "face3": 384, "pictur": 384, "reason": 384, "engin": 384, "matric": 384, "decompos": 384, "transpose_til": 384, "col": 384, "torch_t": 384, "byte": 384, "That": 384, "sizeof": 384, "introduc": [384, 388], "observ": [384, 391], "magnitud": [384, 390], "flush": 384, "instabl": 384, "extrem": 384, "infin": 384, "domin": 384, "caus": 384, "lose": 384, "7014118346046923e": 384, "frequent": 384, "occurr": 384, "uniform": 384, "deal": 384, "critic": 384, "applic": [384, 392], "homogen": 384, "unsuit": 384, "inher": 384, "owned_host_storag": 384, "borrowed_host_storag": 384, "borrow": 384, "numpi": [384, 388, 389], "device_storag": 384, "abstract": 384, "awai": 384, "compress": 384, "upper": 384, "learn": [384, 386, 387, 388], "remain": 384, "128x128": 384, "subset": 384, "know": 384, "understand": [384, 392], "coordin": 384, "physic": 384, "task": [385, 389], "smoothli": 385, "lightweight": 385, "minim": 385, "standalon": 385, "basic_python": [385, 386, 387, 388, 389, 390, 391], "togeth": [386, 387, 388, 389, 390, 391], "llama": 386, "mistral": 386, "diffus": 386, "ttnn_add_tensor": 386, "loguru": [386, 387, 388, 389, 390, 391], "logger": [386, 387, 388, 389, 390, 391], "tt_tensor1": 386, "tt_tensor2": 386, "tt_result": 386, "everyth": [386, 387, 388, 389, 390, 391, 392], "As": [386, 390], "2025": [386, 387, 388, 389, 390, 391, 392], "06": [386, 390], "23": 386, "09": [386, 387, 392], "36": 386, "58": 386, "211": 386, "__main__": [386, 387, 388, 389, 390, 391], "29": [386, 388], "37": 386, "00": [386, 389, 391], "524": 386, "525": 386, "present": 387, "ttnn_basic_conv": 387, "state": 387, "extra": [387, 391], "asid": [387, 391], "portion": [387, 391], "slide": [387, 391], "scratchpad": [387, 391], "kb": [387, 391], "enough": [387, 391], "amongst": [387, 391], "bchw": 387, "permuted_input": 387, "flat": 387, "reshaped_input": 387, "out_torch": 387, "f": [387, 388, 389, 390, 391, 393], "07": [387, 388, 389, 390, 391], "02": [387, 392], "649": 387, "silicondriv": [387, 388, 389, 390, 391, 392], "pci": [387, 388, 389, 390, 391, 392], "pci_devic": [387, 388, 389, 390, 391, 392], "198": [387, 388, 389, 390, 391], "651": 387, "658": 387, "tt_cluster": [387, 388, 389, 390, 391, 392], "190": [387, 388, 389, 390, 391], "659": 387, "666": 387, "667": 387, "673": 387, "harvest": [387, 388, 389, 390, 391, 392], "0x100": [387, 388, 389, 390, 391], "noc0": [387, 388, 389, 390, 391, 392], "0x0": [387, 388, 389, 390, 391, 392], "cluster": [387, 388, 389, 390, 391, 392], "282": [387, 388, 389, 390, 391], "772": 387, "817": 387, "remot": [387, 388, 389, 390, 391, 392], "147": [387, 388, 389, 390, 391], "828": 387, "ethernet": [387, 388, 389, 390, 391], "1039": [387, 388, 389, 390, 391], "915": 387, "clk": [387, 388, 389, 390, 391], "mhz": [387, 388, 389, 390, 391], "metal_context": [387, 388, 389, 390, 391], "487": 387, "428": [387, 388, 389, 390, 391], "489": 387, "unabl": [387, 388, 389, 390, 391], "thread": [387, 388, 389, 390, 391, 392, 393], "hardware_command_queu": [387, 388, 389, 390, 391], "74": [387, 388, 389, 390, 391], "921": 387, "reprocess": 387, "563": 387, "922": 387, "582": 387, "390": 387, "78": 387, "mesh_devic": [387, 388, 389, 390, 391], "488": [387, 388, 389, 390, 391], "391": 387, "468": [387, 388, 389, 390, 391], "783": [387, 388, 389, 390, 391], "392": 387, "ttnn_basic_oper": 388, "np": [388, 389], "host_rand": 388, "amount": 388, "to_tt_til": 388, "helper": 388, "tt_t1": 388, "overhead": 388, "transfer": 388, "tt_t2": 388, "tt_t3": 388, "tt_t4": 388, "t5": 388, "tt_t5": 388, "add_result": 388, "mul_result": 388, "mul": [388, 390], "matmul_result": 388, "bmatrix": 388, "rightarrow": 388, "broadcast_vector": 388, "broadcast_tt": 388, "broadcast_add_result": 388, "850": 388, "852": [388, 389], "859": 388, "860": 388, "866": 388, "867": 388, "873": 388, "970": 388, "015": 388, "025": 388, "111": 388, "678": 388, "680": 388, "537": 388, "564": 388, "47": 388, "08": [388, 392], "072": 388, "49": 388, "82812": 388, "04688": 388, "32812": 388, "00781": 388, "39844": 388, "03906": 388, "14844": 388, "24219": 388, "65625": 388, "31250": 388, "21094": 388, "21875": 388, "33594": 388, "37500": 388, "62500": 388, "670": 388, "52": 388, "12500": 388, "23438": 388, "96875": 388, "02600": 388, "97656": 388, "18164": 388, "87891": 388, "44531": 388, "48438": 388, "50781": 388, "35938": 388, "229": 388, "55": [388, 390], "50000": 388, "25000": 388, "56250": 388, "43750": 388, "57": 388, "231": 388, "59": 388, "233": 388, "63": 388, "8242": 388, "0469": 388, "2500": 388, "0000": 388, "3750": 388, "3945": 388, "0391": 388, "5625": 388, "1250": 388, "2188": 388, "8750": 388, "4375": 388, "7500": 388, "6250": 388, "7422": 388, "1484": 388, "9531": 388, "5000": 388, "6562": 388, "3281": 388, "0938": 388, "2158": 388, "3359": 388, "234": 388, "insight": [389, 391, 392], "ttnn_mlp_inference_mnist": 389, "essenti": 389, "digit": 389, "classif": [389, 391], "perceptron": 389, "manipul": 389, "torchvis": [389, 391], "disk": [389, 391, 392, 393], "throughout": [389, 391, 392], "statu": 389, "predict": [389, 391], "backend": 389, "outcom": 389, "28x28": 389, "grayscal": 389, "dataload": [389, 391], "through": [389, 391, 392], "totensor": [389, 391], "testset": [389, 391], "testload": [389, 391], "shuffl": [389, 391], "train_and_export_mlp": 389, "mlp_mnist_weight": 389, "pt": [389, 391], "poor": [389, 391], "w1": 389, "b1": 389, "w2": 389, "b2": 389, "w3": [389, 391], "b3": [389, 391], "correctli": 389, "snippet": [389, 391, 393], "five": [389, 391], "counter": [389, 391], "sequenti": 389, "three": 389, "raw": 389, "highest": [389, 391], "overal": [389, 391, 392], "enumer": [389, 391], "break": [389, 391], "_layout": 389, "image_tt": 389, "1x128": 389, "w1_final": 389, "b1_final": 389, "out1": 389, "w2_final": 389, "b2_final": 389, "out2": 389, "w3_final": 389, "b3_final": 389, "out3": 389, "predicted_label": [389, 391], "ntt": [389, 391], "100": [389, 391], "2f": [389, 391], "03": 389, "41": 389, "990": 389, "992": 389, "998": 389, "006": 389, "007": 389, "013": 389, "110": 389, "172": 389, "182": [389, 391], "268": 389, "886": 389, "888": 389, "44": 389, "48": 389, "677": 389, "682": 389, "686": 389, "690": 389, "695": 389, "89": [389, 391], "696": 389, "697": 389, "therefor": 390, "multi_head_attent": 390, "query_weight": 390, "query_bia": 390, "key_weight": 390, "key_bia": 390, "value_weight": 390, "value_bia": 390, "output_weight": 390, "output_bia": 390, "fallback_reshap": 390, "get_fallback_funct": [390, 393], "attention_scor": 390, "attention_prob": 390, "context_lay": 390, "self_output": 390, "torch_attention_mask": 390, "torch_query_weight": 390, "torch_query_bia": 390, "torch_key_weight": 390, "torch_key_bia": 390, "torch_value_weight": 390, "torch_value_bia": 390, "torch_output_weight": 390, "torch_output_bia": 390, "fly": 390, "fortun": 390, "ahead": 390, "data_typ": 390, "optimized_multi_head_attent": 390, "fused_qkv_weight": 390, "fused_qkv_bia": 390, "self_output_weight": 390, "self_output_bia": 390, "fused_qkv_output": 390, "context_layer_after_concatenate_head": 390, "qkv": 390, "torch_qkv_weight": 390, "torch_qkv_bia": 390, "qkv_weight": 390, "qkv_bia": 390, "optimized_output": 390, "torch_optimized_output": 390, "allclos": 390, "ttnn_multihead_attent": 390, "769": 390, "776": [390, 392], "777": 390, "784": 390, "790": 390, "887": 390, "931": 390, "942": 390, "027": [390, 391], "603": 390, "605": 390, "51": [390, 392], "001": 390, "132": [390, 391], "265338897705078": 390, "056": 390, "151": [390, 391], "05480194091796875": 390, "363": 390, "259": 390, "2866740226745605": 390, "366": 390, "274": 390, "002416849136352539": 390, "417": 390, "418": 390, "460": 390, "pixel": 391, "cifar10": 391, "train_and_export_cnn": 391, "simple_cnn_cifar10_weight": 391, "conv1": 391, "conv2": 391, "fc1": 391, "fc2": 391, "conv_pool_stag": 391, "encapsul": 391, "undergo": 391, "metadata": 391, "again": 391, "record": 391, "modular": 391, "flexibl": [391, 392], "input_nhwc": 391, "conv_outchannel": 391, "weight_str": 391, "bias_str": 391, "activation_str": 391, "log_first_sampl": 391, "conv_kernel_s": 391, "conv_strid": 391, "conv_pad": 391, "conv1_out": 391, "max_pool2d_kernel_s": 391, "max_pool2d_strid": 391, "max_pool2d_pad": 391, "max_pool2d_dil": 391, "max_pool2d_out": 391, "simplecnn": 391, "rearrang": 391, "obtain": 391, "ttnn_imag": 391, "ttnn_image_permu": 391, "log_thi": 391, "conv1_pool": 391, "conv2_pool": 391, "fc": 391, "out_flat": 391, "w4": 391, "b4": 391, "w3_tt": 391, "b3_tt": 391, "x_tt": 391, "w4_tt": 391, "b4_tt": 391, "ttnn_simplecnn_infer": 391, "041": 391, "043": 391, "050": 391, "051": 391, "057": 391, "058": 391, "064": 391, "161": 391, "224": 391, "235": 391, "321": 391, "889": 391, "891": 391, "19": 391, "734": 391, "471": 391, "075": 391, "86": 391, "88": 391, "076": 391, "91": 391, "92": 391, "93": 391, "1x1": 391, "94": 391, "95": 391, "96": [391, 393], "97": 391, "98": 391, "99": 391, "enable_subblock_pad": 391, "101": 391, "960": 391, "129": 391, "130": 391, "131": 391, "961": 391, "133": 391, "134": 391, "135": 391, "136": 391, "137": 391, "138": 391, "139": 391, "026": 391, "157": [391, 392], "158": 391, "121": 391, "669": 391, "238": 391, "166": 391, "181": 391, "240": 391, "183": 391, "ll": 392, "offer": 392, "intuit": 392, "depth": 392, "searchabl": 392, "plot": 392, "placement": 392, "peak": 392, "hierarch": 392, "server": 392, "ssh": 392, "instanc": 392, "opportun": 392, "watch": 392, "walkthrough": 392, "video": 392, "offlin": 392, "launch": 392, "localhost": 392, "8000": 392, "chrome": 392, "greet": 392, "homepag": 392, "yolov4": 392, "320x320": 392, "coco": 392, "predefin": 392, "wrap": 392, "ttnn_config_path": [392, 393], "inlin": 392, "overrid": [392, 393], "ttnn_config_overrid": [392, 393], "past": 392, "enable_fast_runtime_mod": [392, 393], "enable_log": [392, 393], "report_nam": [392, 393], "ttnn_visualizer_tutori": 392, "enable_graph_report": [392, 393], "enable_detailed_buffer_report": [392, 393], "enable_detailed_tensor_report": [392, 393], "enable_comparison_mod": [392, 393], "free": 392, "test_ttnn_yolov4": 392, "test_yolov4": 392, "pretrained_weight_tru": 392, "At": 392, "664": 392, "73": 392, "665": 392, "83": 392, "cache_path": 392, "model_cache_path": 392, "tmp_dir": 392, "enable_model_cach": 392, "throw_exception_on_fallback": 392, "comparison_mode_should_raise_except": 392, "comparison_mode_pcc": [392, 393], "root_report_path": 392, "4042956046390500517": 392, "754": 392, "197": 392, "758": 392, "192": 392, "761": 392, "764": 392, "0x80": 392, "295": 392, "836": 392, "navig": 392, "json": [392, 393], "db": 392, "sqlite": 392, "traci": 392, "termin": 392, "session": 392, "unset": 392, "regener": 392, "Or": 392, "731": 392, "process_ops_log": 392, "generate_report": 392, "905": 392, "2025_08_01_10_51_02": 392, "ops_perf_results_2025_08_01_10_51_02": 392, "ops_perf_results_": 392, "device_profile_log": 392, "went": 392, "bottom": 392, "filter": 392, "click": 392, "inspect": 392, "breakdown": 392, "relationship": 392, "easi": 392, "candid": 392, "tabl": 392, "chart": 392, "lifetim": 392, "estim": 392, "headroom": 392, "pinpoint": 392, "ineffici": 392, "node": 392, "edg": 392, "zoom": 392, "pan": 392, "subnetwork": 392, "flop": 392, "underutil": 392, "toggl": 392, "hint": 392, "suboptim": 392, "summar": 392, "deepli": 392, "architectur": 393, "2024": 393, "torch_input_tensor_a": 393, "torch_input_tensor_b": 393, "matmul_output_tensor": 393, "torch_matmul_output_tensor": 393, "unlik": 393, "start_tim": 393, "end_tim": 393, "stdout": 393, "6391518115997314": 393, "0007393360137939453": 393, "manage_config": 393, "9998": 393, "construct": 393, "tracer": 393, "exp_trac": 393, "miss": 393, "tt_logger_typ": 393, "tt_logger_level": 393, "substitut": 393, "implementaiton": 393, "unless": 393, "addition": 393, "app": 393, "pre_hook_to_print_args_and_kwarg": 393, "post_hook_to_print_output": 393, "query_registered_oper": 393, "begin_graph_captur": 393, "runmod": 393, "no_dispatch": 393, "captured_graph": 393, "end_graph_captur": 393, "pretty_print": 393}, "objects": {"ttnn": [[6, 0, 1, "", "Conv2dConfig"], [7, 0, 1, "", "Conv2dSliceConfig"], [8, 3, 1, "", "GetDefaultDevice"], [9, 3, 1, "", "SetDefaultDevice"], [384, 0, 1, "", "Shape"], [10, 0, 1, "", "SoftmaxDefaultProgramConfig"], [11, 0, 1, "", "SoftmaxProgramConfig"], [12, 0, 1, "", "SoftmaxShardedMultiCoreProgramConfig"], [13, 5, 1, "", "abs"], [14, 5, 1, "", "abs_bw"], [15, 5, 1, "", "acos"], [16, 5, 1, "", "acos_bw"], [17, 5, 1, "", "acosh"], [18, 5, 1, "", "acosh_bw"], [19, 5, 1, "", "add"], [20, 5, 1, "", "add_bw"], [21, 5, 1, "", "addalpha"], [22, 5, 1, "", "addalpha_bw"], [23, 5, 1, "", "addcdiv"], [24, 5, 1, "", "addcdiv_bw"], [25, 5, 1, "", "addcmul"], [26, 5, 1, "", "addcmul_bw"], [27, 5, 1, "", "alt_complex_rotate90"], [28, 5, 1, "", "angle"], [29, 5, 1, "", "angle_bw"], [30, 5, 1, "", "arange"], [31, 5, 1, "", "argmax"], [32, 5, 1, "", "as_tensor"], [33, 5, 1, "", "asin"], [34, 5, 1, "", "asin_bw"], [35, 5, 1, "", "asinh"], [36, 5, 1, "", "asinh_bw"], [37, 5, 1, "", "assign_bw"], [38, 5, 1, "", "atan"], [39, 5, 1, "", "atan2"], [40, 5, 1, "", "atan2_bw"], [41, 5, 1, "", "atan_bw"], [42, 5, 1, "", "atanh"], [43, 5, 1, "", "atanh_bw"], [44, 5, 1, "", "batch_norm"], [45, 5, 1, "", "bias_gelu_bw"], [46, 5, 1, "", "bitwise_and"], [47, 5, 1, "", "bitwise_left_shift"], [48, 5, 1, "", "bitwise_not"], [49, 5, 1, "", "bitwise_or"], [50, 5, 1, "", "bitwise_right_shift"], [51, 5, 1, "", "bitwise_xor"], [52, 5, 1, "", "cbrt"], [53, 5, 1, "", "ceil"], [54, 5, 1, "", "ceil_bw"], [55, 5, 1, "", "celu"], [56, 5, 1, "", "celu_bw"], [57, 5, 1, "", "clamp"], [58, 5, 1, "", "clamp_bw"], [59, 5, 1, "", "clip"], [60, 5, 1, "", "clip_bw"], [61, 5, 1, "", "clone"], [62, 3, 1, "", "close_device"], [63, 5, 1, "", "concat"], [64, 5, 1, "", "concat_bw"], [65, 5, 1, "", "conj"], [66, 5, 1, "", "conj_bw"], [67, 5, 1, "", "conv1d"], [68, 5, 1, "", "conv2d"], [69, 5, 1, "", "conv_transpose2d"], [70, 5, 1, "", "cos"], [71, 5, 1, "", "cos_bw"], [72, 5, 1, "", "cosh"], [73, 5, 1, "", "cosh_bw"], [74, 3, 1, "", "create_sharded_memory_config"], [75, 5, 1, "", "cumprod"], [76, 5, 1, "", "cumsum"], [77, 5, 1, "", "deallocate"], [78, 5, 1, "", "deg2rad"], [79, 5, 1, "", "deg2rad_bw"], [80, 5, 1, "", "digamma"], [81, 5, 1, "", "digamma_bw"], [82, 5, 1, "", "div"], [83, 5, 1, "", "div_bw"], [84, 5, 1, "", "div_no_nan"], [85, 5, 1, "", "div_no_nan_bw"], [86, 5, 1, "", "dump_tensor"], [87, 5, 1, "", "elu"], [88, 5, 1, "", "elu_bw"], [89, 5, 1, "", "embedding"], [90, 5, 1, "", "embedding_bw"], [91, 5, 1, "", "empty"], [92, 5, 1, "", "empty_like"], [93, 5, 1, "", "eq"], [94, 5, 1, "", "eq_"], [95, 5, 1, "", "eqz"], [96, 5, 1, "", "erf"], [97, 5, 1, "", "erf_bw"], [98, 5, 1, "", "erfc"], [99, 5, 1, "", "erfc_bw"], [100, 5, 1, "", "erfinv"], [101, 5, 1, "", "erfinv_bw"], [102, 5, 1, "", "exp"], [103, 5, 1, "", "exp2"], [104, 5, 1, "", "exp2_bw"], [105, 5, 1, "", "exp_bw"], [110, 5, 1, "", "expm1"], [111, 5, 1, "", "expm1_bw"], [112, 5, 1, "", "fill"], [113, 5, 1, "", "fill_bw"], [114, 5, 1, "", "fill_ones_rm"], [115, 5, 1, "", "fill_rm"], [116, 5, 1, "", "fill_zero_bw"], [117, 5, 1, "", "floor"], [118, 5, 1, "", "floor_bw"], [119, 5, 1, "", "floor_div"], [120, 5, 1, "", "fmod"], [121, 5, 1, "", "fmod_bw"], [122, 3, 1, "", "format_input_tensor"], [123, 3, 1, "", "format_output_tensor"], [124, 5, 1, "", "frac"], [125, 5, 1, "", "frac_bw"], [126, 5, 1, "", "from_device"], [127, 5, 1, "", "from_torch"], [128, 5, 1, "", "full"], [129, 5, 1, "", "full_like"], [130, 5, 1, "", "gather"], [131, 5, 1, "", "gcd"], [132, 5, 1, "", "ge"], [133, 5, 1, "", "ge_"], [134, 5, 1, "", "geglu"], [135, 5, 1, "", "gelu"], [136, 5, 1, "", "gelu_bw"], [137, 5, 1, "", "gez"], [138, 5, 1, "", "global_avg_pool2d"], [139, 5, 1, "", "glu"], [140, 5, 1, "", "group_norm"], [141, 5, 1, "", "gt"], [142, 5, 1, "", "gt_"], [143, 5, 1, "", "gtz"], [144, 5, 1, "", "hardshrink"], [145, 5, 1, "", "hardshrink_bw"], [146, 5, 1, "", "hardsigmoid"], [147, 5, 1, "", "hardsigmoid_bw"], [148, 5, 1, "", "hardswish"], [149, 5, 1, "", "hardswish_bw"], [150, 5, 1, "", "hardtanh"], [151, 5, 1, "", "hardtanh_bw"], [152, 5, 1, "", "heaviside"], [153, 5, 1, "", "hypot"], [154, 5, 1, "", "hypot_bw"], [155, 5, 1, "", "i0"], [156, 5, 1, "", "i0_bw"], [157, 5, 1, "", "identity"], [158, 5, 1, "", "imag"], [159, 5, 1, "", "imag_bw"], [160, 5, 1, "", "indexed_fill"], [161, 5, 1, "", "is_imag"], [162, 5, 1, "", "is_real"], [163, 5, 1, "", "isclose"], [164, 5, 1, "", "isfinite"], [165, 5, 1, "", "isinf"], [166, 5, 1, "", "isnan"], [167, 5, 1, "", "isneginf"], [168, 5, 1, "", "isposinf"], [171, 5, 1, "", "l1_loss"], [172, 5, 1, "", "layer_norm"], [173, 5, 1, "", "lcm"], [174, 5, 1, "", "ldexp"], [175, 5, 1, "", "ldexp_bw"], [176, 5, 1, "", "le"], [177, 5, 1, "", "le_"], [178, 5, 1, "", "leaky_relu"], [179, 5, 1, "", "leaky_relu_bw"], [180, 5, 1, "", "lerp"], [181, 5, 1, "", "lerp_bw"], [182, 5, 1, "", "lez"], [183, 5, 1, "", "lgamma"], [184, 5, 1, "", "lgamma_bw"], [185, 5, 1, "", "linear"], [186, 5, 1, "", "load_tensor"], [187, 5, 1, "", "log"], [188, 5, 1, "", "log10"], [189, 5, 1, "", "log10_bw"], [190, 5, 1, "", "log1p"], [191, 5, 1, "", "log1p_bw"], [192, 5, 1, "", "log2"], [193, 5, 1, "", "log2_bw"], [194, 5, 1, "", "log_bw"], [195, 5, 1, "", "log_sigmoid"], [196, 5, 1, "", "log_sigmoid_bw"], [197, 5, 1, "", "logaddexp"], [198, 5, 1, "", "logaddexp2"], [199, 5, 1, "", "logaddexp2_bw"], [200, 5, 1, "", "logaddexp_bw"], [201, 5, 1, "", "logical_and"], [202, 5, 1, "", "logical_and_"], [203, 5, 1, "", "logical_not"], [204, 5, 1, "", "logical_not_"], [205, 5, 1, "", "logical_or"], [206, 5, 1, "", "logical_or_"], [207, 5, 1, "", "logical_xor"], [208, 5, 1, "", "logical_xor_"], [209, 5, 1, "", "logit"], [210, 5, 1, "", "logit_bw"], [211, 5, 1, "", "logiteps_bw"], [212, 5, 1, "", "lt"], [213, 5, 1, "", "lt_"], [214, 5, 1, "", "ltz"], [215, 5, 1, "", "mac"], [216, 3, 1, "", "manage_device"], [217, 5, 1, "", "matmul"], [218, 5, 1, "", "max"], [219, 5, 1, "", "max_bw"], [220, 5, 1, "", "max_pool2d"], [221, 5, 1, "", "maximum"], [222, 5, 1, "", "mean"], [223, 5, 1, "", "min"], [224, 5, 1, "", "min_bw"], [225, 5, 1, "", "minimum"], [226, 5, 1, "", "mish"], [229, 5, 1, "", "moreh_sum"], [230, 5, 1, "", "mse_loss"], [231, 5, 1, "", "mul_bw"], [232, 5, 1, "", "multigammaln"], [233, 5, 1, "", "multigammaln_bw"], [234, 5, 1, "", "multiply"], [235, 5, 1, "", "ne"], [236, 5, 1, "", "ne_"], [237, 5, 1, "", "neg"], [238, 5, 1, "", "neg_bw"], [239, 5, 1, "", "nextafter"], [240, 5, 1, "", "nez"], [241, 5, 1, "", "nonzero"], [242, 5, 1, "", "normalize_global"], [243, 5, 1, "", "normalize_hw"], [244, 5, 1, "", "ones"], [245, 5, 1, "", "ones_like"], [246, 3, 1, "", "open_device"], [247, 5, 1, "", "outer"], [248, 5, 1, "", "pad"], [249, 3, 1, "", "pad_to_tile_shape"], [250, 5, 1, "", "permute"], [251, 5, 1, "", "polar"], [252, 5, 1, "", "polar_bw"], [253, 5, 1, "", "polygamma"], [254, 5, 1, "", "polygamma_bw"], [255, 5, 1, "", "polyval"], [256, 5, 1, "", "pow"], [257, 5, 1, "", "pow_bw"], [258, 5, 1, "", "prelu"], [259, 3, 1, "", "prepare_conv_bias"], [260, 3, 1, "", "prepare_conv_transpose2d_bias"], [261, 3, 1, "", "prepare_conv_transpose2d_weights"], [262, 3, 1, "", "prepare_conv_weights"], [263, 5, 1, "", "prod"], [264, 5, 1, "", "prod_bw"], [265, 5, 1, "", "rad2deg"], [266, 5, 1, "", "rad2deg_bw"], [267, 5, 1, "", "rdiv"], [268, 5, 1, "", "rdiv_bw"], [269, 5, 1, "", "real"], [270, 5, 1, "", "real_bw"], [271, 5, 1, "", "reallocate"], [272, 5, 1, "", "reciprocal"], [273, 5, 1, "", "reciprocal_bw"], [274, 3, 1, "", "register_post_operation_hook"], [275, 3, 1, "", "register_pre_operation_hook"], [276, 5, 1, "", "reglu"], [277, 5, 1, "", "relu"], [278, 5, 1, "", "relu6"], [279, 5, 1, "", "relu6_bw"], [280, 5, 1, "", "relu_bw"], [281, 5, 1, "", "relu_max"], [282, 5, 1, "", "relu_min"], [283, 5, 1, "", "remainder"], [284, 5, 1, "", "remainder_bw"], [285, 5, 1, "", "repeat"], [286, 5, 1, "", "repeat_bw"], [287, 5, 1, "", "repeat_interleave"], [288, 5, 1, "", "reshape"], [289, 5, 1, "", "rms_norm"], [290, 5, 1, "", "round"], [291, 5, 1, "", "round_bw"], [292, 5, 1, "", "rpow"], [293, 5, 1, "", "rpow_bw"], [294, 5, 1, "", "rsqrt"], [295, 5, 1, "", "rsqrt_bw"], [296, 5, 1, "", "rsub"], [297, 5, 1, "", "rsub_bw"], [298, 5, 1, "", "scale_causal_mask_hw_dims_softmax_in_place"], [299, 5, 1, "", "scale_mask_softmax"], [300, 5, 1, "", "scale_mask_softmax_in_place"], [301, 5, 1, "", "scatter"], [302, 5, 1, "", "selu"], [303, 5, 1, "", "selu_bw"], [304, 3, 1, "", "set_printoptions"], [305, 5, 1, "", "sigmoid"], [306, 5, 1, "", "sigmoid_accurate"], [307, 5, 1, "", "sigmoid_bw"], [308, 5, 1, "", "sign"], [309, 5, 1, "", "sign_bw"], [310, 5, 1, "", "signbit"], [311, 5, 1, "", "silu"], [312, 5, 1, "", "silu_bw"], [313, 5, 1, "", "sin"], [314, 5, 1, "", "sin_bw"], [315, 5, 1, "", "sinh"], [316, 5, 1, "", "sinh_bw"], [317, 5, 1, "", "slice"], [318, 5, 1, "", "softmax"], [319, 5, 1, "", "softmax_in_place"], [320, 5, 1, "", "softplus"], [321, 5, 1, "", "softplus_bw"], [322, 5, 1, "", "softshrink"], [323, 5, 1, "", "softshrink_bw"], [324, 5, 1, "", "softsign"], [325, 5, 1, "", "softsign_bw"], [326, 5, 1, "", "sort"], [327, 5, 1, "", "sqrt"], [328, 5, 1, "", "sqrt_bw"], [329, 5, 1, "", "square"], [330, 5, 1, "", "square_bw"], [331, 5, 1, "", "squared_difference"], [332, 5, 1, "", "squared_difference_bw"], [333, 5, 1, "", "std"], [334, 5, 1, "", "sub_bw"], [335, 5, 1, "", "subalpha"], [336, 5, 1, "", "subalpha_bw"], [337, 5, 1, "", "subtract"], [338, 5, 1, "", "sum"], [339, 5, 1, "", "swiglu"], [340, 5, 1, "", "swish"], [341, 3, 1, "", "synchronize_device"], [342, 5, 1, "", "tan"], [343, 5, 1, "", "tan_bw"], [344, 5, 1, "", "tanh"], [345, 5, 1, "", "tanh_bw"], [346, 5, 1, "", "tanhshrink"], [347, 5, 1, "", "tanhshrink_bw"], [348, 5, 1, "", "threshold"], [349, 5, 1, "", "threshold_bw"], [350, 5, 1, "", "tilize"], [351, 5, 1, "", "tilize_with_val_padding"], [352, 5, 1, "", "to_device"], [353, 5, 1, "", "to_layout"], [354, 5, 1, "", "to_memory_config"], [355, 5, 1, "", "to_torch"], [356, 5, 1, "", "topk"], [363, 5, 1, "", "tril"], [364, 5, 1, "", "triu"], [365, 5, 1, "", "trunc"], [366, 5, 1, "", "trunc_bw"], [367, 5, 1, "", "unary_chain"], [368, 5, 1, "", "untilize"], [369, 5, 1, "", "untilize_with_unpadding"], [370, 5, 1, "", "upsample"], [371, 5, 1, "", "var"], [372, 5, 1, "", "where"], [373, 5, 1, "", "where_bw"], [374, 5, 1, "", "xlogy"], [375, 5, 1, "", "xlogy_bw"], [376, 5, 1, "", "zeros"], [377, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[6, 1, 1, "", "act_block_h_override"], [6, 1, 1, "", "act_block_w_div"], [6, 1, 1, "", "activation"], [6, 1, 1, "", "core_grid"], [6, 1, 1, "", "deallocate_activation"], [6, 1, 1, "", "enable_act_double_buffer"], [6, 1, 1, "", "enable_kernel_stride_folding"], [6, 1, 1, "", "enable_split_reader"], [6, 1, 1, "", "enable_weights_double_buffer"], [6, 1, 1, "", "full_inner_dim"], [6, 1, 1, "", "in_place"], [6, 1, 1, "", "output_layout"], [6, 1, 1, "", "override_sharding_config"], [6, 1, 1, "", "reallocate_halo_output"], [6, 1, 1, "", "reshard_if_not_optimal"], [6, 1, 1, "", "shard_layout"], [6, 1, 1, "", "transpose_shards"], [6, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[7, 0, 1, "", "SliceTypeEnum"], [7, 1, 1, "", "num_slices"], [7, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[7, 2, 1, "", "SliceHeight"], [7, 2, 1, "", "SliceWidth"], [7, 1, 1, "", "name"], [7, 1, 1, "", "value"]], "ttnn.Shape": [[384, 1, 1, "", "rank"], [384, 4, 1, "", "to_rank"]], "ttnn.SoftmaxShardedMultiCoreProgramConfig": [[12, 1, 1, "", "block_w"]], "ttnn.experimental": [[106, 5, 1, "", "conv3d"], [107, 5, 1, "", "dropout"], [108, 5, 1, "", "gelu_bw"], [109, 5, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[169, 5, 1, "", "fill_cache_for_user_"], [170, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[227, 3, 1, "", "preprocess_model"], [228, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[357, 5, 1, "", "attention_softmax"], [358, 5, 1, "", "attention_softmax_"], [359, 5, 1, "", "concatenate_heads"], [360, 5, 1, "", "scaled_dot_product_attention"], [361, 5, 1, "", "scaled_dot_product_attention_decode"], [362, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 3, 4, 378, 381, 383, 388, 392, 393], "nn": [0, 3, 4, 378, 381, 383, 388, 392, 393], "document": 0, "ttnn": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 390, 392], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 381], "develop": 1, "support": [2, 393], "report": [2, 5, 383, 392], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 393], "tip": 2, "commun": 2, "what": [3, 4], "i": [3, 4], "ad": 4, "new": [4, 382], "oper": [4, 5, 378, 383, 386, 387, 388, 392, 393], "faq": 4, "step": [4, 378, 381], "ar": [4, 381], "need": 4, "add": [4, 19, 386], "c": [4, 393], "python": [4, 393], "exampl": [4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 381, 386, 387, 388, 389, 390, 391, 393], "devic": [4, 5, 386, 387, 388, 389, 390, 391, 393], "implement": [4, 390], "1": [4, 298, 378, 380, 381, 393], "2": [4, 378, 380, 381, 393], "bind": 4, "option": [4, 299, 300, 381], "golden": 4, "function": [4, 382, 393], "api": [5, 384], "memori": [5, 384, 392], "config": [5, 384], "core": 5, "tensor": [5, 31, 218, 222, 223, 298, 299, 300, 333, 338, 371, 384, 386, 387, 388, 392, 393], "creation": [5, 386, 388], "matrix": 5, "multipl": [5, 384], "pointwis": 5, "unari": 5, "binari": [5, 381], "ternari": 5, "loss": 5, "reduct": 5, "data": [5, 384, 389], "movement": 5, "normal": 5, "program": [5, 381, 393], "moreh": 5, "transform": [5, 357, 358, 359, 360, 361, 362], "ccl": 5, "embed": [5, 89], "convolut": [5, 387, 391], "pool": [5, 391], "vision": 5, "kv": 5, "cach": [5, 393], "model": [5, 378, 380, 381, 390, 392], "convers": 5, "hook": [5, 393], "conv2dconfig": 6, "conv2dsliceconfig": 7, "getdefaultdevic": 8, "setdefaultdevic": 9, "softmaxdefaultprogramconfig": 10, "softmaxprogramconfig": 11, "softmaxshardedmulticoreprogramconfig": 12, "ab": 13, "abs_bw": 14, "aco": 15, "acos_bw": 16, "acosh": 17, "acosh_bw": 18, "add_bw": 20, "addalpha": 21, "addalpha_bw": 22, "addcdiv": 23, "addcdiv_bw": 24, "addcmul": 25, "addcmul_bw": 26, "alt_complex_rotate90": 27, "angl": 28, "angle_bw": 29, "arang": 30, "argmax": 31, "input": [31, 218, 222, 223, 298, 299, 300, 333, 338, 371, 387], "output": [31, 386, 387, 388, 389, 390, 391], "as_tensor": 32, "asin": 33, "asin_bw": 34, "asinh": 35, "asinh_bw": 36, "assign_bw": 37, "atan": 38, "atan2": 39, "atan2_bw": 40, "atan_bw": 41, "atanh": 42, "atanh_bw": 43, "batch_norm": 44, "bias_gelu_bw": 45, "bitwise_and": 46, "bitwise_left_shift": 47, "bitwise_not": 48, "bitwise_or": 49, "bitwise_right_shift": 50, "bitwise_xor": 51, "cbrt": 52, "ceil": 53, "ceil_bw": 54, "celu": 55, "celu_bw": 56, "clamp": 57, "clamp_bw": 58, "clip": 59, "clip_bw": 60, "clone": [61, 381], "close_devic": 62, "concat": 63, "concat_bw": 64, "conj": 65, "conj_bw": 66, "conv1d": 67, "conv2d": 68, "conv_transpose2d": 69, "co": 70, "cos_bw": 71, "cosh": 72, "cosh_bw": 73, "create_sharded_memory_config": 74, "cumprod": 75, "cumsum": 76, "dealloc": 77, "deg2rad": 78, "deg2rad_bw": 79, "digamma": 80, "digamma_bw": 81, "div": 82, "div_bw": 83, "div_no_nan": 84, "div_no_nan_bw": 85, "dump_tensor": 86, "elu": 87, "elu_bw": 88, "embedding_bw": 90, "empti": 91, "empty_lik": 92, "eq": 93, "eq_": 94, "eqz": 95, "erf": 96, "erf_bw": 97, "erfc": 98, "erfc_bw": 99, "erfinv": 100, "erfinv_bw": 101, "exp": 102, "exp2": 103, "exp2_bw": 104, "exp_bw": 105, "experiment": [106, 107, 108, 109], "conv3d": 106, "dropout": 107, "gelu_bw": [108, 136], "rotary_embed": 109, "expm1": 110, "expm1_bw": 111, "fill": 112, "fill_bw": 113, "fill_ones_rm": 114, "fill_rm": 115, "fill_zero_bw": 116, "floor": 117, "floor_bw": 118, "floor_div": 119, "fmod": 120, "fmod_bw": 121, "format_input_tensor": 122, "format_output_tensor": 123, "frac": 124, "frac_bw": 125, "from_devic": 126, "from_torch": 127, "full": [128, 386, 387, 388, 389, 390, 391], "full_lik": 129, "gather": 130, "gcd": 131, "ge": 132, "ge_": 133, "geglu": 134, "gelu": 135, "gez": 137, "global_avg_pool2d": 138, "glu": 139, "group_norm": 140, "gt": 141, "gt_": 142, "gtz": 143, "hardshrink": 144, "hardshrink_bw": 145, "hardsigmoid": 146, "hardsigmoid_bw": 147, "hardswish": 148, "hardswish_bw": 149, "hardtanh": 150, "hardtanh_bw": 151, "heavisid": 152, "hypot": 153, "hypot_bw": 154, "i0": 155, "i0_bw": 156, "ident": 157, "imag": [158, 381, 389], "imag_bw": 159, "indexed_fil": 160, "is_imag": 161, "is_real": 162, "isclos": 163, "isfinit": 164, "isinf": 165, "isnan": 166, "isneginf": 167, "isposinf": 168, "kv_cach": [169, 170], "fill_cache_for_user_": 169, "update_cache_for_token_": 170, "l1_loss": 171, "layer_norm": 172, "input_tensor": [172, 263, 289, 356], "residual_input_tensor": [172, 289], "weight": [172, 289, 389, 390, 391], "gamma": [172, 289], "bia": [172, 289], "beta": [172, 289], "stat": 172, "post_all_gath": 172, "onli": [172, 381], "output_tensor": [172, 263, 289], "lcm": 173, "ldexp": 174, "ldexp_bw": 175, "le": 176, "le_": 177, "leaky_relu": 178, "leaky_relu_bw": 179, "lerp": 180, "lerp_bw": 181, "lez": 182, "lgamma": 183, "lgamma_bw": 184, "linear": 185, "load_tensor": 186, "log": [187, 393], "log10": 188, "log10_bw": 189, "log1p": 190, "log1p_bw": 191, "log2": 192, "log2_bw": 193, "log_bw": 194, "log_sigmoid": 195, "log_sigmoid_bw": 196, "logaddexp": 197, "logaddexp2": 198, "logaddexp2_bw": 199, "logaddexp_bw": 200, "logical_and": 201, "logical_and_": 202, "logical_not": 203, "logical_not_": 204, "logical_or": 205, "logical_or_": 206, "logical_xor": 207, "logical_xor_": 208, "logit": 209, "logit_bw": 210, "logiteps_bw": 211, "lt": 212, "lt_": 213, "ltz": 214, "mac": 215, "manage_devic": 216, "matmul": 217, "max": 218, "max_bw": 219, "max_pool2d": 220, "maximum": 221, "mean": 222, "min": 223, "min_bw": 224, "minimum": 225, "mish": 226, "model_preprocess": [227, 228], "preprocess_model": 227, "preprocess_model_paramet": 228, "moreh_sum": 229, "mse_loss": 230, "mul_bw": 231, "multigammaln": 232, "multigammaln_bw": 233, "multipli": 234, "ne": 235, "ne_": 236, "neg": 237, "neg_bw": 238, "nextaft": 239, "nez": 240, "nonzero": 241, "normalize_glob": 242, "normalize_hw": 243, "ones": 244, "ones_lik": 245, "open_devic": 246, "outer": 247, "pad": 248, "pad_to_tile_shap": 249, "permut": 250, "polar": 251, "polar_bw": 252, "polygamma": 253, "polygamma_bw": 254, "polyv": 255, "pow": 256, "pow_bw": 257, "prelu": 258, "prepare_conv_bia": 259, "prepare_conv_transpose2d_bia": 260, "prepare_conv_transpose2d_weight": 261, "prepare_conv_weight": 262, "prod": 263, "prod_bw": 264, "rad2deg": 265, "rad2deg_bw": 266, "rdiv": 267, "rdiv_bw": 268, "real": 269, "real_bw": 270, "realloc": 271, "reciproc": 272, "reciprocal_bw": 273, "register_post_operation_hook": 274, "register_pre_operation_hook": 275, "reglu": 276, "relu": 277, "relu6": 278, "relu6_bw": 279, "relu_bw": 280, "relu_max": 281, "relu_min": 282, "remaind": 283, "remainder_bw": 284, "repeat": 285, "repeat_bw": 286, "repeat_interleav": 287, "reshap": 288, "rms_norm": 289, "round": 290, "round_bw": 291, "rpow": 292, "rpow_bw": 293, "rsqrt": 294, "rsqrt_bw": 295, "rsub": 296, "rsub_bw": 297, "scale_causal_mask_hw_dims_softmax_in_plac": 298, "shard": [298, 384], "mask": [298, 299, 300], "h": 298, "w": 298, "scale_mask_softmax": 299, "scale_mask_softmax_in_plac": 300, "scatter": 301, "selu": 302, "selu_bw": 303, "set_printopt": 304, "sigmoid": 305, "sigmoid_accur": 306, "sigmoid_bw": 307, "sign": 308, "sign_bw": 309, "signbit": 310, "silu": 311, "silu_bw": 312, "sin": 313, "sin_bw": 314, "sinh": 315, "sinh_bw": 316, "slice": [317, 393], "softmax": 318, "softmax_in_plac": 319, "softplu": 320, "softplus_bw": 321, "softshrink": 322, "softshrink_bw": 323, "softsign": 324, "softsign_bw": 325, "sort": 326, "sqrt": 327, "sqrt_bw": 328, "squar": 329, "square_bw": 330, "squared_differ": 331, "squared_difference_bw": 332, "std": 333, "sub_bw": 334, "subalpha": 335, "subalpha_bw": 336, "subtract": 337, "sum": 338, "swiglu": 339, "swish": 340, "synchronize_devic": 341, "tan": 342, "tan_bw": 343, "tanh": 344, "tanh_bw": 345, "tanhshrink": 346, "tanhshrink_bw": 347, "threshold": 348, "threshold_bw": 349, "tiliz": 350, "tilize_with_val_pad": 351, "to_devic": 352, "to_layout": 353, "to_memory_config": 354, "to_torch": 355, "topk": 356, "index_tensor": 356, "attention_softmax": 357, "attention_softmax_": 358, "concatenate_head": 359, "scaled_dot_product_attent": 360, "scaled_dot_product_attention_decod": 361, "split_query_key_value_and_split_head": 362, "tril": 363, "triu": 364, "trunc": 365, "trunc_bw": 366, "unary_chain": 367, "until": 368, "untilize_with_unpad": 369, "upsampl": 370, "var": 371, "where": [372, 380], "where_bw": 373, "xlogi": 374, "xlogy_bw": 375, "zero": 376, "zeros_lik": 377, "convert": [378, 386, 388, 390, 393], "pytorch": 378, "rewrit": 378, "switch": 378, "3": [378, 381, 393], "optim": [378, 390], "more": [378, 388], "build": [379, 380, 381], "uplift": 379, "demo": [379, 380], "get": 380, "start": 380, "instal": [380, 381], "explor": 380, "our": 380, "To": [380, 381], "go": 380, "from": [380, 393], "here": 380, "prerequisit": [381, 392], "set": [381, 387], "up": 381, "hardwar": 381, "softwar": 381, "depend": 381, "script": 381, "recommend": 381, "manual": [381, 387], "metalium": 381, "There": 381, "four": 381, "latest": 381, "wheel": 381, "For": 381, "user": 381, "environ": 381, "docker": 381, "releas": 381, "sourc": 381, "repositori": 381, "librari": [381, 386, 387, 388, 389], "virtual": 381, "setup": [381, 391], "anaconda": 381, "packag": 381, "you": 381, "all": [381, 393], "verifi": 381, "your": 381, "try": 381, "execut": 381, "interest": 381, "multi": [381, 390], "card": 381, "configur": [381, 390], "topologi": 381, "machin": 381, "requir": [381, 384], "overview": 381, "why": 381, "It": 381, "matter": 381, "vm": 381, "onboard": 382, "profil": [383, 392], "perf": 383, "header": 383, "profile_thi": 383, "descript": 383, "us": [383, 390, 393], "perform": [383, 386, 392], "visual": [383, 392, 393], "shape": 384, "layout": 384, "type": 384, "width": 384, "limit": 384, "bfloat8_b": 384, "storag": 384, "tutori": 385, "import": [386, 387, 388, 389, 391], "necessari": [386, 387, 388, 389], "open": [386, 387, 388, 389, 391], "tenstorr": [386, 387, 388, 389, 391], "addit": 386, "back": [386, 393], "close": [386, 387, 388, 389, 390, 391], "The": [386, 387, 388, 389, 391], "basic": [387, 388, 389, 393], "seed": 387, "reproduc": 387, "creat": [387, 388], "forward": 387, "method": 387, "paramet": [387, 390], "run": [387, 390, 391, 392, 393], "host": 388, "tile": 388, "nativ": 388, "base": 388, "arithmet": 388, "simul": 388, "broadcast": 388, "row": 388, "vector": 388, "expans": 388, "mlp": 389, "infer": [389, 391], "load": [389, 391], "mnist": 389, "test": [389, 391], "pretrain": 389, "accuraci": 389, "track": 389, "loop": 389, "flatten": 389, "head": 390, "attent": 390, "write": 390, "initi": [390, 391], "activ": 390, "torch": [390, 393], "first": 390, "iter": 390, "subsequ": 390, "version": 390, "pre": [390, 393], "process": 390, "check": 390, "match": 390, "origin": 390, "simpl": 391, "cnn": 391, "cifar": 391, "10": [391, 393], "dataset": 391, "defin": 391, "stage": 391, "sampl": 391, "gener": 392, "result": 392, "analysi": 392, "upload": 392, "tab": 392, "buffer": [392, 393], "graph": [392, 393], "recap": 392, "an": 393, "__getitem__": 393, "4": 393, "enabl": 393, "5": 393, "intermedi": 393, "6": 393, "trace": 393, "7": 393, "tt_lib": 393, "8": 393, "9": 393, "chang": 393, "string": 393, "represent": 393, "11": 393, "web": 393, "browser": 393, "12": 393, "regist": 393, "post": 393, "13": 393, "queri": 393, "14": 393, "fall": 393, "15": 393, "captur": 393, "alloc": 393, "etc": 393}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "What is TT-NN?": [[3, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[4, "adding-new-tt-nn-operation"]], "FAQ": [[4, "faq"]], "What is a TT-NN operation?": [[4, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[4, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[4, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[4, "c-implementation"]], "Step 1: Implement device operation": [[4, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[4, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[4, "python-implementation"]], "Step 1: Add Python binding": [[4, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[4, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[5, "apis"], [384, "apis"]], "Device": [[5, "device"]], "Memory Config": [[5, "memory-config"], [384, "memory-config"]], "Operations": [[5, "operations"]], "Core": [[5, "core"]], "Tensor Creation": [[5, "tensor-creation"], [386, "Tensor-Creation"]], "Matrix Multiplication": [[5, "matrix-multiplication"]], "Pointwise Unary": [[5, "pointwise-unary"]], "Pointwise Binary": [[5, "pointwise-binary"]], "Pointwise Ternary": [[5, "pointwise-ternary"]], "Losses": [[5, "losses"]], "Reduction": [[5, "reduction"]], "Data Movement": [[5, "data-movement"]], "Normalization": [[5, "normalization"]], "Normalization Program Configs": [[5, "normalization-program-configs"]], "Moreh Operations": [[5, "moreh-operations"]], "Transformer": [[5, "transformer"]], "CCL": [[5, "ccl"]], "Embedding": [[5, "embedding"]], "Convolution": [[5, "convolution"]], "Pooling": [[5, "pooling"]], "Vision": [[5, "vision"]], "KV Cache": [[5, "kv-cache"]], "Model Conversion": [[5, "model-conversion"]], "Reports": [[5, "reports"]], "Operation Hooks": [[5, "operation-hooks"]], "ttnn.Conv2dConfig": [[6, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[7, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [31, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [60, null], [62, null], [63, null], [64, null], [65, null], [66, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [105, null], [107, null], [108, null], [110, null], [111, null], [112, null], [113, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [127, null], [128, null], [129, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [219, null], [220, null], [221, null], [224, null], [225, null], [226, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [276, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [288, null], [289, null], [290, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [302, null], [303, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [334, null], [335, null], [336, null], [337, null], [339, null], [340, null], [342, null], [343, null], [344, null], [345, null], [346, null], [347, null], [348, null], [349, null], [353, null], [354, null], [355, null], [356, null], [363, null], [364, null], [365, null], [366, null], [367, null], [372, null], [373, null], [374, null], [375, null], [376, null], [377, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.SoftmaxDefaultProgramConfig": [[10, "ttnn-softmaxdefaultprogramconfig"]], "ttnn.SoftmaxProgramConfig": [[11, "ttnn-softmaxprogramconfig"]], "ttnn.SoftmaxShardedMultiCoreProgramConfig": [[12, "ttnn-softmaxshardedmulticoreprogramconfig"]], "ttnn.abs": [[13, "ttnn-abs"]], "ttnn.abs_bw": [[14, "ttnn-abs-bw"]], "ttnn.acos": [[15, "ttnn-acos"]], "ttnn.acos_bw": [[16, "ttnn-acos-bw"]], "ttnn.acosh": [[17, "ttnn-acosh"]], "ttnn.acosh_bw": [[18, "ttnn-acosh-bw"]], "ttnn.add": [[19, "ttnn-add"]], "ttnn.add_bw": [[20, "ttnn-add-bw"]], "ttnn.addalpha": [[21, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[22, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[23, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[24, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[25, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[26, "ttnn-addcmul-bw"]], "ttnn.alt_complex_rotate90": [[27, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[28, "ttnn-angle"]], "ttnn.angle_bw": [[29, "ttnn-angle-bw"]], "ttnn.arange": [[30, "ttnn-arange"]], "ttnn.argmax": [[31, "ttnn-argmax"]], "Input Tensor": [[31, "id2"], [218, "id2"], [222, "id2"], [223, "id2"], [299, "id2"], [300, "id2"], [333, "id2"], [338, "id2"], [371, "id2"]], "Output Tensor": [[31, "id3"]], "ttnn.as_tensor": [[32, "ttnn-as-tensor"]], "Examples": [[32, null], [304, null]], "ttnn.asin": [[33, "ttnn-asin"]], "ttnn.asin_bw": [[34, "ttnn-asin-bw"]], "ttnn.asinh": [[35, "ttnn-asinh"]], "ttnn.asinh_bw": [[36, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[37, "ttnn-assign-bw"]], "ttnn.atan": [[38, "ttnn-atan"]], "ttnn.atan2": [[39, "ttnn-atan2"]], "ttnn.atan2_bw": [[40, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[41, "ttnn-atan-bw"]], "ttnn.atanh": [[42, "ttnn-atanh"]], "ttnn.atanh_bw": [[43, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[44, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[45, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[46, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[47, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[48, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[49, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[50, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[51, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[52, "ttnn-cbrt"]], "ttnn.ceil": [[53, "ttnn-ceil"]], "ttnn.ceil_bw": [[54, "ttnn-ceil-bw"]], "ttnn.celu": [[55, "ttnn-celu"]], "ttnn.celu_bw": [[56, "ttnn-celu-bw"]], "ttnn.clamp": [[57, "ttnn-clamp"]], "ttnn.clamp_bw": [[58, "ttnn-clamp-bw"]], "ttnn.clip": [[59, "ttnn-clip"]], "ttnn.clip_bw": [[60, "ttnn-clip-bw"]], "ttnn.clone": [[61, "ttnn-clone"]], "ttnn.close_device": [[62, "ttnn-close-device"]], "ttnn.concat": [[63, "ttnn-concat"]], "ttnn.concat_bw": [[64, "ttnn-concat-bw"]], "ttnn.conj": [[65, "ttnn-conj"]], "ttnn.conj_bw": [[66, "ttnn-conj-bw"]], "ttnn.conv1d": [[67, "ttnn-conv1d"]], "ttnn.conv2d": [[68, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[69, "ttnn-conv-transpose2d"]], "ttnn.cos": [[70, "ttnn-cos"]], "ttnn.cos_bw": [[71, "ttnn-cos-bw"]], "ttnn.cosh": [[72, "ttnn-cosh"]], "ttnn.cosh_bw": [[73, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[74, "ttnn-create-sharded-memory-config"]], "ttnn.cumprod": [[75, "ttnn-cumprod"]], "ttnn.cumsum": [[76, "ttnn-cumsum"]], "ttnn.deallocate": [[77, "ttnn-deallocate"]], "ttnn.deg2rad": [[78, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[79, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[80, "ttnn-digamma"]], "ttnn.digamma_bw": [[81, "ttnn-digamma-bw"]], "ttnn.div": [[82, "ttnn-div"]], "ttnn.div_bw": [[83, "ttnn-div-bw"]], "ttnn.div_no_nan": [[84, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[85, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[86, "ttnn-dump-tensor"]], "ttnn.elu": [[87, "ttnn-elu"]], "ttnn.elu_bw": [[88, "ttnn-elu-bw"]], "ttnn.embedding": [[89, "ttnn-embedding"]], "ttnn.embedding_bw": [[90, "ttnn-embedding-bw"]], "ttnn.empty": [[91, "ttnn-empty"]], "ttnn.empty_like": [[92, "ttnn-empty-like"]], "ttnn.eq": [[93, "ttnn-eq"]], "ttnn.eq_": [[94, "ttnn-eq"]], "ttnn.eqz": [[95, "ttnn-eqz"]], "ttnn.erf": [[96, "ttnn-erf"]], "ttnn.erf_bw": [[97, "ttnn-erf-bw"]], "ttnn.erfc": [[98, "ttnn-erfc"]], "ttnn.erfc_bw": [[99, "ttnn-erfc-bw"]], "ttnn.erfinv": [[100, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[101, "ttnn-erfinv-bw"]], "ttnn.exp": [[102, "ttnn-exp"]], "ttnn.exp2": [[103, "ttnn-exp2"]], "ttnn.exp2_bw": [[104, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[105, "ttnn-exp-bw"]], "ttnn.experimental.conv3d": [[106, "ttnn-experimental-conv3d"]], "ttnn.experimental.dropout": [[107, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[108, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[109, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[110, "ttnn-expm1"]], "ttnn.expm1_bw": [[111, "ttnn-expm1-bw"]], "ttnn.fill": [[112, "ttnn-fill"]], "ttnn.fill_bw": [[113, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[114, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[115, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[116, "ttnn-fill-zero-bw"]], "ttnn.floor": [[117, "ttnn-floor"]], "ttnn.floor_bw": [[118, "ttnn-floor-bw"]], "ttnn.floor_div": [[119, "ttnn-floor-div"]], "ttnn.fmod": [[120, "ttnn-fmod"]], "ttnn.fmod_bw": [[121, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[122, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[123, "ttnn-format-output-tensor"]], "ttnn.frac": [[124, "ttnn-frac"]], "ttnn.frac_bw": [[125, "ttnn-frac-bw"]], "ttnn.from_device": [[126, "ttnn-from-device"]], "ttnn.from_torch": [[127, "ttnn-from-torch"]], "ttnn.full": [[128, "ttnn-full"]], "ttnn.full_like": [[129, "ttnn-full-like"]], "ttnn.gather": [[130, "ttnn-gather"]], "ttnn.gcd": [[131, "ttnn-gcd"]], "ttnn.ge": [[132, "ttnn-ge"]], "ttnn.ge_": [[133, "ttnn-ge"]], "ttnn.geglu": [[134, "ttnn-geglu"]], "ttnn.gelu": [[135, "ttnn-gelu"]], "ttnn.gelu_bw": [[136, "ttnn-gelu-bw"]], "ttnn.gez": [[137, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[138, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[139, "ttnn-glu"]], "ttnn.group_norm": [[140, "ttnn-group-norm"]], "ttnn.gt": [[141, "ttnn-gt"]], "ttnn.gt_": [[142, "ttnn-gt"]], "ttnn.gtz": [[143, "ttnn-gtz"]], "ttnn.hardshrink": [[144, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[145, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[146, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[147, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[148, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[149, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[150, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[151, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[152, "ttnn-heaviside"]], "ttnn.hypot": [[153, "ttnn-hypot"]], "ttnn.hypot_bw": [[154, "ttnn-hypot-bw"]], "ttnn.i0": [[155, "ttnn-i0"]], "ttnn.i0_bw": [[156, "ttnn-i0-bw"]], "ttnn.identity": [[157, "ttnn-identity"]], "ttnn.imag": [[158, "ttnn-imag"]], "ttnn.imag_bw": [[159, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[160, "ttnn-indexed-fill"]], "ttnn.is_imag": [[161, "ttnn-is-imag"]], "ttnn.is_real": [[162, "ttnn-is-real"]], "ttnn.isclose": [[163, "ttnn-isclose"]], "ttnn.isfinite": [[164, "ttnn-isfinite"]], "ttnn.isinf": [[165, "ttnn-isinf"]], "ttnn.isnan": [[166, "ttnn-isnan"]], "ttnn.isneginf": [[167, "ttnn-isneginf"]], "ttnn.isposinf": [[168, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[169, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[170, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[171, "ttnn-l1-loss"]], "ttnn.layer_norm": [[172, "ttnn-layer-norm"]], "input_tensor": [[172, "id2"], [263, "id2"], [289, "id2"], [356, "id2"]], "residual_input_tensor": [[172, "id3"], [289, "id3"]], "weight (gamma) and bias (beta)": [[172, "id4"], [289, "id4"]], "stats (POST_ALL_GATHER only)": [[172, "id5"]], "output_tensor": [[172, "id6"], [263, "id3"], [289, "id5"]], "ttnn.lcm": [[173, "ttnn-lcm"]], "ttnn.ldexp": [[174, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[175, "ttnn-ldexp-bw"]], "ttnn.le": [[176, "ttnn-le"]], "ttnn.le_": [[177, "ttnn-le"]], "ttnn.leaky_relu": [[178, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[179, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[180, "ttnn-lerp"]], "ttnn.lerp_bw": [[181, "ttnn-lerp-bw"]], "ttnn.lez": [[182, "ttnn-lez"]], "ttnn.lgamma": [[183, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[184, "ttnn-lgamma-bw"]], "ttnn.linear": [[185, "ttnn-linear"]], "ttnn.load_tensor": [[186, "ttnn-load-tensor"]], "ttnn.log": [[187, "ttnn-log"]], "ttnn.log10": [[188, "ttnn-log10"]], "ttnn.log10_bw": [[189, "ttnn-log10-bw"]], "ttnn.log1p": [[190, "ttnn-log1p"]], "ttnn.log1p_bw": [[191, "ttnn-log1p-bw"]], "ttnn.log2": [[192, "ttnn-log2"]], "ttnn.log2_bw": [[193, "ttnn-log2-bw"]], "ttnn.log_bw": [[194, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[195, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[196, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[197, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[198, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[199, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[200, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[201, "ttnn-logical-and"]], "ttnn.logical_and_": [[202, "ttnn-logical-and"]], "ttnn.logical_not": [[203, "ttnn-logical-not"]], "ttnn.logical_not_": [[204, "ttnn-logical-not"]], "ttnn.logical_or": [[205, "ttnn-logical-or"]], "ttnn.logical_or_": [[206, "ttnn-logical-or"]], "ttnn.logical_xor": [[207, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[208, "ttnn-logical-xor"]], "ttnn.logit": [[209, "ttnn-logit"]], "ttnn.logit_bw": [[210, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[211, "ttnn-logiteps-bw"]], "ttnn.lt": [[212, "ttnn-lt"]], "ttnn.lt_": [[213, "ttnn-lt"]], "ttnn.ltz": [[214, "ttnn-ltz"]], "ttnn.mac": [[215, "ttnn-mac"]], "ttnn.manage_device": [[216, "ttnn-manage-device"]], "ttnn.matmul": [[217, "ttnn-matmul"]], "ttnn.max": [[218, "ttnn-max"]], "ttnn.max_bw": [[219, "ttnn-max-bw"]], "ttnn.max_pool2d": [[220, "ttnn-max-pool2d"]], "ttnn.maximum": [[221, "ttnn-maximum"]], "ttnn.mean": [[222, "ttnn-mean"]], "ttnn.min": [[223, "ttnn-min"]], "ttnn.min_bw": [[224, "ttnn-min-bw"]], "ttnn.minimum": [[225, "ttnn-minimum"]], "ttnn.mish": [[226, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[227, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[228, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[229, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[230, "ttnn-mse-loss"]], "ttnn.mul_bw": [[231, "ttnn-mul-bw"]], "ttnn.multigammaln": [[232, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[233, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[234, "ttnn-multiply"]], "ttnn.ne": [[235, "ttnn-ne"]], "ttnn.ne_": [[236, "ttnn-ne"]], "ttnn.neg": [[237, "ttnn-neg"]], "ttnn.neg_bw": [[238, "ttnn-neg-bw"]], "ttnn.nextafter": [[239, "ttnn-nextafter"]], "ttnn.nez": [[240, "ttnn-nez"]], "ttnn.nonzero": [[241, "ttnn-nonzero"]], "ttnn.normalize_global": [[242, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[243, "ttnn-normalize-hw"]], "ttnn.ones": [[244, "ttnn-ones"]], "ttnn.ones_like": [[245, "ttnn-ones-like"]], "ttnn.open_device": [[246, "ttnn-open-device"]], "ttnn.outer": [[247, "ttnn-outer"]], "ttnn.pad": [[248, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[249, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[250, "ttnn-permute"]], "ttnn.polar": [[251, "ttnn-polar"]], "ttnn.polar_bw": [[252, "ttnn-polar-bw"]], "ttnn.polygamma": [[253, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[254, "ttnn-polygamma-bw"]], "ttnn.polyval": [[255, "ttnn-polyval"]], "ttnn.pow": [[256, "ttnn-pow"]], "ttnn.pow_bw": [[257, "ttnn-pow-bw"]], "ttnn.prelu": [[258, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[259, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[260, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[261, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[262, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[263, "ttnn-prod"]], "ttnn.prod_bw": [[264, "ttnn-prod-bw"]], "ttnn.rad2deg": [[265, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[266, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[267, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[268, "ttnn-rdiv-bw"]], "ttnn.real": [[269, "ttnn-real"]], "ttnn.real_bw": [[270, "ttnn-real-bw"]], "ttnn.reallocate": [[271, "ttnn-reallocate"]], "ttnn.reciprocal": [[272, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[273, "ttnn-reciprocal-bw"]], "ttnn.register_post_operation_hook": [[274, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[275, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[276, "ttnn-reglu"]], "ttnn.relu": [[277, "ttnn-relu"]], "ttnn.relu6": [[278, "ttnn-relu6"]], "ttnn.relu6_bw": [[279, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[280, "ttnn-relu-bw"]], "ttnn.relu_max": [[281, "ttnn-relu-max"]], "ttnn.relu_min": [[282, "ttnn-relu-min"]], "ttnn.remainder": [[283, "ttnn-remainder"]], "ttnn.remainder_bw": [[284, "ttnn-remainder-bw"]], "ttnn.repeat": [[285, "ttnn-repeat"]], "ttnn.repeat_bw": [[286, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[287, "ttnn-repeat-interleave"]], "ttnn.reshape": [[288, "ttnn-reshape"]], "ttnn.rms_norm": [[289, "ttnn-rms-norm"]], "ttnn.round": [[290, "ttnn-round"]], "ttnn.round_bw": [[291, "ttnn-round-bw"]], "ttnn.rpow": [[292, "ttnn-rpow"]], "ttnn.rpow_bw": [[293, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[294, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[295, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[296, "ttnn-rsub"]], "ttnn.rsub_bw": [[297, "ttnn-rsub-bw"]], "ttnn.scale_causal_mask_hw_dims_softmax_in_place": [[298, "ttnn-scale-causal-mask-hw-dims-softmax-in-place"]], "Input Tensor (Sharded)": [[298, "id2"]], "Mask Tensor [1, 1, H, W]": [[298, "id3"]], "ttnn.scale_mask_softmax": [[299, "ttnn-scale-mask-softmax"]], "Mask Tensor (optional)": [[299, "id3"], [300, "id3"]], "ttnn.scale_mask_softmax_in_place": [[300, "ttnn-scale-mask-softmax-in-place"]], "ttnn.scatter": [[301, "ttnn-scatter"]], "ttnn.selu": [[302, "ttnn-selu"]], "ttnn.selu_bw": [[303, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[304, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[305, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[306, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[307, "ttnn-sigmoid-bw"]], "ttnn.sign": [[308, "ttnn-sign"]], "ttnn.sign_bw": [[309, "ttnn-sign-bw"]], "ttnn.signbit": [[310, "ttnn-signbit"]], "ttnn.silu": [[311, "ttnn-silu"]], "ttnn.silu_bw": [[312, "ttnn-silu-bw"]], "ttnn.sin": [[313, "ttnn-sin"]], "ttnn.sin_bw": [[314, "ttnn-sin-bw"]], "ttnn.sinh": [[315, "ttnn-sinh"]], "ttnn.sinh_bw": [[316, "ttnn-sinh-bw"]], "ttnn.slice": [[317, "ttnn-slice"]], "ttnn.softmax": [[318, "ttnn-softmax"]], "ttnn.softmax_in_place": [[319, "ttnn-softmax-in-place"]], "ttnn.softplus": [[320, "ttnn-softplus"]], "ttnn.softplus_bw": [[321, "ttnn-softplus-bw"]], "ttnn.softshrink": [[322, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[323, "ttnn-softshrink-bw"]], "ttnn.softsign": [[324, "ttnn-softsign"]], "ttnn.softsign_bw": [[325, "ttnn-softsign-bw"]], "ttnn.sort": [[326, "ttnn-sort"]], "ttnn.sqrt": [[327, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[328, "ttnn-sqrt-bw"]], "ttnn.square": [[329, "ttnn-square"]], "ttnn.square_bw": [[330, "ttnn-square-bw"]], "ttnn.squared_difference": [[331, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[332, "ttnn-squared-difference-bw"]], "ttnn.std": [[333, "ttnn-std"]], "ttnn.sub_bw": [[334, "ttnn-sub-bw"]], "ttnn.subalpha": [[335, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[336, "ttnn-subalpha-bw"]], "ttnn.subtract": [[337, "ttnn-subtract"]], "ttnn.sum": [[338, "ttnn-sum"]], "ttnn.swiglu": [[339, "ttnn-swiglu"]], "ttnn.swish": [[340, "ttnn-swish"]], "ttnn.synchronize_device": [[341, "ttnn-synchronize-device"]], "ttnn.tan": [[342, "ttnn-tan"]], "ttnn.tan_bw": [[343, "ttnn-tan-bw"]], "ttnn.tanh": [[344, "ttnn-tanh"]], "ttnn.tanh_bw": [[345, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[346, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[347, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[348, "ttnn-threshold"]], "ttnn.threshold_bw": [[349, "ttnn-threshold-bw"]], "ttnn.tilize": [[350, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[351, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[352, "ttnn-to-device"]], "ttnn.to_layout": [[353, "ttnn-to-layout"]], "ttnn.to_memory_config": [[354, "ttnn-to-memory-config"]], "ttnn.to_torch": [[355, "ttnn-to-torch"]], "ttnn.topk": [[356, "ttnn-topk"]], "index_tensor": [[356, "id3"]], "ttnn.transformer.attention_softmax": [[357, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[358, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[359, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[360, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[361, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[362, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[363, "ttnn-tril"]], "ttnn.triu": [[364, "ttnn-triu"]], "ttnn.trunc": [[365, "ttnn-trunc"]], "ttnn.trunc_bw": [[366, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[367, "ttnn-unary-chain"]], "ttnn.untilize": [[368, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[369, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[370, "ttnn-upsample"]], "ttnn.var": [[371, "ttnn-var"]], "ttnn.where": [[372, "ttnn-where"]], "ttnn.where_bw": [[373, "ttnn-where-bw"]], "ttnn.xlogy": [[374, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[375, "ttnn-xlogy-bw"]], "ttnn.zeros": [[376, "ttnn-zeros"]], "ttnn.zeros_like": [[377, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[378, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[378, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[378, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[378, "step-3-optimizing-the-model"]], "More examples": [[378, "more-examples"]], "Building and Uplifting Demos": [[379, "building-and-uplifting-demos"]], "Getting Started": [[380, "getting-started"]], "1. Install and Build": [[380, "install-and-build"]], "2. Explore Our Model Demos": [[380, "explore-our-model-demos"]], "Where To Go From Here": [[380, "where-to-go-from-here"]], "Install": [[381, "install"]], "Prerequisites:": [[381, "prerequisites"]], "1: Set Up the Hardware": [[381, "set-up-the-hardware"]], "2: Install Software Dependencies": [[381, "install-software-dependencies"]], "Option 1: TT-Installer Script (recommended)": [[381, "option-1-tt-installer-script-recommended"]], "Option 2: Manual Installation": [[381, "option-2-manual-installation"]], "TT-NN / TT-Metalium Installation": [[381, "tt-nn-tt-metalium-installation"]], "There are four options for installing TT-Metalium:": [[381, "there-are-four-options-for-installing-tt-metalium"]], "Binaries": [[381, "binaries"]], "Step 1. Install the Latest Wheel:": [[381, "step-1-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[381, "step-2-for-models-users-only-set-up-environment-for-models"]], "Docker Release Image": [[381, "docker-release-image"]], "Source": [[381, "source"]], "Step 1. Clone the Repository:": [[381, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[381, "step-2-build-the-library"]], "Step 3. Virtual Environment Setup": [[381, "step-3-virtual-environment-setup"]], "Anaconda": [[381, "anaconda"]], "Step 1. Install the Latest Package:": [[381, "step-1-install-the-latest-package"]], "You are All Set!": [[381, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[381, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[381, "interested-in-contributing"]], "Multi-Card Configuration (TT-Topology)": [[381, "multi-card-configuration-tt-topology"]], "Virtual Machine Requirements": [[381, "virtual-machine-requirements"]], "Overview": [[381, "overview"]], "Why It Matters": [[381, "why-it-matters"]], "Requirements for VMs": [[381, "requirements-for-vms"]], "Onboarding New Functionality": [[382, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[383, "profiling-tt-nn-operations"]], "Perf Report Headers": [[383, "perf-report-headers"]], "profile_this description": [[383, "profile-this-description"]], "Using the Performance Report with TT-NN Visualizer": [[383, "using-the-performance-report-with-tt-nn-visualizer"]], "Tensor": [[384, "tensor"]], "Shape": [[384, "shape"]], "Layout": [[384, "layout"]], "Data Type": [[384, "data-type"]], "Required Width Multiples for Data Types": [[384, "id5"]], "Limitation of BFLOAT8_B": [[384, "limitation-of-bfloat8-b"]], "Storage": [[384, "storage"]], "Tensor Sharding": [[384, "tensor-sharding"]], "Tutorials": [[385, "tutorials"]], "Add Tensors": [[386, "Add-Tensors"]], "Import the necessary libraries": [[386, "Import-the-necessary-libraries"], [387, "Import-the-necessary-libraries"], [388, "Import-the-necessary-libraries"], [389, "Import-the-necessary-libraries"]], "Open Tenstorrent device": [[386, "Open-Tenstorrent-device"], [387, "Open-Tenstorrent-device"], [388, "Open-Tenstorrent-device"], [389, "Open-Tenstorrent-device"], [391, "Open-Tenstorrent-device"]], "Perform the addition operation and convert back": [[386, "Perform-the-addition-operation-and-convert-back"]], "Close The Device": [[386, "Close-The-Device"], [387, "Close-The-Device"], [388, "Close-The-Device"], [389, "Close-The-Device"], [391, "Close-The-Device"]], "Full example and output": [[386, "Full-example-and-output"], [387, "Full-example-and-output"], [388, "Full-example-and-output"], [389, "Full-example-and-output"], [390, "Full-example-and-output"], [391, "Full-example-and-output"]], "Basic Convolution": [[387, "Basic-Convolution"]], "Set manual seed for reproducibility": [[387, "Set-manual-seed-for-reproducibility"]], "Create forward method": [[387, "Create-forward-method"]], "Set input and convolution parameters": [[387, "Set-input-and-convolution-parameters"]], "Create tensors": [[387, "Create-tensors"]], "Run convolution operation": [[387, "Run-convolution-operation"]], "More Basic Tensor Operations": [[388, "More-Basic-Tensor-Operations"]], "Host Tensor Creation": [[388, "Host-Tensor-Creation"]], "Convert Host Tensors to TT-NN Tiled Tensors or Create Natively on Device": [[388, "Convert-Host-Tensors-to-TT-NN-Tiled-Tensors-or-Create-Natively-on-Device"]], "Tile-Based Arithmetic Operations": [[388, "Tile-Based-Arithmetic-Operations"]], "Simulated Broadcasting (Row Vector Expansion)": [[388, "Simulated-Broadcasting-(Row-Vector-Expansion)"]], "MLP Inference": [[389, "MLP-Inference"]], "Load MNIST Test Data": [[389, "Load-MNIST-Test-Data"]], "Load Pretrained MLP Weights": [[389, "Load-Pretrained-MLP-Weights"]], "Basic accuracy tracking, inference, loop, and image flattening": [[389, "Basic-accuracy-tracking,-inference,-loop,-and-image-flattening"]], "Multi-Head Attention": [[390, "Multi-Head-Attention"]], "Write Multi-Head Attention using ttnn": [[390, "Write-Multi-Head-Attention-using-ttnn"]], "Configuration": [[390, "Configuration"]], "Initialize activations and weights using torch": [[390, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[390, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[390, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[390, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[390, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[390, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[390, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[390, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[390, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Close the device": [[390, "Close-the-device"]], "Running a Simple CNN Inference on CIFAR-10": [[391, "Running-a-Simple-CNN-Inference-on-CIFAR-10"]], "Setup and Imports": [[391, "Setup-and-Imports"]], "Load CIFAR-10 Dataset": [[391, "Load-CIFAR-10-Dataset"]], "Load or Initialize Weights": [[391, "Load-or-Initialize-Weights"]], "Define Convolution + Pooling Stage": [[391, "Define-Convolution-+-Pooling-Stage"]], "Run Inference on Test Samples": [[391, "Run-Inference-on-Test-Samples"]], "TT-NN Visualizer": [[392, "tt-nn-visualizer"]], "Prerequisites": [[392, "prerequisites"]], "Running TTNN Visualizer": [[392, "running-ttnn-visualizer"]], "Model Profiling": [[392, "model-profiling"]], "Generating the Memory Report": [[392, "generating-the-memory-report"]], "Generating the Performance Report": [[392, "generating-the-performance-report"]], "Result Analysis": [[392, "result-analysis"]], "Uploading Reports": [[392, "uploading-reports"]], "Operations Tab": [[392, "operations-tab"]], "Tensors Tab": [[392, "tensors-tab"]], "Buffers Tab": [[392, "buffers-tab"]], "Graph Tab": [[392, "graph-tab"]], "Performance Tab": [[392, "performance-tab"]], "Recap": [[392, "recap"]], "Using TT-NN": [[393, "using-tt-nn"]], "Basic Examples": [[393, "basic-examples"]], "1. Converting from and to torch tensor": [[393, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[393, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[393, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[393, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[393, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[393, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[393, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[393, "enabling-logging"]], "9. Supported Python Operators": [[393, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[393, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[393, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[393, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[393, "query-all-operations"]], "14. Falling back to torch": [[393, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[393, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[6, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.activation"]], "core_grid (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.deallocate_activation"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "full_inner_dim (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.full_inner_dim"]], "in_place (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.override_sharding_config"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[6, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[7, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[7, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "softmaxdefaultprogramconfig (class in ttnn)": [[10, "ttnn.SoftmaxDefaultProgramConfig"]], "softmaxprogramconfig (class in ttnn)": [[11, "ttnn.SoftmaxProgramConfig"]], "softmaxshardedmulticoreprogramconfig (class in ttnn)": [[12, "ttnn.SoftmaxShardedMultiCoreProgramConfig"]], "block_w (ttnn.softmaxshardedmulticoreprogramconfig property)": [[12, "ttnn.SoftmaxShardedMultiCoreProgramConfig.block_w"]], "abs (in module ttnn)": [[13, "ttnn.abs"]], "abs_bw (in module ttnn)": [[14, "ttnn.abs_bw"]], "acos (in module ttnn)": [[15, "ttnn.acos"]], "acos_bw (in module ttnn)": [[16, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[17, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[18, "ttnn.acosh_bw"]], "add (in module ttnn)": [[19, "ttnn.add"]], "add_bw (in module ttnn)": [[20, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[21, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[22, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[23, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[24, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[25, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[26, "ttnn.addcmul_bw"]], "alt_complex_rotate90 (in module ttnn)": [[27, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[28, "ttnn.angle"]], "angle_bw (in module ttnn)": [[29, "ttnn.angle_bw"]], "arange (in module ttnn)": [[30, "ttnn.arange"]], "argmax (in module ttnn)": [[31, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[32, "ttnn.as_tensor"]], "asin (in module ttnn)": [[33, "ttnn.asin"]], "asin_bw (in module ttnn)": [[34, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[35, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[36, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[37, "ttnn.assign_bw"]], "atan (in module ttnn)": [[38, "ttnn.atan"]], "atan2 (in module ttnn)": [[39, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[40, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[41, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[42, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[43, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[44, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[45, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[46, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[47, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[48, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[49, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[50, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[51, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[52, "ttnn.cbrt"]], "ceil (in module ttnn)": [[53, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[54, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[55, "ttnn.celu"]], "celu_bw (in module ttnn)": [[56, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[57, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[58, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[59, "ttnn.clip"]], "clip_bw (in module ttnn)": [[60, "ttnn.clip_bw"]], "clone (in module ttnn)": [[61, "ttnn.clone"]], "close_device() (in module ttnn)": [[62, "ttnn.close_device"]], "concat (in module ttnn)": [[63, "ttnn.concat"]], "concat_bw (in module ttnn)": [[64, "ttnn.concat_bw"]], "conj (in module ttnn)": [[65, "ttnn.conj"]], "conj_bw (in module ttnn)": [[66, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[67, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[68, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[69, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[70, "ttnn.cos"]], "cos_bw (in module ttnn)": [[71, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[72, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[73, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[74, "ttnn.create_sharded_memory_config"]], "cumprod (in module ttnn)": [[75, "ttnn.cumprod"]], "cumsum (in module ttnn)": [[76, "ttnn.cumsum"]], "deallocate (in module ttnn)": [[77, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[78, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[79, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[80, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[81, "ttnn.digamma_bw"]], "div (in module ttnn)": [[82, "ttnn.div"]], "div_bw (in module ttnn)": [[83, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[84, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[85, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[86, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[87, "ttnn.elu"]], "elu_bw (in module ttnn)": [[88, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[89, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[90, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[91, "ttnn.empty"]], "empty_like (in module ttnn)": [[92, "ttnn.empty_like"]], "eq (in module ttnn)": [[93, "ttnn.eq"]], "eq_ (in module ttnn)": [[94, "ttnn.eq_"]], "eqz (in module ttnn)": [[95, "ttnn.eqz"]], "erf (in module ttnn)": [[96, "ttnn.erf"]], "erf_bw (in module ttnn)": [[97, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[98, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[99, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[100, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[101, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[102, "ttnn.exp"]], "exp2 (in module ttnn)": [[103, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[104, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[105, "ttnn.exp_bw"]], "conv3d (in module ttnn.experimental)": [[106, "ttnn.experimental.conv3d"]], "dropout (in module ttnn.experimental)": [[107, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[108, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[109, "ttnn.experimental.rotary_embedding"]], "expm1 (in module ttnn)": [[110, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[111, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[112, "ttnn.fill"]], "fill_bw (in module ttnn)": [[113, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[114, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[115, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[116, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[117, "ttnn.floor"]], "floor_bw (in module ttnn)": [[118, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[119, "ttnn.floor_div"]], "fmod (in module ttnn)": [[120, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[121, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[122, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[123, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[124, "ttnn.frac"]], "frac_bw (in module ttnn)": [[125, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[126, "ttnn.from_device"]], "from_torch (in module ttnn)": [[127, "ttnn.from_torch"]], "full (in module ttnn)": [[128, "ttnn.full"]], "full_like (in module ttnn)": [[129, "ttnn.full_like"]], "gather (in module ttnn)": [[130, "ttnn.gather"]], "gcd (in module ttnn)": [[131, "ttnn.gcd"]], "ge (in module ttnn)": [[132, "ttnn.ge"]], "ge_ (in module ttnn)": [[133, "ttnn.ge_"]], "geglu (in module ttnn)": [[134, "ttnn.geglu"]], "gelu (in module ttnn)": [[135, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[136, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[137, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[138, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[139, "ttnn.glu"]], "group_norm (in module ttnn)": [[140, "ttnn.group_norm"]], "gt (in module ttnn)": [[141, "ttnn.gt"]], "gt_ (in module ttnn)": [[142, "ttnn.gt_"]], "gtz (in module ttnn)": [[143, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[144, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[145, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[146, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[147, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[148, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[149, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[150, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[151, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[152, "ttnn.heaviside"]], "hypot (in module ttnn)": [[153, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[154, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[155, "ttnn.i0"]], "i0_bw (in module ttnn)": [[156, "ttnn.i0_bw"]], "identity (in module ttnn)": [[157, "ttnn.identity"]], "imag (in module ttnn)": [[158, "ttnn.imag"]], "imag_bw (in module ttnn)": [[159, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[160, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[161, "ttnn.is_imag"]], "is_real (in module ttnn)": [[162, "ttnn.is_real"]], "isclose (in module ttnn)": [[163, "ttnn.isclose"]], "isfinite (in module ttnn)": [[164, "ttnn.isfinite"]], "isinf (in module ttnn)": [[165, "ttnn.isinf"]], "isnan (in module ttnn)": [[166, "ttnn.isnan"]], "isneginf (in module ttnn)": [[167, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[168, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[169, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[170, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[171, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[172, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[173, "ttnn.lcm"]], "ldexp (in module ttnn)": [[174, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[175, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[176, "ttnn.le"]], "le_ (in module ttnn)": [[177, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[178, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[179, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[180, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[181, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[182, "ttnn.lez"]], "lgamma (in module ttnn)": [[183, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[184, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[185, "ttnn.linear"]], "load_tensor (in module ttnn)": [[186, "ttnn.load_tensor"]], "log (in module ttnn)": [[187, "ttnn.log"]], "log10 (in module ttnn)": [[188, "ttnn.log10"]], "log10_bw (in module ttnn)": [[189, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[190, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[191, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[192, "ttnn.log2"]], "log2_bw (in module ttnn)": [[193, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[194, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[195, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[196, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[197, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[198, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[199, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[200, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[201, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[202, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[203, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[204, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[205, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[206, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[207, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[208, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[209, "ttnn.logit"]], "logit_bw (in module ttnn)": [[210, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[211, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[212, "ttnn.lt"]], "lt_ (in module ttnn)": [[213, "ttnn.lt_"]], "ltz (in module ttnn)": [[214, "ttnn.ltz"]], "mac (in module ttnn)": [[215, "ttnn.mac"]], "manage_device() (in module ttnn)": [[216, "ttnn.manage_device"]], "matmul (in module ttnn)": [[217, "ttnn.matmul"]], "max (in module ttnn)": [[218, "ttnn.max"]], "max_bw (in module ttnn)": [[219, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[220, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[221, "ttnn.maximum"]], "mean (in module ttnn)": [[222, "ttnn.mean"]], "min (in module ttnn)": [[223, "ttnn.min"]], "min_bw (in module ttnn)": [[224, "ttnn.min_bw"]], "minimum (in module ttnn)": [[225, "ttnn.minimum"]], "mish (in module ttnn)": [[226, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[227, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[228, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[229, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[230, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[231, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[232, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[233, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[234, "ttnn.multiply"]], "ne (in module ttnn)": [[235, "ttnn.ne"]], "ne_ (in module ttnn)": [[236, "ttnn.ne_"]], "neg (in module ttnn)": [[237, "ttnn.neg"]], "neg_bw (in module ttnn)": [[238, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[239, "ttnn.nextafter"]], "nez (in module ttnn)": [[240, "ttnn.nez"]], "nonzero (in module ttnn)": [[241, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[242, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[243, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[244, "ttnn.ones"]], "ones_like (in module ttnn)": [[245, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[246, "ttnn.open_device"]], "outer (in module ttnn)": [[247, "ttnn.outer"]], "pad (in module ttnn)": [[248, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[249, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[250, "ttnn.permute"]], "polar (in module ttnn)": [[251, "ttnn.polar"]], "polar_bw (in module ttnn)": [[252, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[253, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[254, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[255, "ttnn.polyval"]], "pow (in module ttnn)": [[256, "ttnn.pow"]], "pow_bw (in module ttnn)": [[257, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[258, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[259, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[260, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[261, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[262, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[263, "ttnn.prod"]], "prod_bw (in module ttnn)": [[264, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[265, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[266, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[267, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[268, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[269, "ttnn.real"]], "real_bw (in module ttnn)": [[270, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[271, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[272, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[273, "ttnn.reciprocal_bw"]], "register_post_operation_hook() (in module ttnn)": [[274, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[275, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[276, "ttnn.reglu"]], "relu (in module ttnn)": [[277, "ttnn.relu"]], "relu6 (in module ttnn)": [[278, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[279, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[280, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[281, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[282, "ttnn.relu_min"]], "remainder (in module ttnn)": [[283, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[284, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[285, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[286, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[287, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[288, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[289, "ttnn.rms_norm"]], "round (in module ttnn)": [[290, "ttnn.round"]], "round_bw (in module ttnn)": [[291, "ttnn.round_bw"]], "rpow (in module ttnn)": [[292, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[293, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[294, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[295, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[296, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[297, "ttnn.rsub_bw"]], "scale_causal_mask_hw_dims_softmax_in_place (in module ttnn)": [[298, "ttnn.scale_causal_mask_hw_dims_softmax_in_place"]], "scale_mask_softmax (in module ttnn)": [[299, "ttnn.scale_mask_softmax"]], "scale_mask_softmax_in_place (in module ttnn)": [[300, "ttnn.scale_mask_softmax_in_place"]], "scatter (in module ttnn)": [[301, "ttnn.scatter"]], "selu (in module ttnn)": [[302, "ttnn.selu"]], "selu_bw (in module ttnn)": [[303, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[304, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[305, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[306, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[307, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[308, "ttnn.sign"]], "sign_bw (in module ttnn)": [[309, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[310, "ttnn.signbit"]], "silu (in module ttnn)": [[311, "ttnn.silu"]], "silu_bw (in module ttnn)": [[312, "ttnn.silu_bw"]], "sin (in module ttnn)": [[313, "ttnn.sin"]], "sin_bw (in module ttnn)": [[314, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[315, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[316, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[317, "ttnn.slice"]], "softmax (in module ttnn)": [[318, "ttnn.softmax"]], "softmax_in_place (in module ttnn)": [[319, "ttnn.softmax_in_place"]], "softplus (in module ttnn)": [[320, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[321, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[322, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[323, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[324, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[325, "ttnn.softsign_bw"]], "sort (in module ttnn)": [[326, "ttnn.sort"]], "sqrt (in module ttnn)": [[327, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[328, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[329, "ttnn.square"]], "square_bw (in module ttnn)": [[330, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[331, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[332, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[333, "ttnn.std"]], "sub_bw (in module ttnn)": [[334, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[335, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[336, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[337, "ttnn.subtract"]], "sum (in module ttnn)": [[338, "ttnn.sum"]], "swiglu (in module ttnn)": [[339, "ttnn.swiglu"]], "swish (in module ttnn)": [[340, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[341, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[342, "ttnn.tan"]], "tan_bw (in module ttnn)": [[343, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[344, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[345, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[346, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[347, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[348, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[349, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[350, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[351, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[352, "ttnn.to_device"]], "to_layout (in module ttnn)": [[353, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[354, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[355, "ttnn.to_torch"]], "topk (in module ttnn)": [[356, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[357, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[358, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[359, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[360, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[361, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[362, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[363, "ttnn.tril"]], "triu (in module ttnn)": [[364, "ttnn.triu"]], "trunc (in module ttnn)": [[365, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[366, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[367, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[368, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[369, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[370, "ttnn.upsample"]], "var (in module ttnn)": [[371, "ttnn.var"]], "where (in module ttnn)": [[372, "ttnn.where"]], "where_bw (in module ttnn)": [[373, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[374, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[375, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[376, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[377, "ttnn.zeros_like"]], "shape (class in ttnn)": [[384, "ttnn.Shape"]], "rank (ttnn.shape property)": [[384, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[384, "ttnn.Shape.to_rank"]]}})